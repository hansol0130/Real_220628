USE [JGHotel]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_SLIP_CREATE_206]

/*
USP_SLIP_CREATE_206 '2018-08-11', '1,2,3,4', '1201006'
*/

@SLIP_DATE VARCHAR(10),
@PAY_SEQ VARCHAR(MAX),
@EMP_NO VARCHAR(50)

AS


DECLARE @ROW_ID VARCHAR(50)

BEGIN TRAN

/*
==============================================================================================
차변 생성
==============================================================================================
*/

SET @ROW_ID = DBO.FN_GET_SLIP_NUMBER(@SLIP_DATE);

INSERT ACC_SLIP_MAST
(ROW_ID, ROW_NO, NO_TAX, CD_PC, CD_WDEPT, NO_DOCU, NO_DOLINE, CD_COMPANY, 
ID_WRITE, CD_DOCU, DT_ACCT, ST_DOCU, TP_DRCR, CD_ACCT, AMT, CD_PARTNER, NM_NOTE, 
CD_BIZAREA, CD_DEPT, CD_CC, CD_PJT, CD_EMPLOY, NO_BDOCU, NO_BDOLINE, TP_DOCU, NO_ACCT, 
CD_EXCH, RT_EXCH, AM_EX, TP_GUBUN, CD_MNGD1, NM_MNGD1, CD_MNGD2, NM_MNGD2, CD_MNGD3, NM_MNGD3, 
CD_MNGD4, NM_MNGD4, CD_MNGD5, NM_MNGD5, CD_MNGD6, NM_MNGD6, CD_MNGD7, NM_MNGD7, CD_MNGD8, NM_MNGD8, 
TP_EVIDENCE, PREV_SLIP_ID, NEXT_SLIP_ID, RESV_NO, PAY_SEQ, SEND_YN, USE_YN, 
CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER)
SELECT 
@ROW_ID								AS ROW_ID, 
RANK() OVER (ORDER BY B.PAY_SEQ)	AS ROW_NO, 
'*'									AS NO_TAX, 
1000								AS CD_PC,
C.C_CODE1							AS CD_WDEPT,
@ROW_ID								AS NO_DOCU,
RANK() OVER (ORDER BY B.PAY_SEQ)	AS NO_DOLINE, 
1000								AS CD_COMPANY,
C.S_CODE							AS ID_WRITE,
'206'								AS CD_DOCU,
REPLACE(@SLIP_DATE, '-', '')		AS DT_ACCT,
'1'									AS ST_DOCU,
'1'									AS TP_DRCR,
ACC_CODE							AS CD_ACCT,
(B.CASH_AMOUNT) + (B.CARD_AMOUNT)	AS AMT,
(CASE WHEN B.PAY_TYPE IN ('CARD', 'VTAC', 'ARS')  THEN 'AA129' 
WHEN B.PAY_TYPE = 'GIFT' THEN '00196' ELSE NULL END)								AS CD_PARTNER,
REPLACE(NOTE, '고객명', B.PAY_USER)	AS NM_NOTE,
'1000'								AS CD_BIZAREA,
C.C_CODE1							AS CD_DEPT,
C.C_CODE2							AS CD_CC,
'HOTEL'								AS CD_PJT,
C.S_CODE							AS CD_EMPLOY,
NULL								AS NO_BDOCU,
NULL								AS NO_BDOLINE,
'1'									AS TP_DOCU,
'0'									AS NO_ACCT,
NULL								AS CD_EXCH,
NULL								AS RT_EXCH,
NULL								AS AM_EX,
'1'									AS TP_GUBUN,
(CASE WHEN B.PAY_TYPE IN ('CARD', 'VTAC', 'ARS')  THEN 'AA129' 
WHEN B.PAY_TYPE = 'GIFT' THEN '00196' ELSE NULL END)									AS CD_MNGD1,
(CASE 
	WHEN B.PAY_TYPE IN ('CARD', 'VTAC', 'ARS') THEN (SELECT CODE_DESC FROM ACC_CODE_MANAGE WHERE M_CODE='A06' AND S_CODE='AA129') 
	WHEN B.PAY_TYPE = 'GIFT' THEN (SELECT CODE_DESC FROM ACC_CODE_MANAGE WHERE M_CODE='A06' AND S_CODE='00196') 
	ELSE NULL END)																		AS NM_MNGD1,
NULL																					AS CD_MNGD2,
NULL																					AS NM_MNGD2,
NULL																					AS CD_MNGD3,
NULL																					AS NM_MNGD3,
NULL								AS CD_MNGD4,
NULL								AS NM_MNGD4,
NULL								AS CD_MNGD5,
NULL								AS NM_MNGD5,
NULL								AS CD_MNGD6,
NULL								AS NM_MNGD6,
NULL								AS CD_MNGD7,
NULL								AS NM_MNGD7,
NULL								AS CD_MNGD8,
NULL								AS NM_MNGD8,
'0'									AS TP_EVIDENCE,
0									AS PREV_SLIP_ID,
0									AS NEXT_SLIP_ID,
A.RESV_NO							AS RESV_NO,
B.PAY_SEQ							AS PAY_SEQ,
'N'									AS SEND_YN,
'N'									AS USE_YN,
GETDATE()							AS CREATE_DATE,
C.S_CODE							AS CREATE_USER,
NULL								AS UPDATE_DATE,
NULL								AS UPDATE_USER
FROM HTL_RESV_MAST A
JOIN HTL_RESV_PAY B ON A.RESV_NO=B.RESV_NO
JOIN (
	SELECT S_CODE, C_CODE1, C_CODE2
	FROM ACC_CODE_MANAGE
	WHERE M_CODE='A04' AND S_CODE=@EMP_NO
) C ON 1=1
JOIN ACC_CODE_BASE D ON D.SLIP_TYPE='206' AND B.PAY_TYPE=D.P_TYPE AND D.TC_TYPE='1'
WHERE PAY_SEQ IN (SELECT VALUE FROM dbo.fn_Split(@PAY_SEQ, ','))
AND PAY_SEQ NOT IN (
	SELECT PAY_SEQ
	FROM ACC_SLIP_MAST
	WHERE PAY_SEQ IN (SELECT VALUE FROM dbo.fn_Split(@PAY_SEQ, ','))
	AND CD_DOCU='206' AND TP_DRCR='1'
)
AND B.SLIP_ID IS NULL
ORDER BY A.RESV_NO, B.PAY_NO

IF (@@error <> 0)
BEGIN

	ROLLBACK;
	RETURN;

END


/*
==============================================================================================
대변용 ROW_NO 구하기
==============================================================================================
*/

DECLARE @ROW_NO INT;
SELECT @ROW_NO = MAX(ROW_NO)
FROM ACC_SLIP_MAST WHERE ROW_ID=@ROW_ID

IF (@ROW_NO IS NULL) SET @ROW_NO = 0;

--PRINT (CONVERT(VARCHAR, @ROW_NO))
--RETURN;

/*
==============================================================================================
대변
==============================================================================================
*/


INSERT ACC_SLIP_MAST
(ROW_ID, ROW_NO, NO_TAX, CD_PC, CD_WDEPT, NO_DOCU, NO_DOLINE, CD_COMPANY, 
ID_WRITE, CD_DOCU, DT_ACCT, ST_DOCU, TP_DRCR, CD_ACCT, AMT, CD_PARTNER, NM_NOTE, 
CD_BIZAREA, CD_DEPT, CD_CC, CD_PJT, CD_EMPLOY, NO_BDOCU, NO_BDOLINE, TP_DOCU, NO_ACCT, 
CD_EXCH, RT_EXCH, AM_EX, TP_GUBUN, CD_MNGD1, NM_MNGD1, CD_MNGD2, NM_MNGD2, CD_MNGD3, NM_MNGD3, 
CD_MNGD4, NM_MNGD4, CD_MNGD5, NM_MNGD5, CD_MNGD6, NM_MNGD6, CD_MNGD7, NM_MNGD7, CD_MNGD8, NM_MNGD8, 
TP_EVIDENCE, PREV_SLIP_ID, NEXT_SLIP_ID, RESV_NO, PAY_SEQ, SEND_YN, USE_YN, 
CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER)
SELECT 
@ROW_ID										AS ROW_ID, 
RANK() OVER (ORDER BY B.PAY_SEQ) + @ROW_NO	AS ROW_NO, 
'*'											AS NO_TAX, 
1000										AS CD_PC,
C.C_CODE1									AS CD_WDEPT,
@ROW_ID										AS NO_DOCU,
RANK() OVER (ORDER BY B.PAY_SEQ) + @ROW_NO	AS NO_DOLINE, 
1000										AS CD_COMPANY,
C.S_CODE									AS ID_WRITE,
'206'										AS CD_DOCU,
REPLACE(@SLIP_DATE, '-', '')				AS DT_ACCT,
'1'											AS ST_DOCU,
'2'											AS TP_DRCR,
ACC_CODE									AS CD_ACCT,
(B.CASH_AMOUNT) + (B.CARD_AMOUNT)			AS AMT,
(CASE WHEN B.PAY_TYPE IN ('CARD', 'VTAC', 'ARS')  THEN 'AA129' 
WHEN B.PAY_TYPE = 'GIFT' THEN '00196' ELSE NULL END)								AS CD_PARTNER,
REPLACE(REPLACE(NOTE, '고객명', B.PAY_USER), '입금일자', CONVERT(VARCHAR, B.PAY_DATE, 112))	AS NM_NOTE,
'1000'								AS CD_BIZAREA,
C.C_CODE1							AS CD_DEPT,
C.C_CODE2							AS CD_CC,
'HOTEL'								AS CD_PJT,
C.S_CODE							AS CD_EMPLOY,
NULL								AS NO_BDOCU,
NULL								AS NO_BDOLINE,
'1'									AS TP_DOCU,
'0'									AS NO_ACCT,
NULL								AS CD_EXCH,
NULL								AS RT_EXCH,
NULL								AS AM_EX,
'1'									AS TP_GUBUN,
(CASE WHEN B.PAY_TYPE IN ('CARD', 'VTAC', 'ARS')  THEN 'AA129' 
WHEN B.PAY_TYPE = 'GIFT' THEN '00196' ELSE NULL END)									AS CD_MNGD1,
(CASE 
	WHEN B.PAY_TYPE IN ('CARD', 'VTAC', 'ARS') THEN (SELECT CODE_DESC FROM ACC_CODE_MANAGE WHERE M_CODE='A06' AND S_CODE='AA129') 
	WHEN B.PAY_TYPE = 'GIFT' THEN (SELECT CODE_DESC FROM ACC_CODE_MANAGE WHERE M_CODE='A06' AND S_CODE='00196') 
	ELSE NULL END)																		AS NM_MNGD1,
NULL																					AS CD_MNGD2,
NULL																					AS NM_MNGD2,
NULL																					AS CD_MNGD3,
NULL																					AS NM_MNGD3,
NULL								AS CD_MNGD4,
NULL								AS NM_MNGD4,
NULL								AS CD_MNGD5,
NULL								AS NM_MNGD5,
NULL								AS CD_MNGD6,
NULL								AS NM_MNGD6,
NULL								AS CD_MNGD7,
NULL								AS NM_MNGD7,
NULL								AS CD_MNGD8,
NULL								AS NM_MNGD8,
'0'									AS TP_EVIDENCE,
0									AS PREV_SLIP_ID,
0									AS NEXT_SLIP_ID,
A.RESV_NO							AS RESV_NO,
B.PAY_SEQ							AS PAY_SEQ,
'N'									AS SEND_YN,
'N'									AS USE_YN,
GETDATE()							AS CREATE_DATE,
C.S_CODE							AS CREATE_USER,
NULL								AS UPDATE_DATE,
NULL								AS UPDATE_USER
FROM HTL_RESV_MAST A
JOIN HTL_RESV_PAY B ON A.RESV_NO=B.RESV_NO
JOIN (
	SELECT S_CODE, C_CODE1, C_CODE2
	FROM ACC_CODE_MANAGE
	WHERE M_CODE='A04' AND S_CODE=@EMP_NO
) C ON 1=1
JOIN ACC_CODE_BASE D ON D.SLIP_TYPE='206' AND B.PAY_TYPE=D.P_TYPE AND D.TC_TYPE='2'
WHERE PAY_SEQ IN (SELECT VALUE FROM dbo.fn_Split(@PAY_SEQ, ','))
AND PAY_SEQ NOT IN (
	SELECT PAY_SEQ
	FROM ACC_SLIP_MAST
	WHERE PAY_SEQ IN (SELECT VALUE FROM dbo.fn_Split(@PAY_SEQ, ','))
	AND CD_DOCU='206' AND TP_DRCR='2'
)
AND B.SLIP_ID IS NULL
ORDER BY A.RESV_NO, B.PAY_NO

IF (@@error <> 0)
BEGIN

	ROLLBACK;
	RETURN;

END

/*
==============================================================================================
입금테이블 생성된 전표 연결
==============================================================================================
*/

IF (@@identity > 0)
BEGIN
	UPDATE HTL_RESV_PAY SET SLIP_ID=B.SLIP_ID, SLIP_DATE=B.CREATE_DATE
	FROM HTL_RESV_PAY A
	JOIN (
		SELECT SLIP_ID, PAY_SEQ, CREATE_DATE
		FROM ACC_SLIP_MAST
		WHERE PAY_SEQ IN (SELECT VALUE FROM dbo.fn_Split(@PAY_SEQ, ','))
		AND CD_DOCU='206' AND TP_DRCR='1'	
	) B ON A.PAY_SEQ=B.PAY_SEQ

	IF (@@error <> 0)
	BEGIN

		ROLLBACK;
		RETURN;

	END

END

COMMIT
GO
