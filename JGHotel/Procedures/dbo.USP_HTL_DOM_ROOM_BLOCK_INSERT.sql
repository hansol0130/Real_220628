USE [JGHotel]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_HTL_DOM_ROOM_BLOCK_INSERT]

/*
	USP_HTL_DOM_ROOM_BLOCK_INSERT '900332', '2', 'KKK6534', 'KKK6534', '
<ArrayOfBL>
  <BL>
    <CD>2014-08-11</CD>
    <HT>10</HT>
    <ST>10</ST>
    <RT>5</RT>
    <HU>0</HU>
    <SU>0</SU>
    <RU>0</RU>
    <HR>0</HR>
    <SR>0</SR>
    <RR>0</RR>
  </BL>
  <BL>
    <CD>2014-08-12</CD>
    <HT>10</HT>
    <ST>10</ST>
    <RT>5</RT>
    <HU>0</HU>
    <SU>0</SU>
    <RU>0</RU>
    <HR>0</HR>
    <SR>0</SR>
    <RR>0</RR>
  </BL>
</ArrayOfBL>'
*/

@HOTEL_CODE VARCHAR(10),
@ROOM_CODE VARCHAR(10),
@CREATE_USER VARCHAR(30),
@UPDATE_USER VARCHAR(30),
@XML VARCHAR(MAX)

AS

DECLARE @XML_DOCUMENT_HANDLE INT;
DECLARE @XML_DOCUMENT VARCHAR(MAX);
SET @XML_DOCUMENT = '<?xml version="1.0" encoding="euc-kr"?>' + @XML

EXEC SP_XML_PREPAREDOCUMENT @XML_DOCUMENT_HANDLE OUTPUT, @XML_DOCUMENT

-- 새로운 블럭 임시저장
SELECT *
INTO #TMP_TABLE_XML
FROM OPENXML (@XML_DOCUMENT_HANDLE, '/ArrayOfBL/BL', 2)
WITH (
	CHECK_IN_DATE varchar(10) './CD',
	HARD_TOTAL	INT './HT',
	SOFT_TOTAL	INT './ST',
	REQ_TOTAL	INT './RT'
) A

-- 기존 블럭 임시저장
SELECT A.* 
INTO #TMP_TABLE
FROM HTL_DOM_INFO_PRICE_DIR A
JOIN #TMP_TABLE_XML B ON A.HOTEL_CODE = @HOTEL_CODE AND A.ROOM_CODE = @ROOM_CODE AND A.CHECK_IN_DATE = B.CHECK_IN_DATE

DECLARE @HARD_TOTAL INT
SELECT @HARD_TOTAL = HARD_TOTAL FROM #TMP_TABLE_XML

DECLARE @SOFT_TOTAL INT
SELECT @SOFT_TOTAL = SOFT_TOTAL FROM #TMP_TABLE_XML

DECLARE @REQ_TOTAL INT
SELECT @REQ_TOTAL = REQ_TOTAL FROM #TMP_TABLE_XML

--블럭수정
IF (@HARD_TOTAL = 0)
 BEGIN
  UPDATE HTL_DOM_INFO_PRICE_DIR SET
	HARD_TOTAL = 0,
	HARD_USED = 0,
	HARD_REMAIN = 0,
	UPDATE_USER = @UPDATE_USER,
	UPDATE_DATE = GETDATE()
  FROM #TMP_TABLE A
  JOIN #TMP_TABLE_XML B ON A.HOTEL_CODE = @HOTEL_CODE AND A.ROOM_CODE = @ROOM_CODE AND A.CHECK_IN_DATE = B.CHECK_IN_DATE
  JOIN HTL_DOM_INFO_PRICE_DIR C ON C.HOTEL_CODE = @HOTEL_CODE AND C.ROOM_CODE = @ROOM_CODE AND C.CHECK_IN_DATE = A.CHECK_IN_DATE
 END
IF (@SOFT_TOTAL = 0)
 BEGIN
  UPDATE HTL_DOM_INFO_PRICE_DIR SET
	SOFT_TOTAL = 0,
	SOFT_USED = 0,
	SOFT_REMAIN = 0,
	UPDATE_USER = @UPDATE_USER,
	UPDATE_DATE = GETDATE()
  FROM #TMP_TABLE A
  JOIN #TMP_TABLE_XML B ON A.HOTEL_CODE = @HOTEL_CODE AND A.ROOM_CODE = @ROOM_CODE AND A.CHECK_IN_DATE = B.CHECK_IN_DATE
  JOIN HTL_DOM_INFO_PRICE_DIR C ON C.HOTEL_CODE = @HOTEL_CODE AND C.ROOM_CODE = @ROOM_CODE AND C.CHECK_IN_DATE = A.CHECK_IN_DATE
 END
IF (@REQ_TOTAL = 0)
 BEGIN
  UPDATE HTL_DOM_INFO_PRICE_DIR SET
	REQ_TOTAL = 0,
	REQ_USED = 0,
	REQ_REMAIN = 0,
	UPDATE_USER = @UPDATE_USER,
	UPDATE_DATE = GETDATE()
  FROM #TMP_TABLE A
  JOIN #TMP_TABLE_XML B ON A.HOTEL_CODE = @HOTEL_CODE AND A.ROOM_CODE = @ROOM_CODE AND A.CHECK_IN_DATE = B.CHECK_IN_DATE
  JOIN HTL_DOM_INFO_PRICE_DIR C ON C.HOTEL_CODE = @HOTEL_CODE AND C.ROOM_CODE = @ROOM_CODE AND C.CHECK_IN_DATE = A.CHECK_IN_DATE
 END
IF (@HARD_TOTAL > 0)
 BEGIN
UPDATE HTL_DOM_INFO_PRICE_DIR SET
	HARD_TOTAL = B.HARD_TOTAL,
	HARD_REMAIN = B.HARD_TOTAL - C.HARD_USED,
	UPDATE_USER = @UPDATE_USER,
	UPDATE_DATE = GETDATE()
FROM #TMP_TABLE A
JOIN #TMP_TABLE_XML B ON A.HOTEL_CODE = @HOTEL_CODE AND A.ROOM_CODE = @ROOM_CODE AND A.CHECK_IN_DATE = B.CHECK_IN_DATE
JOIN HTL_DOM_INFO_PRICE_DIR C ON C.HOTEL_CODE = @HOTEL_CODE AND C.ROOM_CODE = @ROOM_CODE AND C.CHECK_IN_DATE = A.CHECK_IN_DATE
END

IF (@SOFT_TOTAL > 0)
 BEGIN
UPDATE HTL_DOM_INFO_PRICE_DIR SET
	SOFT_TOTAL = B.SOFT_TOTAL,
	SOFT_REMAIN = B.SOFT_TOTAL - C.SOFT_USED,
	UPDATE_USER = @UPDATE_USER,
	UPDATE_DATE = GETDATE()
FROM #TMP_TABLE A
JOIN #TMP_TABLE_XML B ON A.HOTEL_CODE = @HOTEL_CODE AND A.ROOM_CODE = @ROOM_CODE AND A.CHECK_IN_DATE = B.CHECK_IN_DATE
JOIN HTL_DOM_INFO_PRICE_DIR C ON C.HOTEL_CODE = @HOTEL_CODE AND C.ROOM_CODE = @ROOM_CODE AND C.CHECK_IN_DATE = A.CHECK_IN_DATE
END

IF (@REQ_TOTAL > 0)
 BEGIN
UPDATE HTL_DOM_INFO_PRICE_DIR SET
	REQ_TOTAL = B.REQ_TOTAL,
	REQ_REMAIN = B.REQ_TOTAL - C.REQ_USED,
	UPDATE_USER = @UPDATE_USER,
	UPDATE_DATE = GETDATE()
FROM #TMP_TABLE A
JOIN #TMP_TABLE_XML B ON A.HOTEL_CODE = @HOTEL_CODE AND A.ROOM_CODE = @ROOM_CODE AND A.CHECK_IN_DATE = B.CHECK_IN_DATE
JOIN HTL_DOM_INFO_PRICE_DIR C ON C.HOTEL_CODE = @HOTEL_CODE AND C.ROOM_CODE = @ROOM_CODE AND C.CHECK_IN_DATE = A.CHECK_IN_DATE
END

--블럭 히스토리등록
INSERT HTL_DOM_INFO_BLOCK_HISTORY
(
	PRICE_SEQ, HOTEL_CODE, ROOM_CODE, CHECK_IN_DATE, AVAIL_TYPE, 
	HARD_TOTAL, SOFT_TOTAL, REQ_TOTAL, 
	HARD_USED, SOFT_USED, REQ_USED, 
	HARD_REMAIN, SOFT_REMAIN, REQ_REMAIN,
	ORG_HARD_TOTAL, ORG_SOFT_TOTAL, ORG_REQ_TOTAL,
	ORG_HARD_USED, ORG_SOFT_USED, ORG_REQ_USED, 
	ORG_HARD_REMAIN, ORG_SOFT_REMAIN, ORG_REQ_REMAIN,
	CREATE_USER, CREATE_DATE
)
SELECT *
FROM (
	SELECT A.PRICE_SEQ, @HOTEL_CODE AS HOTEL_CODE, @ROOM_CODE AS ROOM_CODE, C.CHECK_IN_DATE, C.AVAIL_TYPE,
	C.HARD_TOTAL, C.SOFT_TOTAL, C.REQ_TOTAL, C.HARD_USED, C.SOFT_USED, C.REQ_USED, C.HARD_REMAIN, C.SOFT_REMAIN, C.REQ_REMAIN,
	A.HARD_TOTAL AS ORG_HARD_TOTAL, A.SOFT_TOTAL AS ORG_SOFT_TOTAL, A.REQ_TOTAL AS ORG_REQ_TOTAL,
	A.HARD_USED AS ORG_HARD_USED, A.SOFT_USED AS ORG_SOFT_USED, A.REQ_USED AS ORG_REQ_USED,
	A.HARD_REMAIN AS ORG_HARD_REMAIN, A.SOFT_REMAIN AS ORG_SOFT_REMAIN, A.REQ_REMAIN AS ORG_REQ_REMAIN,
	@CREATE_USER AS CREATE_USER, GETDATE() AS CREATE_DATE
	FROM #TMP_TABLE A
	JOIN #TMP_TABLE_XML B ON A.HOTEL_CODE = @HOTEL_CODE AND A.ROOM_CODE = @ROOM_CODE AND A.CHECK_IN_DATE = B.CHECK_IN_DATE
	JOIN HTL_DOM_INFO_PRICE_DIR C ON C.HOTEL_CODE = @HOTEL_CODE AND C.ROOM_CODE = @ROOM_CODE AND C.CHECK_IN_DATE = A.CHECK_IN_DATE

	UNION ALL

	SELECT C.PRICE_SEQ, @HOTEL_CODE, @ROOM_CODE, C.CHECK_IN_DATE, C.AVAIL_TYPE,
		   C.HARD_TOTAL, C.SOFT_TOTAL, C.REQ_TOTAL, C.HARD_USED, C.SOFT_USED, C.REQ_USED, C.HARD_REMAIN, C.SOFT_REMAIN, C.REQ_REMAIN,
		   0, 0, 0,
		   0, 0, 0,
		   0, 0, 0,
		   @CREATE_USER, GETDATE()
	FROM #TMP_TABLE_XML A
	JOIN HTL_DOM_INFO_PRICE_DIR C ON C.HOTEL_CODE = @HOTEL_CODE AND C.ROOM_CODE = @ROOM_CODE AND C.CHECK_IN_DATE = A.CHECK_IN_DATE
	LEFT JOIN #TMP_TABLE B ON B.HOTEL_CODE = @HOTEL_CODE AND B.ROOM_CODE = @ROOM_CODE AND B.CHECK_IN_DATE = A.CHECK_IN_DATE
	WHERE B.HOTEL_CODE IS NULL
) A

EXEC SP_XML_REMOVEDOCUMENT @XML_DOCUMENT_HANDLE
GO
