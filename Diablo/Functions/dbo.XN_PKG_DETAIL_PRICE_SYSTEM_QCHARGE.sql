USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*-------------------------------------------------------------------------------------------------
■ Function_Name				: XN_PKG_DETAIL_PRICE_SYSTEM_QCHARGE
■ Description				: 행사정보 기준 유류할증료 검색
■ Input Parameter			:                  
		@PRO_CODE			: 행사코드
■ Output Parameter			: 
■ Output Value				: 
■ Exec						: 
---------------------------------------------------------------------------------------------------
■ Change History                   
---------------------------------------------------------------------------------------------------
	Date			Author			Description           
---------------------------------------------------------------------------------------------------
	2014-06-17		김성호			최초생성
	2014-07-03		김성호			시스템입력 유류할증료 백단위 절사
	2015-01-05		김성호			항공사별 지역구분 중 공항 매칭 데이터 우선 순위 적용
	2020-04-03		오준혁			성능을 위해 신규 생성 XN_PKG_DETAIL_SYSTEM_QCHARGE => XN_PKG_DETAIL_SYSTEM_QCHARGE_SET
	2021-11-29		김성호			INPUT 테이블 스키마 변경(UDT_PKG_DETAIL => UDT_PKG_DETAIL_PRICE
-------------------------------------------------------------------------------------------------*/ 
CREATE FUNCTION [dbo].[XN_PKG_DETAIL_PRICE_SYSTEM_QCHARGE]
(	
	@PKG_DETAIL_PRICE UDT_PKG_DETAIL_PRICE READONLY
)
RETURNS TABLE
AS
RETURN
(
	WITH LIST AS 
	(
		SELECT A.PRO_CODE, B.ARR_TRANS_CODE AS [AIRLINE_CODE], B.DEP_ARR_AIRPORT_CODE AS [AIRPORT_CODE], A.DEP_DATE, D.NATION_CODE, UPD.PRICE_SEQ
		FROM @PKG_DETAIL_PRICE UPD
		INNER JOIN PKG_DETAIL A WITH(NOLOCK) ON UPD.PRO_CODE = A.PRO_CODE
		INNER JOIN PRO_TRANS_SEAT B WITH(NOLOCK) ON A.SEAT_CODE = B.SEAT_CODE
		INNER JOIN PUB_AIRPORT C WITH(NOLOCK) ON B.DEP_ARR_AIRPORT_CODE = C.AIRPORT_CODE
		INNER JOIN PUB_CITY D WITH(NOLOCK) ON C.CITY_CODE = D.CITY_CODE
		WHERE A.SEAT_CODE > 0
		UNION ALL
		SELECT A.PRO_CODE, B.AIRLINE_CODE, B.AIRPORT_CODE, A.DEP_DATE, D.NATION_CODE, UPD.PRICE_SEQ
		FROM @PKG_DETAIL_PRICE UPD
		INNER JOIN PKG_DETAIL A WITH(NOLOCK) ON UPD.PRO_CODE = A.PRO_CODE
		INNER JOIN PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
		LEFT JOIN PUB_AIRPORT C WITH(NOLOCK) ON B.AIRPORT_CODE = C.AIRPORT_CODE
		LEFT JOIN PUB_CITY D WITH(NOLOCK) ON C.CITY_CODE = D.CITY_CODE
		WHERE A.SEAT_CODE <= 0
	)
	SELECT AA.PRO_CODE, AA.PRICE_SEQ, T2.[QCHARGE_DATE], ISNULL(T2.[ADT_QCHARGE], 0) AS [ADT_QCHARGE], ISNULL(T2.[CHD_QCHARGE], 0) AS [CHD_QCHARGE], ISNULL(T2.[INF_QCHARGE], 0) AS [INF_QCHARGE]
	FROM LIST AA
	OUTER APPLY (
		SELECT TOP 1 [QCHARGE_DATE], [ADT_QCHARGE],[CHD_QCHARGE],[INF_QCHARGE]
		FROM (
			SELECT TOP 1 
				BB.START_DATE AS [QCHARGE_DATE],
				FLOOR(BB.ADT_QCHARGE / POWER(10, 3)) * POWER(10, 3) AS [ADT_QCHARGE],
				FLOOR(BB.CHD_QCHARGE / POWER(10, 3)) * POWER(10, 3) AS [CHD_QCHARGE],
				FLOOR(BB.INF_QCHARGE / POWER(10, 3)) * POWER(10, 3) AS [INF_QCHARGE], 
				BB.NEW_DATE, 
				(CASE WHEN BB.END_DATE > AA.DEP_DATE THEN 1 ELSE 2 END) AS [DATE_ORDER],
				(CASE WHEN PATINDEX('%' + AA.AIRPORT_CODE + '%', BB.AIRPORT_CODES) > 0 THEN 1 ELSE 2 END) AS [ZONE_ORDER]
			FROM AIRLINE_EXC_QCHARGE BB WITH(NOLOCK)
			WHERE AA.AIRLINE_CODE = BB.AIRLINE_CODE and BB.START_DATE <= AA.DEP_DATE AND (PATINDEX('%' + AA.AIRPORT_CODE + '%', BB.AIRPORT_CODES) > 0 OR PATINDEX('%' + AA.NATION_CODE + '%', BB.NATION_CODES) > 0)
			ORDER BY DATE_ORDER, NEW_DATE DESC, ZONE_ORDER
			UNION ALL
			SELECT TOP 1 
				BB.START_DATE AS [QCHARGE_DATE],
				FLOOR(BB.ADT_QCHARGE / POWER(10, 3)) * POWER(10, 3) AS [ADT_QCHARGE],
				FLOOR(BB.CHD_QCHARGE / POWER(10, 3)) * POWER(10, 3) AS [CHD_QCHARGE],
				FLOOR(BB.INF_QCHARGE / POWER(10, 3)) * POWER(10, 3) AS [INF_QCHARGE], 
				BB.NEW_DATE, 
				(CASE WHEN BB.END_DATE > AA.DEP_DATE THEN 1 ELSE 2 END) AS [DATE_ORDER],
				(CASE WHEN PATINDEX('%' + AA.AIRPORT_CODE + '%', CC.AIRPORT_CODES) > 0 THEN 1 ELSE 2 END) AS [ZONE_ORDER]
			FROM AIRLINE_QCHARGE BB WITH(NOLOCK) 
			INNER JOIN AIRLINE_REGION CC WITH(NOLOCK) ON BB.AIRLINE_CODE = CC.AIRLINE_CODE AND BB.GROUP_SEQ = CC.GROUP_SEQ AND BB.REGION_SEQ = CC.REGION_SEQ
			WHERE AA.AIRLINE_CODE = BB.AIRLINE_CODE and BB.START_DATE <= AA.DEP_DATE AND (PATINDEX('%' + AA.AIRPORT_CODE + '%', CC.AIRPORT_CODES) > 0 OR PATINDEX('%' + AA.NATION_CODE + '%', CC.NATION_CODES) > 0)
			ORDER BY DATE_ORDER, NEW_DATE DESC, ZONE_ORDER
		) T1
		ORDER BY DATE_ORDER, NEW_DATE DESC, ZONE_ORDER
	) T2
)
GO
