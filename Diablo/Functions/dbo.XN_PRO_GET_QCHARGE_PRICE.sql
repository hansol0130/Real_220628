USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XN_PRO_GET_QCHARGE_PRICE
■ DESCRIPTION				: 행사별 유류할증료 검색
■ INPUT PARAMETER			: 
	@PRO_CODE				: 행사코드
■ OUTPUT PARAMETER			: 
■ EXEC						: 
	SELECT DBO.XN_PRO_GET_QCHARGE_PRICE('JPP1221-140102','')
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2014-01-22		김성호			최초생성
================================================================================================================*/ 
CREATE FUNCTION [dbo].[XN_PRO_GET_QCHARGE_PRICE]
(
	@PRO_CODE VARCHAR(20)
	, @SEARCH_DATE VARCHAR(10)
)
RETURNS DECIMAL(10)
AS
BEGIN
	DECLARE @QCHARGE_PRICE DECIMAL(10), @DATE DATETIME
	IF (@SEARCH_DATE = '')
		SET @DATE = GETDATE()
	ELSE
		SET @DATE = CONVERT(DATETIME, @SEARCH_DATE)

	IF EXISTS(SELECT 1 FROM PKG_DETAIL A WITH(NOLOCK) WHERE A.PRO_CODE = @PRO_CODE AND A.TRANSFER_TYPE = 1)
	BEGIN
		WITH LIST AS 
		(
			SELECT B.ARR_TRANS_CODE AS [AIRLINE_CODE], B.DEP_ARR_AIRPORT_CODE AS [AIRPORT_CODE], A.DEP_DATE, D.NATION_CODE
			FROM PKG_DETAIL A WITH(NOLOCK)
			INNER JOIN PRO_TRANS_SEAT B WITH(NOLOCK) ON A.SEAT_CODE = B.SEAT_CODE
			INNER JOIN PUB_AIRPORT C WITH(NOLOCK) ON B.DEP_ARR_AIRPORT_CODE = C.AIRPORT_CODE
			INNER JOIN PUB_CITY D WITH(NOLOCK) ON C.CITY_CODE = D.CITY_CODE
			WHERE A.PRO_CODE = @PRO_CODE
		)
		SELECT TOP 1 @QCHARGE_PRICE = A.QCHARGE_PRICE
		FROM (
			SELECT BB.NEW_DATE, BB.QCHARGE_PRICE
			FROM LIST AA
			INNER JOIN AIRLINE_EXC_QCHARGE BB ON AA.AIRLINE_CODE = BB.AIRLINE_CODE
			WHERE BB.START_DATE <= @DATE AND BB.END_DATE > @DATE AND (PATINDEX('%' + AA.AIRPORT_CODE + '%', BB.AIRPORT_CODES) > 0 OR PATINDEX('%' + AA.NATION_CODE + '%', BB.NATION_CODES) > 0)
			UNION ALL
			SELECT BB.NEW_DATE, BB.QCHARGE_PRICE
			FROM LIST AA
			INNER JOIN AIRLINE_QCHARGE BB ON AA.AIRLINE_CODE = BB.AIRLINE_CODE
			INNER JOIN AIRLINE_REGION CC ON BB.AIRLINE_CODE = CC.AIRLINE_CODE AND BB.GROUP_SEQ = CC.GROUP_SEQ AND BB.REGION_SEQ = CC.REGION_SEQ
			WHERE BB.START_DATE <= @DATE AND BB.END_DATE > @DATE AND (PATINDEX('%' + AA.AIRPORT_CODE + '%', CC.AIRPORT_CODES) > 0 OR PATINDEX('%' + AA.NATION_CODE + '%', CC.NATION_CODES) > 0)
		) A
		ORDER BY A.NEW_DATE DESC
	END
	ELSE IF EXISTS(SELECT 1 FROM PKG_DETAIL A WITH(NOLOCK) WHERE A.PRO_CODE = @PRO_CODE AND A.TRANSFER_TYPE = 3)
	BEGIN
		WITH LIST AS 
		(
			SELECT B.AIRLINE_CODE, B.AIRPORT_CODE, A.DEP_DATE, D.NATION_CODE
			FROM PKG_DETAIL A WITH(NOLOCK)
			INNER JOIN PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
			INNER JOIN PUB_AIRPORT C WITH(NOLOCK) ON B.AIRPORT_CODE = C.AIRPORT_CODE
			INNER JOIN PUB_CITY D WITH(NOLOCK) ON C.CITY_CODE = D.CITY_CODE
			WHERE A.PRO_CODE = @PRO_CODE
		)
		SELECT TOP 1 @QCHARGE_PRICE = A.QCHARGE_PRICE
		FROM (
			SELECT BB.NEW_DATE, BB.QCHARGE_PRICE
			FROM LIST AA
			INNER JOIN AIRLINE_EXC_QCHARGE BB ON AA.AIRLINE_CODE = BB.AIRLINE_CODE
			WHERE BB.START_DATE <= @DATE AND BB.END_DATE > @DATE AND (PATINDEX('%' + AA.AIRPORT_CODE + '%', BB.AIRPORT_CODES) > 0 OR PATINDEX('%' + AA.NATION_CODE + '%', BB.NATION_CODES) > 0)
			UNION ALL
			SELECT BB.NEW_DATE, BB.QCHARGE_PRICE
			FROM LIST AA
			INNER JOIN AIRLINE_QCHARGE BB ON AA.AIRLINE_CODE = BB.AIRLINE_CODE
			INNER JOIN AIRLINE_REGION CC ON BB.AIRLINE_CODE = CC.AIRLINE_CODE AND BB.GROUP_SEQ = CC.GROUP_SEQ AND BB.REGION_SEQ = CC.REGION_SEQ
			WHERE BB.START_DATE <= @DATE AND BB.END_DATE > @DATE AND (PATINDEX('%' + AA.AIRPORT_CODE + '%', CC.AIRPORT_CODES) > 0 OR PATINDEX('%' + AA.NATION_CODE + '%', CC.NATION_CODES) > 0)
		) A
		ORDER BY A.NEW_DATE DESC
	END

	RETURN (@QCHARGE_PRICE)
END



GO
