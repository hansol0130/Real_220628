USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_CUS_VIP_RESERVE_LIST_SELECT
■ DESCRIPTION				: VIP 고객 추정 예약리스트 검색
■ INPUT PARAMETER			: 

	@SELECT_TYPE			: VIP 적용 기준 (1: 생년월일+고객명, 2: 고객번호)
	@DATE_TYPE				: 일자조회 기준 (1: 예약일자, 2: 출발일자)
	@CUS_GRADE				: 고객등급 (0: 전체, 2: 그린, 4: 블루, 6: 퍼플)
	@START_DATE				: 조회 시작일
	@END_DATE				: 조회 종료일

■ OUTPUT PARAMETER			: 
■ EXEC						: 

	exec XP_CUS_VIP_RESERVE_LIST_SELECT 1, 1, 0, '2018-02-01', '2018-02-10'
	go 
	exec XP_CUS_VIP_RESERVE_LIST_SELECT 1, 2, 0, '2018-02-01', '2018-02-10'

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2018-02-08		김성호			최초생성
   2019-02-07		김남훈			17년 -> 전년도, 판매처 추가
================================================================================================================*/ 
CREATE  PROCEDURE [dbo].[XP_CUS_VIP_RESERVE_LIST_SELECT_20190225BAK]
	@SELECT_TYPE	INT,
	@DATE_TYPE		INT,
	@CUS_GRADE		INT,
	@START_DATE		SMALLDATETIME,
	@END_DATE		SMALLDATETIME
AS  
BEGIN

	DECLARE @SQLSTRING NVARCHAR(MAX) = '', 
		@PARMDEFINITION NVARCHAR(1000) = '',
		@WHERE NVARCHAR(MAX) = N' A.CUS_GRADE > 0', 
		@M_JOIN NVARCHAR(MAX) = N' A.RES_NAME = B.VIP_NAME AND A.BIRTH_DATE = B.VIP_BIRTH', 
		@D_JOIN NVARCHAR(MAX) = N' B.CUS_NAME = C.VIP_NAME AND B.BIRTH_DATE = C.VIP_BIRTH',
		@DATE NVARCHAR(MAX) = N' A.NEW_DATE',
		@VIP_YEAR VARCHAR(4)

	SET @END_DATE = DATEADD(DD, 1, @END_DATE)
	SET @VIP_YEAR =  DATEPART(yy,DATEADD(YYYY, -1, GETDATE()))

	IF @CUS_GRADE > 0
	BEGIN
		SET @WHERE = N' A.CUS_GRADE = @CUS_GRADE'
	END

	IF @SELECT_TYPE = 2
	BEGIN
		SELECT @M_JOIN = N' A.CUS_NO = B.VIP_CUS_NO'
			, @D_JOIN = N' B.CUS_NO = C.VIP_CUS_NO'
	END

	IF @DATE_TYPE = 2
	BEGIN
		SET @DATE = N' A.DEP_DATE'
	END


	SET @SQLSTRING = N'
	DECLARE @VIP_LIST TABLE (VIP_CUS_NO INT PRIMARY KEY, VIP_NAME VARCHAR(20), VIP_BIRTH DATETIME, VIP_GRADE INT, VIP_KEY VARCHAR(30));

	INSERT @VIP_LIST
	SELECT A.CUS_NO AS [VIP_CUS_NO], A.CUS_NAME AS [VIP_NAME], A.BIRTH_DATE AS [VIP_BIRTH], A.CUS_GRADE AS [VIP_GRADE]
		, (CONVERT(VARCHAR(8), A.BIRTH_DATE, 112) + A.CUS_NAME) AS [VIP_KEY]
	FROM CUS_CUSTOMER_damo A WITH(NOLOCK)
	WHERE ' + @WHERE + N';

	WITH CUS_LIST AS (
		SELECT B.*, A.RES_CODE
			, ISNULL((SELECT TOP 1 AA.SEQ_NO FROM RES_CUSTOMER_DAMO AA WITH(NOLOCK) WHERE AA.RES_CODE = A.RES_CODE AND AA.CUS_NAME = A.RES_NAME AND AA.BIRTH_DATE = A.BIRTH_DATE AND AA.RES_STATE = 0), 0) AS [SEQ_NO]
		FROM RES_MASTER_damo A WITH(NOLOCK)
		INNER JOIN @VIP_LIST B ON ' + @M_JOIN + N'
		WHERE ' + @DATE + N' >= @START_DATE AND ' + @DATE + N' < @END_DATE AND A.RES_STATE < 7
		UNION
		SELECT C.*, A.RES_CODE, B.SEQ_NO
		FROM RES_MASTER_damo A WITH(NOLOCK)
		INNER JOIN RES_CUSTOMER_damo B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
		INNER JOIN @VIP_LIST C ON ' + @D_JOIN + N'
		WHERE ' + @DATE + N' >= @START_DATE AND ' + @DATE + N' < @END_DATE AND A.RES_STATE < 7 AND B.RES_STATE = 0
	)
	, RES_LIST AS (
		SELECT B.*, ''예약자'' AS [고객구분]
			, A.CUS_NO, A.DEP_DATE, A.ARR_DATE, A.NEW_TEAM_NAME
			, A.MASTER_CODE, A.PRO_CODE, A.PROVIDER, A.RES_NAME, '''' AS [CUS_NAME], A.BIRTH_DATE
			, 0 AS [SALE_PRICE], 0 AS [TAX_PRICE], 0 AS [CHG_PRICE], 0 AS [DC_PRICE], 0 AS [PENALTY_PRICE], 0 AS [POINT_PRICE], 0 AS [판매가]
			, A.SALE_EMP_CODE
			--, (SELECT TOP 1 AA.POINT_RATE FROM RES_CUSTOMER_DAMO AA WITH(NOLOCK) WHERE AA.RES_CODE = A.RES_CODE AND AA.RES_STATE = 0) AS [적용포인트]
			, 0 AS [적용포인트]
			, A.NOR_TEL1, A.NOR_TEL2, A.NOR_TEL3
			, A.SALE_COM_CODE
		FROM RES_MASTER_damo A WITH(NOLOCK)
		INNER JOIN CUS_LIST B ON A.RES_CODE = B.RES_CODE AND A.RES_NAME = B.VIP_NAME AND A.BIRTH_DATE = B.VIP_BIRTH AND B.SEQ_NO = 0
		UNION ALL
		SELECT C.*, ''출발자'' AS [고객구분]
			, B.CUS_NO, A.DEP_DATE, A.ARR_DATE, A.NEW_TEAM_NAME
			, A.MASTER_CODE, A.PRO_CODE, A.PROVIDER, A.RES_NAME, B.CUS_NAME, B.BIRTH_DATE
			, B.SALE_PRICE, B.TAX_PRICE, B.CHG_PRICE, B.DC_PRICE, B.PENALTY_PRICE, B.POINT_PRICE
			, (ISNULL(B.SALE_PRICE, 0) - ISNULL(B.DC_PRICE, 0) + ISNULL(B.CHG_PRICE, 0) + ISNULL(B.TAX_PRICE, 0) + ISNULL(B.PENALTY_PRICE, 0)) AS [판매가]
			, A.SALE_EMP_CODE
			, B.POINT_RATE AS [적용포인트]
			, B.NOR_TEL1, B.NOR_TEL2, B.NOR_TEL3
			, A.SALE_COM_CODE
		FROM RES_MASTER_damo A WITH(NOLOCK)
		INNER JOIN RES_CUSTOMER_damo B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
		INNER JOIN CUS_LIST C ON B.RES_CODE = C.RES_CODE AND B.CUS_NAME = C.VIP_NAME AND B.BIRTH_DATE = C.VIP_BIRTH AND B.SEQ_NO = C.SEQ_NO
	)
	SELECT 
		(CASE WHEN ISNULL(C.POINT_CONSENT, D.POINT_CONSENT) = ''Y'' THEN ''Y'' ELSE ''N'' END) AS [포인트동의여부],
		(CASE WHEN B.POINT_NO IS NULL THEN ''N'' ELSE ''Y'' END) AS [포인트자동적립여부],
		(CASE WHEN F.CUS_NO IS NULL THEN '''' ELSE F.CUS_GRADE_NAME END) AS [전년도VIP],
		A.VIP_CUS_NO AS [VIP고객번호],
		A.VIP_NAME AS [VIP고객명],
		CONVERT(DATE, A.VIP_BIRTH) AS [VIP생년월일],
		(CASE A.VIP_GRADE WHEN 6 THEN ''퍼플'' WHEN 4 THEN ''블루'' WHEN 2 THEN ''그린'' END) AS [고객등급],
		
		A.고객구분,
		A.CUS_NO AS [고객번호],
		(CASE WHEN A.CUS_NO = F.CUS_NO THEN '''' ELSE ''V'' END) AS [비매칭],
		ISNULL(C.CUS_ID, D.CUS_ID) AS [아이디],
		A.RES_NAME AS [예약자], 
		A.CUS_NAME AS [출발자], 
		A.SEQ_NO AS [예약순번], 
		(SELECT PUB_VALUE FROM COD_PUBLIC AA WITH(NOLOCK) WHERE AA.PUB_TYPE = ''RES.AGENT.TYPE'' AND AA.PUB_CODE = A.PROVIDER) AS [예약구분],
		A.PRO_CODE AS [행사코드], 
		A.RES_CODE AS [예약코드],
		A.NEW_TEAM_NAME AS [담당팀명],
		(SELECT KOR_NAME FROM AGT_MASTER WHERE AGT_CODE = A.SALE_COM_CODE) AS [판매처],
		A.SALE_PRICE AS [상품가], A.TAX_PRICE AS [TAX], A.CHG_PRICE AS [변동가], A.DC_PRICE AS [할인가], A.PENALTY_PRICE AS [페널티], A.POINT_PRICE AS [포인트], A.판매가, A.적용포인트 AS [포인트율],
		E.KOR_NAME AS [예약접수직원], 
		A.NOR_TEL1 + ''-'' + A.NOR_TEL2 + ''-'' + A.NOR_TEL3 AS [여행자전화번호],
		(ISNULL(C.NOR_TEL1, D.NOR_TEL1) + ''-'' + ISNULL(C.NOR_TEL2, D.NOR_TEL2) + ''-'' + ISNULL(C.NOR_TEL3, D.NOR_TEL3)) AS [회원전화번호],
		(SELECT COUNT(*) FROM RES_CUSTOMER_DAMO AA WITH(NOLOCK) WHERE AA.RES_CODE = A.RES_CODE AND AA.RES_STATE = 0) AS [출발총원],
		DBO.FN_RES_GET_TOTAL_PRICE(A.RES_CODE) as [출발총판매액],
		CONVERT(DATE, A.ARR_DATE) AS [도착일자]
		--, A.* 
	FROM RES_LIST A
	LEFT JOIN CUS_POINT B WITH(NOLOCK) ON A.CUS_NO = B.CUS_NO AND A.RES_CODE = B.RES_CODE AND B.POINT_TYPE = 1
	LEFT JOIN CUS_MEMBER C WITH(NOLOCK) ON A.CUS_NO = C.CUS_NO
	LEFT JOIN CUS_MEMBER_SLEEP D WITH(NOLOCK) ON A.CUS_NO = D.CUS_NO
	LEFT JOIN EMP_MASTER_damo E WITH(NOLOCK) ON A.SALE_EMP_CODE = E.EMP_CODE
	LEFT JOIN CUS_VIP_HISTORY F WITH(NOLOCK) ON A.CUS_NO = F.CUS_NO AND F.VIP_YEAR = '+@VIP_YEAR+'
	ORDER BY A.VIP_GRADE DESC, A.DEP_DATE, A.RES_CODE, A.SEQ_NO'

	SET @PARMDEFINITION = N'
		@CUS_GRADE	INT,
		@START_DATE	SMALLDATETIME,
		@END_DATE	SMALLDATETIME';

	--PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@CUS_GRADE,
		@START_DATE,
		@END_DATE

END

GO
