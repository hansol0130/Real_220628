USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



/*================================================================================================================
■ USP_NAME					: SP_DOC_NON_PROCESS_LIST_SELECT_BAK
■ DESCRIPTION				: 미처리문서 리스트 검색
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			: 
■ EXEC						: 

	exec SP_DOC_NON_PROCESS_LIST_SELECT @EDI_CODES='''1704196931,1707077697''',@RCV_TEAM_CODE='521',@DOC_TYPE='0',@DETAIL_TYPE='0',@FOLDER_TYPE=3,@AGT_CODE=NULL,@START_DATE=NULL,@END_DATE=NULL

	exec SP_DOC_NON_PROCESS_LIST_SELECT @EDI_CODES='',@RCV_TEAM_CODE='521',@DOC_TYPE='0',@DETAIL_TYPE='0',@FOLDER_TYPE=3,@AGT_CODE=NULL,@START_DATE=NULL,@END_DATE=NULL

	exec SP_DOC_NON_PROCESS_LIST_SELECT @EDI_CODES=N'1708048121,1708048440,1704196931',@RCV_TEAM_CODE='521',@DOC_TYPE='0',@DETAIL_TYPE='0',@FOLDER_TYPE=3,@AGT_CODE=NULL,@START_DATE=NULL,@END_DATE=NULL

	exec SP_DOC_NON_PROCESS_LIST_SELECT @EDI_CODES=NULL,@RCV_TEAM_CODE='529',@DOC_TYPE='0',@DETAIL_TYPE='3',@FOLDER_TYPE=3,@AGT_CODE=NULL,@START_DATE=NULL,@END_DATE=NULL

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2017-07-28		김성호			최초생성
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[SP_DOC_NON_PROCESS_LIST_SELECT_BAK]
	@EDI_CODES		VARCHAR(8000),
	@RCV_TEAM_CODE	CHAR(3), 
	@DOC_TYPE		INT, 
	@DETAIL_TYPE	INT,
	@FOLDER_TYPE	INT, 
	@AGT_CODE		VARCHAR(10),
	@START_DATE		DATETIME,
	@END_DATE		DATETIME
AS
BEGIN

	DECLARE
		@SQLSTRING		 NVARCHAR(MAX), 
		@PARMDEFINITION	 NVARCHAR(1000), 
		@WHERE			 NVARCHAR(1000) = '',
		@WHERE_DATE		 NVARCHAR(100) = '';

	--DECLARE @RCV_TEAM_CODE CHAR(3), @DOC_TYPE VARCHAR(10), @DETAIL_TYPE VARCHAR(10), @FOLDER_TYPE INT, @AGT_CODE VARCHAR(10)

	--SELECT
	--	@RCV_TEAM_CODE = DBO.FN_PARAM(@KEY, 'RcvTeamCode'),
	--	@DOC_TYPE = DBO.FN_PARAM(@KEY, 'DocType'),
	--	@DETAIL_TYPE = DBO.FN_PARAM(@KEY, 'DetailType'),
	--	@AGT_CODE = DBO.FN_PARAM(@KEY, 'AgtCode'),
	--	@FOLDER_TYPE = DBO.FN_PARAM(@KEY, 'FolderType')

	IF @RCV_TEAM_CODE = '529'
	BEGIN
		SET @RCV_TEAM_CODE = '521'
	END

	IF LEN(@EDI_CODES) > 0
	BEGIN
		SET @WHERE = 'WHERE A.EDI_CODE IN (SELECT Data FROM FN_SPLIT(@EDI_CODES, '',''))'
	END
	ELSE
	BEGIN
		SET @WHERE = 'WHERE A.RCV_TEAM_CODE = @RCV_TEAM_CODE AND A.EDI_STATUS = ''3'' AND A.RCV_CODE IS NULL'

		IF @DOC_TYPE > 0
		BEGIN
			SET @WHERE = @WHERE + ' AND A.DOC_TYPE = @DOC_TYPE'
		END

		IF @DETAIL_TYPE > 0
		BEGIN
			SET @WHERE = @WHERE + ' AND A.DETAIL_TYPE = @DETAIL_TYPE'
		END

		IF @FOLDER_TYPE > 0
		BEGIN
			SET @WHERE = @WHERE + ' AND A.FOLDER_TYPE = @FOLDER_TYPE'
		END

		IF LEN(@AGT_CODE) > 0
		BEGIN
			SET @WHERE = @WHERE + ' AND A.AGT_CODE = @AGT_CODE'
		END

		IF @START_DATE IS NOT NULL
		BEGIN
			IF @END_DATE IS NULL
			BEGIN
				SET @END_DATE = DATEADD(YEAR, 1, GETDATE())
			END

			SET @WHERE_DATE = ' AND C.DEP_DATE >= @START_DATE AND C.DEP_DATE < (@END_DATE + 1)'

			--SELECT
				--@JOIN_TABLE = 'INNER JOIN PKG_DETAIL B WITH(NOLOCK) ON A.PRO_CODE = B.PRO_CODE',
				--@WHERE = @WHERE + ' AND B.DEP_DATE >= @START_DATE AND B.DEP_DATE < (@END_DATE + 1)'
		END
	END

	SET @SQLSTRING = '
	WITH SET_LIST AS (
		SELECT A.*
		FROM (
			SELECT A.EDI_CODE, B.PRO_CODE, B.CUR_TYPE, B.KOREAN_PRICE, ROW_NUMBER() OVER (PARTITION BY A.EDI_CODE ORDER BY B.LAND_SEQ_NO) AS [ROWNUM]
			FROM EDI_MASTER_damo A WITH(NOLOCK)
			INNER JOIN SET_LAND_AGENT B WITH(NOLOCK) ON A.EDI_CODE = B.EDI_CODE
			' + @WHERE + '
			UNION ALL
			SELECT A.EDI_CODE, B.PRO_CODE, B.CUR_TYPE, B.KOREAN_PRICE, ROW_NUMBER() OVER (PARTITION BY A.EDI_CODE ORDER BY B.GRP_SEQ_NO) AS [ROWNUM]
			FROM EDI_MASTER_damo A WITH(NOLOCK)
			INNER JOIN SET_GROUP B WITH(NOLOCK) ON A.EDI_CODE = B.EDI_CODE
			' + @WHERE + '
		) A
		WHERE A.ROWNUM = 1
	)
	SELECT A.EDI_CODE, A.DOC_TYPE, A.DETAIL_TYPE, A.DETAIL_NAME, A.NEW_TEAM_NAME, A.NEW_NAME, B.KOR_NAME AS [AGT_NAME], C.PRO_CODE, A.PAY_BANK
		, damo.dbo.dec_varchar(''DIABLO'', ''dbo.EDI_MASTER'', ''PAY_ACCOUNT'', A.SEC_PAY_ACCOUNT) AS PAY_ACCOUNT
		, A.PAY_RECEIPT, A.PRICE, A.REAL_PRICE, A.SUBJECT, D.CUR_TYPE, D.KOREAN_PRICE
		, (SELECT SUBSTRING(C.PRO_NAME, (CHARINDEX((CASE WHEN CHARINDEX(''】'', C.PRO_NAME) > 0 THEN ''】'' ELSE '']'' END), C.PRO_NAME) + 1), 100)) AS [PRO_NAME]
		, STUFF((
			SELECT (''|'' + NEW_NAME + ''§'' + COMMENT) AS [text()] 
			FROM EDI_COMMENT AA WITH(NOLOCK) 
			WHERE AA.EDI_CODE = A.EDI_CODE AND AA.NEW_CODE IN (
				SELECT EMP_CODE FROM EMP_MASTER_DAMO BB WITH(NOLOCK) WHERE BB.TEAM_CODE = @RCV_TEAM_CODE
			) FOR XML PATH('''') 
		), 1, 1, '''') AS [COMMENT_INFO]
	FROM EDI_MASTER_damo A WITH(NOLOCK)
	LEFT JOIN AGT_MASTER B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE
	LEFT JOIN PKG_DETAIL C WITH(NOLOCK) ON A.PRO_CODE = C.PRO_CODE
	LEFT JOIN SET_LIST D ON A.EDI_CODE = D.EDI_CODE
	' + @WHERE + '
	' + @WHERE_DATE + '
	ORDER BY A.DETAIL_TYPE, A.NEW_TEAM_NAME, B.AGT_NAME'


	SET @PARMDEFINITION = N'
		@EDI_CODES VARCHAR(8000),
		@RCV_TEAM_CODE CHAR(3),
		@DOC_TYPE INT,
		@DETAIL_TYPE INT,
		@FOLDER_TYPE INT,
		@AGT_CODE VARCHAR(10),
		@START_DATE DATETIME,
		@END_DATE DATETIME';

	--PRINT @SQLSTRING
		
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@EDI_CODES,
		@RCV_TEAM_CODE,
		@DOC_TYPE,
		@DETAIL_TYPE,
		@FOLDER_TYPE,
		@AGT_CODE,
		@START_DATE,
		@END_DATE;
	
	/*
	SELECT A.EDI_CODE, A.DOC_TYPE, A.DETAIL_TYPE, A.NEW_TEAM_NAME,  A.NEW_NAME, A.[SUBJECT], A.PRICE, A.REAL_PRICE, A.PAY_BANK
		, damo.dbo.dec_varchar('DIABLO', 'dbo.EDI_MASTER', 'PAY_ACCOUNT', A.SEC_PAY_ACCOUNT) AS PAY_ACCOUNT
		, A.PAY_RECEIPT, A.TERM_PAYMENT, A.PRO_CODE, A.RCV_DATE, A.EDI_STATUS, Z.KOR_NAME AS [AGT_NAME]
		, (SELECT DEP_DATE FROM PKG_DETAIL WITH(NOLOCK) WHERE PRO_CODE = A.PRO_CODE) AS [DEP_DATE]
		, (SELECT NEW_DATE FROM EDI_APPROVAL WITH(NOLOCK) WHERE EDI_CODE = A.EDI_CODE AND SEQ_NO = 1) AS [NEW_DATE]
		, STUFF((SELECT ('|' + NEW_NAME + '§' + COMMENT) AS [text()] FROM EDI_COMMENT WITH(NOLOCK) WHERE EDI_CODE = A.EDI_CODE AND NEW_CODE IN (SELECT EMP_CODE FROM EMP_MASTER WHERE TEAM_CODE = '521') FOR XML PATH('') ), 1, 1, '') AS [COMMENT_INFO]
	FROM EDI_MASTER_DAMO A WITH(NOLOCK)
	LEFT JOIN AGT_MASTER Z WITH(NOLOCK) ON A.AGT_CODE = Z.AGT_CODE
	--#조인테이블
	--#검색조건
	--#정렬조건
*/

END
GO
