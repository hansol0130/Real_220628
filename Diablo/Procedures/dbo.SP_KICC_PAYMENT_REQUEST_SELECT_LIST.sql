USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*==================================================================================
	SQL.함수_결제요청정보_조회
====================================================================================
- SP 명 : SP_KICC_PAYMENT_REQUEST_SELECT
- 기 능 : KICC 결제 요청정보 리스트 조회 
====================================================================================
	참고내용
====================================================================================
- 예제
 

 select top 100 * from
 
 LAST_SEND_DATE
 exec SP_KICC_PAYMENT_REQUEST_SELECT_LIST @RES_CODE=N'RP1809059242',@PAY_TYPE = 0 
 exec SP_KICC_PAYMENT_REQUEST_SELECT_LIST @RES_CODE=N'RP1902017216',@PAY_TYPE = 0 

 SP_KICC_PAYMENT_REQUEST_SELECT_LIST 'RP1812247210',''
 
====================================================================================
	변경내역
====================================================================================
- 2019-01-08 박형만  생성
- 2021-06-21 김영민 smspay추가
===================================================================================*/
CREATE PROC [dbo].[SP_KICC_PAYMENT_REQUEST_SELECT_LIST]
	@RES_CODE RES_CODE,
	--@REQ_CTR_NO VARCHAR(30)=NULL,  --요청 승인 번호
	@PAY_TYPE INT,
	@PAY_ORDER INT = 0 
AS 
BEGIN


--DECLARE @RES_CODE RES_CODE,
--	--@REQ_CTR_NO VARCHAR(30)=NULL,  --요청 승인 번호
--	@PAY_TYPE INT,
--	@PAY_ORDER INT 

--SET @RES_CODE = 'RP1812247210'
--SET @PAY_TYPE = 0 
--SET @PAY_ORDER = 0




--declare @CUS_ID		VARCHAR(20) = null ,
--	@CUS_NAME	VARCHAR(20) = null ,
--	@CUS_BIRTH	VARCHAR(10) = null ,
--	@GENDER		VARCHAR(1) = null ,
--	@RES_CODE	VARCHAR(20) = null ,
--	@CUS_TEL	VARCHAR(20) = null ,
--	@CUS_EMAIL	VARCHAR(40) = null  
--SET @CUS_ID = ''
--SET @CUS_TEL = '01091852481'
--SET @CUS_NAME = '박형만'

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
 
DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(1000), @WHERE NVARCHAR(1000),@ORDER_BY NVARCHAR(1000)

DECLARE @PAY_REQ_TYPE VARCHAR(100)
SET @PAY_REQ_TYPE = CASE WHEN @PAY_TYPE = 1 THEN 'VACCT' 
						WHEN @PAY_TYPE = 2 THEN 'CARD'
						WHEN @PAY_TYPE = 3 THEN 'ARS' 
						WHEN @PAY_TYPE = 4 THEN 'SMSPAY' ELSE  'VACCT,ARS,CARD,SMSPAY'  END  
 --SELECT * FROM DBO.FN_SPLIT('VACCT,ARS,CARD',',')
 SET @WHERE = 'AND A.PAY_REQ_TYPE IN ( SELECT DATA FROM DBO.FN_SPLIT('''+@PAY_REQ_TYPE+''','',''))' 

 SET @ORDER_BY = CASE WHEN @PAY_ORDER = 0 THEN ' CASE WHEN REQ_EXP_DATE < GETDATe()  THEN 1 ELSE 0 END , RES_SEQ_NO ASC , REQ_EXP_DATE , SEQ_NO ' 
						WHEN @PAY_ORDER = 1 THEN ' SEQ_NO DESC '
						WHEN @PAY_ORDER = 2 THEN ' SEQ_NO ASC' ELSE ' SEQ_NO' END 

SET @SQLSTRING = '
	SELECT * FROM ( 
	SELECT
		A.SEQ_NO,
		A.REQ_CTR_NO,
		A.RES_CODE,
		D.SEQ_NO AS RES_SEQ_NO,
		A.KICC_ID,
		A.PAY_REQ_TYPE,
		A.BANK_CODE,
		A.ACCT_NUM,
		CASE WHEN A.PAY_REQ_TYPE = ''ARS'' and  A.REQ_EXP_DATE  is null  
		THEN CONVERT(DATETIME,CONVERT(VARCHAR(10),A.NEW_DATE,121) + '' 23:59:59'') ELSE A.REQ_EXP_DATE END AS REQ_EXP_DATE ,
		(SELECT RES_NAME FROM RES_MASTER_damo WITH(NOLOCK) WHERE RES_CODE = A.RES_CODE ) AS RES_NAME , 
		A.CUS_NAME,
		A.CUS_TEL,
		A.CUS_EMAIL ,
		A.REQ_AMOUNT,
		A.COMP_YN,
		A.SMS_YN,
		A.REQ_REMARK,
		A.NEW_CODE,
		(SELECT KOR_NAME FROM EMP_MASTER WHERE EMP_CODE = A.NEW_CODE) AS NEW_NAME,
		A.NEW_DATE,
		A.EDT_CODE,
		(SELECT KOR_NAME FROM EMP_MASTER WHERE EMP_CODE = A.NEW_CODE) AS EDT_NAME,
		A.EDT_DATE,
		A.LAST_SEND_DATE,
		A.LAST_SEND_EMP,
		(SELECT KOR_NAME FROM EMP_MASTER WHERE EMP_CODE = A.LAST_SEND_EMP) AS LAST_SEND_EMP_NAME,

		--B.PAY_SEQ ,
		--B.RES_CTR_NO ,
		C.SALE_COM_CODE ,
		C.PRO_CODE ,
		C.PRO_TYPE , 
		C.PROVIDER ,

		(SELECT SUM(AMOUNT) FROM  KICC_PAY_RESPONSE WHERE A.REQ_CTR_NO = REQ_CTR_NO  AND REQ_SEQ_NO = A.SEQ_NO ) AS PAY_AMOUNT
		
	FROM KICC_PAY_REQUEST A WITH(NOLOCK)  
		--LEFT JOIN KICC_PAY_RESPONSE B WITH(NOLOCK)
		--	ON A.REQ_CTR_NO = B.REQ_CTR_NO 
		INNER JOIN RES_MASTER_DAMO C WITH(NOLOCK)
			ON A.RES_CODE = C.RES_CODE 
		LEFT JOIN RES_CUSTOMER_DAMO D 
			ON C.RES_CODE = D.RES_CODE 
			AND A.RES_SEQ_NO = D.SEQ_NO
	WHERE  A.RES_CODE = @RES_CODE  
	AND (A.DEL_YN =''N'' OR A.DEL_YN IS NULL )
	'+ @WHERE  +'
	) T 
	ORDER BY  '+ @ORDER_BY 


	SET @PARMDEFINITION = N'
		@RES_CODE  	RES_CODE';

	--SELECT LEN(@SQLSTRING)

	EXEC SP_KICC_PAYMENT_REQUEST_SELECT_COUNT @RES_CODE 

	--PRINT @SQLSTRING 
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@RES_CODE
	
	-- 과거 예약 발급 번호 보기 
	DECLARE @MOV_BEFORE_CODES VARCHAR(1000)
	DECLARE @MOV_BEFORE_CODE VARCHAR(12) 
	SELECT TOP 1  @MOV_BEFORE_CODE = MOV_BEFORE_CODE  
	FROM RES_MASTER_DAMO A WITH(NOLOCK)  
		--INNER JOIN KICC_PAY_REQUEST B WITH(NOLOCK) 
		--	ON A.RES_CODE = B.REs_CODE 
		--	AND B.PAY_REQ_TYPE = 'VACCT' 
		--	AND B.REQ_EXP_DATE > GETDATE()   -- 만료일 남은것 
		WHERE A.RES_CODE = @RES_CODE 

	SET @MOV_BEFORE_CODES = @MOV_BEFORE_CODE

	WHILE @MOV_BEFORE_CODE IS NOT NULL 
	BEGIN
		--SELECT @MOV_BEFORE_CODE , '시작'
		DECLARE @CODE VARCHAR(12) 
		set @CODE = (SELECT TOP 1  MOV_BEFORE_CODE  
		FROM RES_MASTER_DAMO A WITH(NOLOCK)  
			--INNER JOIN KICC_PAY_REQUEST B WITH(NOLOCK) 
			--	ON A.RES_CODE = B.REs_CODE 
			--	AND B.PAY_REQ_TYPE = 'VACCT' 
			--	AND B.REQ_EXP_DATE > GETDATE()   -- 만료일 남은것 
		WHERE A.RES_CODE = @MOV_BEFORE_CODE ) 
		
		SET @MOV_BEFORE_CODE = @CODE 
		IF( @CODE IS NOT NULL )
		BEGIN
			SET @MOV_BEFORE_CODES = @MOV_BEFORE_CODES +  ',' +  @MOV_BEFORE_CODE	
		END 
		--SELECT @MOV_BEFORE_CODE ,@CODE, @MOV_BEFORE_CODES, '종료 '
	END 
	-- 과거 예약 구하기 
	SELECT A.RES_CODE , A.ACCT_NUM,A.BANK_CODE,MIN(A.CUS_NAME) AS CUS_NAME , MIN(A.REQ_EXP_DATE) AS REQ_EXP_DATE 
	FROM KICC_PAY_REQUEST A WHERE RES_CODE IN (SELECT DATA FROM DBO.FN_SPLIT(@MOV_BEFORE_CODES,','))
	AND A.PAY_REQ_TYPE = 'VACCT' 
	AND A.REQ_EXP_DATE > GETDATE()   -- 만료일 남은것 
	AND (A.DEL_YN ='N' OR A.DEL_YN IS NULL )
	GROUP BY A.RES_CODE,A.ACCT_NUM,A.BANK_CODE
	
	
END 



GO
