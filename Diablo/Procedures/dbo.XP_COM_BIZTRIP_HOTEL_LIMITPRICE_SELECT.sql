USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_COM_BIZTRIP_HOTEL_LIMITPRICE_SELECT
■ DESCRIPTION				: BTMS 출장자 검색도시별 호텔 한도 금액 검색
■ INPUT PARAMETER			: 
	@AGT_CODE				: 거래처코드
	@EMP_SEQ				: 직원 번호
	@HOTEL_CITY_CODE		: 예약전, 저스트고 도시코드 
■ OUTPUT PARAMETER			: 
■ EXEC						: 

	EXEC DBO.XP_COM_BIZTRIP_HOTEL_LIMITPRICE_SELECT 93258, '104', '180014'

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------   
   2016-08-22		이유라			최초생성
   2016-08-25		이유라			규정이 여러개일경우 세부단위 순으로(도시,국가,지역)
================================================================================================================*/
CREATE PROC [dbo].[XP_COM_BIZTRIP_HOTEL_LIMITPRICE_SELECT]
	@AGT_CODE VARCHAR(10),
	@EMP_SEQ varchar(100),
	@JG_CITY_CODE VARCHAR(20)
AS

BEGIN

--DECLARE @AGT_CODE VARCHAR(10),
--	@EMP_SEQ varchar(100),
--	@JG_CITY_CODE VARCHAR(20)
--	SELECT  @AGT_CODE = 93258, @EMP_SEQ = '104', @JG_CITY_CODE = '180014'

	--가져올 규정정보1건 
	DECLARE @BT_SEQ INT,
		@ALL_YN	CHAR(1),
		@REPORT_YN	CHAR(1),@EMAIL_SEND_YN	CHAR(1),@CONFIRM_YN	CHAR(1), --공용기능 
		@AIR_SAME_YN	CHAR(1), @AIR_LIKE_YN CHAR(1), --항공
		@HOTEL_LIKE_YN	CHAR(1), --호텔 
		@HOTEL_CITY_CODE VARCHAR(20)

	--반환될 규정값 
	DECLARE 
	@HOTEL_REGION_RULE_BRK_YN CHAR(1),
	@HOTEL_REGION_RULE_BRK_DETAIL VARCHAR(200),
	@HOTEL_REGION_NAME VARCHAR(100);
	
	--저스트고 도시코드 -> 3자리 도시코드로 전환
	SET @HOTEL_CITY_CODE = (SELECT TOP 1 A.VGT_CITY_CODE FROM COM_CITY_MATCHING A WHERE A.JG_CITY_CODE = @JG_CITY_CODE)

	--출장규정 가져오기 우선순위 높은거 1건 
	SELECT TOP 1 @BT_SEQ = BT_SEQ , --규정번호 
		@ALL_YN=ALL_YN, 
		@REPORT_YN=REPORT_YN,@EMAIL_SEND_YN=EMAIL_SEND_YN, @CONFIRM_YN=CONFIRM_YN,
		@AIR_SAME_YN=AIR_SAME_YN, @AIR_LIKE_YN=AIR_LIKE_YN,
		@HOTEL_LIKE_YN=HOTEL_LIKE_YN
	FROM 
	(
		SELECT A.* FROM COM_BIZTRIP_GROUP A  WITH(NOLOCK) 
		INNER JOIN DBO.FN_COM_BIZTRIP_GROUP_INFO(@AGT_CODE, @EMP_SEQ) B ON A.AGT_CODE = B.AGT_CODE AND A.BT_SEQ = B.BT_SEQ 	
	) TT 
	ORDER BY ORDER_NUM ASC 

	BEGIN 
	--지역별 1박당금액 규정이 있으면 
	--전지역 우선적용 
	DECLARE @LIMIT_PRICE INT 
	SELECT  @LIMIT_PRICE = LIMIT_PRICE  FROM COM_HOTEL_RULE A WITH(NOLOCK)
		INNER JOIN COM_REGION_MASTER B WITH(NOLOCK)
			ON A.AGT_CODE = B.AGT_CODE 
			AND A.REG_MASTER_SEQ = B.REG_MASTER_SEQ 
	WHERE A.AGT_CODE = @AGT_CODE AND A.BT_SEQ = @BT_SEQ  AND A.USE_YN ='Y' 
	AND B.ALL_YN = 'Y' 
	ORDER BY A.REG_MASTER_SEQ ASC -- 중복될경우 가장 처음 전지역

	--SELECT @LIMIT_PRICE 
	--전지역 한도금액 있고 한도를 초과한경우 
	IF(ISNULL(@LIMIT_PRICE,0) > 0)
	BEGIN
		SET @HOTEL_REGION_RULE_BRK_YN ='Y'
		SET @HOTEL_REGION_RULE_BRK_DETAIL = CONVERT(VARCHAR(10),@LIMIT_PRICE)
		SET @HOTEL_REGION_NAME = '전지역'
	END 
	ELSE
		BEGIN 
			--기타지역 재검색 
			--CITY_CODE 로 지역, 국가 , 도시 구함 
			DECLARE @CITY_CODE VARCHAR(3),@NATION_CODE VARCHAR(2) , @REGION_CODE VARCHAR(3)
			DECLARE @CITY_NAME VARCHAR(100),@NATION_NAME VARCHAR(100) , @REGION_NAME VARCHAR(100)
			SELECT @CITY_CODE = A.CITY_CODE , @NATION_CODE = B.NATION_CODE , @REGION_CODE =  C.REGION_CODE,
				   @CITY_NAME = A.KOR_NAME , @NATION_NAME = B.KOR_NAME	,	@REGION_NAME = C.KOR_NAME
			FROM PUB_CITY A 
				INNER JOIN PUB_NATION B 
					ON A.NATION_CODE = B.NATION_CODE 
				INNER JOIN PUB_REGION C
					ON B.REGION_CODE = C.REGION_CODE 

				--INNER JOIN PUB_CITY_MAP_JUSTGO_TMP D
				--	ON A.CITY_CODE = D.CITY_CODE 
			WHERE A.CITY_CODE =  @HOTEL_CITY_CODE

			--한도금액 담기 
			SELECT TOP 1 @LIMIT_PRICE = LIMIT_PRICE  ,
				@HOTEL_REGION_NAME = (CASE 
					WHEN REGION_CODE IS NOT NULL THEN @REGION_NAME
					WHEN NATION_CODE IS NOT NULL THEN @NATION_NAME
					WHEN CITY_CODE IS NOT NULL THEN @CITY_NAME END)
			FROM 
			(
				SELECT 
					LIMIT_PRICE,
					(CASE WHEN REG_TYPE = 'R' THEN 3 
						  WHEN REG_TYPE = 'N' THEN 2
						  WHEN REG_TYPE = 'C' THEN 1 END ) AS REG_ORDER , 
					(CASE WHEN REG_TYPE = 'R' THEN REG_CODE END ) AS REGION_CODE , 
					(CASE WHEN REG_TYPE = 'N' THEN REG_CODE END) AS NATION_CODE , 
					(CASE WHEN REG_TYPE = 'C' THEN REG_CODE END) AS CITY_CODE
				FROM COM_HOTEL_RULE A WITH(NOLOCK)
					INNER JOIN COM_REGION_MASTER B WITH(NOLOCK)
						ON A.AGT_CODE = B.AGT_CODE 
						AND A.REG_MASTER_SEQ = B.REG_MASTER_SEQ 
					INNER JOIN COM_REGION_DETAIL C WITH(NOLOCK)
						ON A.AGT_CODE = C.AGT_CODE 
						AND A.REG_MASTER_SEQ = C.REG_MASTER_SEQ 
				WHERE  A.AGT_CODE = @AGT_CODE AND A.BT_SEQ = @BT_SEQ  AND A.USE_YN ='Y' 
				AND B.ALL_YN = 'N' 
				--AND A.REG_MASTER_SEQ = 7   
			) T
			WHERE (CITY_CODE = @CITY_CODE OR NATION_CODE = @NATION_CODE OR REGION_CODE = @REGION_CODE)  --도시,국가,지역 조건하나라도 맞으면 
			ORDER BY REG_ORDER ASC-- 가장 세부 단위순 (도시,국가,지역순)
			--ORDER BY LIMIT_PRICE ASC-- 가장 낮은것 우선적용 (기존)

			--각지역별 한도금액 있고 한도를 초과한경우 
			IF( ISNULL(@LIMIT_PRICE,0) > 0)
			BEGIN
				SET @HOTEL_REGION_RULE_BRK_YN ='Y'
				SET @HOTEL_REGION_RULE_BRK_DETAIL = CONVERT(VARCHAR(10),@LIMIT_PRICE)
			END 
		END 
	END

	SELECT ISNULL(@HOTEL_REGION_RULE_BRK_YN,'N') AS HOTEL_REGION_RULE_BRK_YN,	@HOTEL_REGION_RULE_BRK_DETAIL AS HOTEL_REGION_RULE_BRK_DETAIL, @HOTEL_REGION_NAME AS HOTEL_REGION_NAME;

END

GO
