USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: SP_PRO_TRANS_SEAT_SELECT_LIST
■ DESCRIPTION				: 좌석 정보 페이징 검색
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			: 
■ EXEC						: 
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
	DATE			AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
	2008-12-08		김성호			최초생성
	2019-03-28		박형만			출.도착도시 추가 , 출발 시간순 정렬 
	2019-03-28		박형만			사용중인 행사 코드조회,날짜패턴조회,세그갯수조회 
	2019-04-10		박형만			편번호로도 조회
	2020-12-01		김성호			조건절 정리
	2021-06-16		오준혁			튜닝
================================================================================================================*/
CREATE PROCEDURE [dbo].[SP_PRO_TRANS_SEAT_SELECT_LIST]
	@FLAG				CHAR(1),
	@PAGE_SIZE			INT,
	@PAGE_INDEX			INT,
	@TRANS_TYPE			INT,
	@DEP_AIRPORT_CODE	VARCHAR(3),
	@ARR_AIRPORT_CODE	VARCHAR(3),
	@TRANS_CODE			VARCHAR(2),
	@DEP_DATE_START		VARCHAR(10),
	@DEP_DATE_END		VARCHAR(10),


	@TRANS_NUMBER	VARCHAR(4)= NULL,
	@USE_YN			VARCHAR(1)= NULL ,
	@TRANS_DAY			INT=0
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED


--declare 
--@FLAG				CHAR(1),
--	@PAGE_SIZE			INT,
--	@PAGE_INDEX			INT,
--	@TRANS_TYPE			INT,
--	@DEP_AIRPORT_CODE	VARCHAR(3),
--	@ARR_AIRPORT_CODE	VARCHAR(3),
--	@TRANS_CODE			VARCHAR(2),
--	@DEP_DATE_START		VARCHAR(10),
--	@DEP_DATE_END		VARCHAR(10),
--	@USE_YN VARCHAR(1) 
--select @TRANS_TYPE=1,@DEP_AIRPORT_CODE='ICN',@ARR_AIRPORT_CODE='CDG',@TRANS_CODE='AF',@DEP_DATE_START=N'2019-05-01',@DEP_DATE_END=NULL,@PAGE_INDEX=0,@PAGE_SIZE=10,@FLAG=N'L'
--,@USE_YN ='Y' 

	DECLARE @SQLSTRING NVARCHAR(4000) = '', @PARMDEFINITION NVARCHAR(1000), @FROM INT, @TO INT;

	SET @FROM = @PAGE_INDEX * @PAGE_SIZE + 1;
	SET @TO = @PAGE_INDEX * @PAGE_SIZE + @PAGE_SIZE;

	-- WHERE 조건 만들기
	--SET @SQLSTRING = 'WHERE EXISTS
	--		(
	--			SELECT 1 FROM PRO_TRANS_MASTER B WITH(NOLOCK) 
	--			WHERE 1 = 1
	--			AND A.DEP_TRANS_CODE = B.TRANS_CODE AND A.DEP_TRANS_NUMBER = B.TRANS_NUMBER
	--			AND B.DEP_AIRPORT_CODE = @DEP_AIRPORT_CODE AND B.ARR_AIRPORT_CODE = @ARR_AIRPORT_CODE
	--		)';

	-- 행사에서 사용중인것만 
	IF ISNULL(@USE_YN,'') = 'Y' 
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' AND EXISTS ( SELECT 1 FROM PKG_DETAIL B WITH(NOLOCK, INDEX(IDX_PKG_DETAIL_4))
		WHERE A.SEAT_CODE = B.SEAT_CODE
		AND A.DEP_DEP_DATE = B.DEP_DATE 
		)  ';
	END 

	IF ISNULL(@TRANS_CODE, '') != ''
		SET @SQLSTRING = @SQLSTRING + ' AND A.DEP_TRANS_CODE = @TRANS_CODE';
	IF ISNULL(@DEP_DATE_START, '') != ''
		SET @SQLSTRING = @SQLSTRING + ' AND A.DEP_DEP_DATE >= CONVERT(DATETIME, @DEP_DATE_START)';
	IF ISNULL(@DEP_DATE_END, '') != ''
		SET @SQLSTRING = @SQLSTRING + ' AND A.DEP_DEP_DATE < CONVERT(DATETIME, @DEP_DATE_END) + 1';

	IF ISNULL(@DEP_AIRPORT_CODE, '') != ''  -- 출발 공항 코드 추가 
		SET @SQLSTRING = @SQLSTRING + ' AND A.DEP_DEP_AIRPORT_CODE = @DEP_AIRPORT_CODE ';
	IF ISNULL(@ARR_AIRPORT_CODE, '') != ''  -- 도착 공항 코드 추가 
		SET @SQLSTRING = @SQLSTRING + ' AND A.DEP_ARR_AIRPORT_CODE = @ARR_AIRPORT_CODE ';


	IF ISNULL(@TRANS_NUMBER, '') != ''
		SET @SQLSTRING = @SQLSTRING + ' AND A.DEP_TRANS_NUMBER = @TRANS_NUMBER';

	IF @TRANS_TYPE > 0
		SET @SQLSTRING = @SQLSTRING + ' AND A.TRANS_TYPE = @TRANS_TYPE';

	IF @TRANS_DAY > 0 
		SET @SQLSTRING = @SQLSTRING + ' AND DATEDIFF(DD,A.DEP_DEP_DATE,A.ARR_ARR_DATE)+1= @TRANS_DAY';

	-- WHERE 완성
	IF (LEN(@SQLSTRING) > 0)
		SET @SQLSTRING = 'WHERE ' + SUBSTRING(@SQLSTRING, 5, 4000) 
	
	IF @FLAG = 'C'					-- 전체 글수
	BEGIN
		SET @SQLSTRING = N'
		SELECT COUNT(*) 
		FROM PRO_TRANS_SEAT A WITH(NOLOCK)
		INNER JOIN PRO_TRANS_MASTER B WITH(NOLOCK) ON
			A.DEP_TRANS_CODE = B.TRANS_CODE AND 
			A.DEP_TRANS_NUMBER = B.TRANS_NUMBER AND 
			B.DEP_AIRPORT_CODE = @DEP_AIRPORT_CODE AND 
			B.ARR_AIRPORT_CODE = @ARR_AIRPORT_CODE 
		' + @SQLSTRING;
	END
	ELSE IF @FLAG = 'L'				-- 검색
	BEGIN
		SET @SQLSTRING = N'
		WITH DOCUMENTLIST AS
		(
			SELECT
				ROW_NUMBER() OVER (ORDER BY A.DEP_DEP_DATE,A.DEP_DEP_TIME,A.ARR_DEP_DATE,A.ARR_DEP_TIME) AS [ROWNUMBER], A.SEAT_CODE
			FROM PRO_TRANS_SEAT A WITH(NOLOCK)
			INNER JOIN PRO_TRANS_MASTER B WITH(NOLOCK) ON
				A.DEP_TRANS_CODE = B.TRANS_CODE AND 
				A.DEP_TRANS_NUMBER = B.TRANS_NUMBER AND 
				B.DEP_AIRPORT_CODE = @DEP_AIRPORT_CODE AND 
				B.ARR_AIRPORT_CODE = @ARR_AIRPORT_CODE
			' + @SQLSTRING + '
		)
		SELECT B.*
			, (SELECT ISNULL(KOR_NAME, '''') FROM PUB_AIRLINE  WITH(NOLOCK) WHERE AIRLINE_CODE = B.DEP_TRANS_CODE) AS [DEP_TRANS_NAME]
			, (SELECT ISNULL(KOR_NAME, '''') FROM PUB_AIRLINE WITH(NOLOCK)  WHERE AIRLINE_CODE = B.ARR_TRANS_CODE) AS [ARR_TRANS_NAME]
			, STUFF((
			SELECT ('','' + AA.PRO_CODE ) AS [text()]
			FROM PKG_DETAIL AA WITH(NOLOCK) WHERE AA.SEAT_CODE = A.SEAT_CODE
			AND AA.DEP_DATE >=  B.DEP_DEP_DATE 
			FOR XML PATH('''')), 1, 1, '''')  AS PRO_CODES 
			,(SELECT COUNT(*) FROM PRO_TRANS_SEAT_SEGMENT WHERE SEAT_CODE = B.SEAT_CODE  AND TRANS_SEQ = 1 ) AS DEP_SEG_COUNT 
			,(SELECT COUNT(*) FROM PRO_TRANS_SEAT_SEGMENT WHERE SEAT_CODE = B.SEAT_CODE  AND TRANS_SEQ = 2 ) AS ARR_SEG_COUNT 
		FROM DOCUMENTLIST A
		INNER JOIN PRO_TRANS_SEAT B  WITH(NOLOCK) ON A.SEAT_CODE = B.SEAT_CODE
		WHERE ROWNUMBER BETWEEN @FROM AND @TO;';
	END

	SET @PARMDEFINITION = N'@FROM INT, @TO INT, @TRANS_TYPE INT, @DEP_AIRPORT_CODE VARCHAR(3), @ARR_AIRPORT_CODE VARCHAR(3), @TRANS_CODE VARCHAR(2), @TRANS_NUMBER VARCHAR(4), @DEP_DATE_START VARCHAR(10), @DEP_DATE_END VARCHAR(10) ,@TRANS_DAY INT ';

	--PRINT @SQLSTRING
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @FROM, @TO, @TRANS_TYPE, @DEP_AIRPORT_CODE, @ARR_AIRPORT_CODE, @TRANS_CODE, @TRANS_NUMBER, @DEP_DATE_START, @DEP_DATE_END , @TRANS_DAY;
END 
GO
