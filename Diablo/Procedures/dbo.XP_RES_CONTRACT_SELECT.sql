USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



/*================================================================================================================
■ USP_NAME					: XP_RES_CONTRACT_SELECT
■ DESCRIPTION				: 여행자 계약서 통합 조회
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			: 
■ EXEC						: 

EXEC XP_RES_CONTRACT_SELECT 'RP1810167207' , 0 
EXEC XP_RES_CONTRACT_SELECT 'RP1810167207' , -1 
EXEC XP_RES_CONTRACT_SELECT 'RP1810167207' , -1 

EXEC

 XP_RES_CONTRACT_SELECT 'RP1903201451'



■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
2018-12-10			박형만			최초생성
2019-04-17			박형만			여행대표자 예약상태 정상인 성인만 
2020-01-16          이유천          INS_YN -> Contract table로
================================================================================================================*/ 
CREATE PROC [dbo].[XP_RES_CONTRACT_SELECT] 
(
	@RES_CODE VARCHAR(12) ,
	@CONTRACT_NO INT = 0 
)
AS 
BEGIN


	--DECLARE @RES_CODE VARCHAR(12) 
	--SELECT @RES_CODE = 'RP1810167207' 

	-- 신규 등록시에 처리 
	IF (@CONTRACT_NO = -1 )
	BEGIN
		DECLARE @PRO_CODE VARCHAR(20) , @PRICE_SEQ INT 
		SELECT TOP 1 @PRO_CODE = PRO_CODE  ,  @PRICE_SEQ = PRICE_SEQ FROM RES_MASTER_DAMO WHERE RES_CODE = @RES_CODE 

		-- 신규 생성시
		-- 현재 상품,상태로 변경   
		SELECT
			NULL AS RES_CODE , NULL AS CONTRACT_NO , 

			A.PRO_CODE, B.PRICE_SEQ,
			A.DEP_DATE, A.ARR_DATE , A.TOUR_NIGHT  AS NIGHT ,

			A.MIN_COUNT,A.MAX_COUNT,
			A.PRO_NAME,A.TC_YN,
			0 AS TOUR_TYPE,
			A.PKG_CONTRACT AS SPC_TERMS_INFO,  -- 신규 추가 

			CASE WHEN C.DEP_DEP_DATE IS NOT NULL THEN CONVERT(DATETIME,CONVERT(VARCHAR(10),C.DEP_DEP_DATE,121) + ' ' + REPLACe(C.DEP_DEP_TIME,'24:','00:') ) END AS DEP_DEP_DATE , 
			CASE WHEN C.ARR_ARR_DATE IS NOT NULL THEN CONVERT(DATETIME,CONVERT(VARCHAR(10),C.ARR_ARR_DATE,121) + ' ' + REPLACe(C.ARR_ARR_TIME,'24:','00:') ) END AS ARR_ARR_DATE , 

			(SELECT KOR_NAME FROM PUB_AIRPORT WITH(NOLOCK) WHERE AIRPORT_CODE = C.DEP_DEP_AIRPORT_CODE) AS DEP_AIRPORT,
			--(SELECT KOR_NAME FROM PUB_AIRPORT WITH(NOLOCK) WHERE AIRPORT_CODE = C.DEP_ARR_AIRPORT_CODE) AS DEP_ARR_AIRPORT_NAME,
			(SELECT KOR_NAME FROM PUB_AIRPORT WITH(NOLOCK) WHERE AIRPORT_CODE = C.ARR_DEP_AIRPORT_CODE) AS ARR_AIRPORT,
			--(SELECT KOR_NAME FROM PUB_AIRPORT WITH(NOLOCK) WHERE AIRPORT_CODE = C.ARR_ARR_AIRPORT_CODE) AS ARR_ARR_AIRPORT

			CASE WHEN C.TRANS_TYPE = 1 THEN 0  -- 0 항공기 
				WHEN C.TRANS_TYPE = 2 THEN 1  -- 1 선박 
				ELSE 9 END AS  TRANS_TYPE ,  --9 기타 
			'' AS TRANS_GRADE , 
			0 as INSIDE_DAY , 

			'' AS STAY_TYPE,'' AS STAY_COUNT,
			0 AS TRANSPORT_TYPE,0 AS TRANSPORT_COUNT,


			B.ADT_SALE_PRICE AS ADT_PRICE, 0 AS INS_TYPE, 0 AS INS_PRICE,
			A.INS_YN , -- 행사 보험확정여부 
			A.INS_CODE , 
			ISNULL((SELECT KOR_NAME FROM AGT_MASTER WITH(NOLOCK) WHERE AGT_CODE = A.INS_CODE AND AGT_TYPE_CODE = 17), '') AS INS_NAME ,

			--계약서 정보 
			NULL AS REMARK,
			-- 예약정보 
			(SELECT TOP 1 CUS_NAME FROM RES_CUSTOMER_DAMO WHERE RES_CODE = M.RES_CODE AND RES_STATE = 0  ORDER BY AGE_TYPE , SEQ_NO  ) AS CONT_NAME, /*!신규*/ -- 예약대표자 
			DBO.FN_RES_GET_PAY_PRICE(M.RES_CODE) AS [PAY_PRICE],
			DBO.FN_RES_GET_TOTAL_PRICE(M.RES_CODE) AS TOTAL_PRICE ,/*!신규*/  -- 총금액 
			DBO.FN_RES_GET_RES_COUNT(M.RES_CODE) AS RES_COUNT /*!신규*/	-- 여행인원 
		FROM RES_MASTER_DAMO M WITH(NOLOCK) 
		INNER JOIN PKG_DETAIL A WITH(NOLOCK)
			ON M.PRO_CODE = A.PRO_CODE 
		LEFT OUTER JOIN (
			SELECT AA.PRO_CODE, AA.ADT_PRICE, AA.CHD_PRICE, AA.INF_PRICE , BB.QCHARGE_TYPE   
				, BB.ADT_SALE_PRICE , BB.CHD_SALE_PRICE , BB.INF_SALE_PRICE  
				, BB.ADT_SALE_QCHARGE
				, BB.CHD_SALE_QCHARGE
				, BB.INF_SALE_QCHARGE
				, BB.SALE_QCHARGE_DATE , AA.PRICE_SEQ 
			FROM PKG_DETAIL_PRICE AA  WITH(NOLOCK)	
				INNER JOIN XN_PKG_DETAIL_PRICE(@PRO_CODE , 0 ) BB 
					ON AA.PRO_CODE = BB.PRO_CODE  
					AND AA.PRICE_SEQ = BB.PRICE_SEQ 
			WHERE AA.PRO_CODE = @PRO_CODE  AND AA.PRICE_SEQ = @PRICE_SEQ 
		) B ON A.PRO_CODE = B.PRO_CODE
		LEFT OUTER JOIN PRO_TRANS_SEAT C WITH(NOLOCK) ON A.SEAT_CODE = C.SEAT_CODE
		LEFT OUTER JOIN EMP_MASTER D WITH(NOLOCK) ON A.NEW_CODE= D.EMP_CODE
		LEFT OUTER JOIN SET_MASTER E WITH(NOLOCK) ON E.PRO_CODE = A.PRO_CODE
		WHERE M.RES_CODE = @RES_CODE
	END 
	ELSE 
	BEGIN

	
		-- 지정되지 않았을경우 
		IF( @CONTRACT_NO = 0 )
		BEGIN
			-- 가장최근 조회 
			SET @CONTRACT_NO = (SELECT TOP 1 CONTRACT_NO FROM RES_CONTRACT WITH(NOLOCK) WHERE RES_CODE =@RES_CODE  ORDER BY CONTRACT_NO DESC ) 
		END ;

		WITH RES_CUSTOMER_LIST AS (
			SELECT 
				ROW_NUMBER() OVER (ORDER BY SEQ_NO ASC) AS [SEQ_NO], RES_CODE, CUS_NAME AS RES_NAME, CUS_NO, NOR_TEL1, NOR_TEL2, NOR_TEL3
			FROM RES_CUSTOMER WITH(NOLOCK) 
			WHERE RES_CODE = @RES_CODE 
				--AND (( AGE_TYPE = 0 AND RES_STATE = 0 ) OR ( AGE_TYPE = 0 )) -- 성인이고 예약상태인것 또는 성인 2019-04-17 주석처리 
				AND  AGE_TYPE = 0 AND RES_STATE = 0  -- 성인이고 예약상태정상 
		)

	
		SELECT  

		A.RES_CODE,A.CONTRACT_NO,-- ERP HISTORY 번호 
		--A.CFM_NO, -- /*!신규*/  고객 VER 번호 

		--행사정보
		B.PRO_CODE ,B.PRICE_SEQ , 
		A.DEP_DATE,A.ARR_DATE,A.NIGHT,
		A.MIN_COUNT,A.MAX_COUNT,
		A.PRO_NAME,A.TC_YN,
		A.TOUR_TYPE,
		--C.PKG_CONTRACT,  -- 특별약관

		ISNULL(A.SPC_TERMS_INFO,C.PKG_CONTRACT) AS SPC_TERMS_INFO,  -- 특별약관 신규 추가 , 저장되어 있지 않을경우 PKG 에서 가져옴 

		--행사좌석정보 
		A.DEP_DEP_DATE,A.ARR_ARR_DATE,
		A.DEP_AIRPORT,A.ARR_AIRPORT,
		A.TRANS_TYPE,A.TRANS_GRADE,
		A.INSIDE_DAY, 

		--행사숙박정보 
		A.STAY_TYPE,A.STAY_COUNT,
		A.TRANSPORT_TYPE,A.TRANSPORT_COUNT,

		--행사가격,보험정보 
		A.ADT_PRICE,A.INS_TYPE,A.INS_PRICE,
		--A.INS_CODE , /*!신규*/ -- 보험코드
		--A.INS_NAME , /*!신규*/ -- 보험명 
		INS_YN = CASE WHEN (A.INS_YN IS NULL ) THEN C.INS_YN WHEN ( A.INS_YN IS NOT NULL ) THEN A.INS_YN END , -- 행사 보험확정여부 
		C.INS_CODE , 
		ISNULL((SELECT KOR_NAME FROM AGT_MASTER WITH(NOLOCK) WHERE AGT_CODE = C.INS_CODE AND AGT_TYPE_CODE = 17), '') AS INS_NAME ,

		--여행요금 포함사항 
		A.MANDATORY_1,A.MANDATORY_2,A.MANDATORY_3,A.MANDATORY_4,A.MANDATORY_5,A.MANDATORY_6,A.MANDATORY_7,
		A.OPTION_1,A.OPTION_2,A.OPTION_3,A.OPTION_4,A.OPTION_5,A.OPTION_6,A.OPTION_7,A.OPTION_8,

		--동의정보 
		A.CFM_YN,A.CFM_DATE,A.CFM_TYPE,A.CFM_HEADER,A.CFM_IP,
		A.RSV_DATE,A.PAYMENT_YN,

		--계약서 정보 
		ISNULL(A.CONT_DATE,A.NEW_DATE) AS NEW_DATE,  --임의의 계약일이 있을경우 표시 
		A.NEW_CODE,
		dbo.XN_COM_GET_TEAM_CODE(A.NEW_CODE) AS NEW_TEAM,
		dbo.XN_COM_GET_TEAM_NAME(A.NEW_CODE) AS NEW_NAME,
		A.REMARK,
		-- 예약정보 

		CASE WHEN ISNULL(A.CONT_NAME,'') <> '' THEN A.CONT_NAME ELSE D.RES_NAME END AS CONT_NAME, /*!신규*/ -- 예약대표자 

		D.NOR_TEL1 , D.NOR_TEL2 , D.NOR_TEL3 , E.SIGN_CODE ,
		B.SALE_COM_CODE, 
		F.KOR_NAME AS AGT_NAME, F.ADDRESS1 AS AGT_ADDRESS1, F.ADDRESS2 AS AGT_ADDRESS2, F.CEO_NAME AS AGT_CEO_NAME, F.NOR_TEL1 AS AGT_TEL1, F.NOR_TEL2 AS AGT_TEL2, F.NOR_TEL3 AS AGT_TEL3, F.AGT_REGISTER,

		DBO.FN_RES_GET_PAY_PRICE(A.RES_CODE) AS [PAY_PRICE],

		ISNULL(A.TOTAL_PRICE,DBO.FN_RES_GET_TOTAL_PRICE(A.RES_CODE)) AS TOTAL_PRICE ,/*!신규*/  -- 총금액 
		ISNULL(A.RES_COUNT,DBO.FN_RES_GET_RES_COUNT(A.RES_CODE)) AS RES_COUNT, /*!신규*/	-- 여행인원 
	
		DBO.FN_RES_IS_TOURLIST(A.RES_CODE) AS TOUR_STATE,
		CASE WHEN RSV_DATE IS NULL THEN (SELECT TOP 1 B.CFM_DATE FROM DBO.RES_SND_EMAIL B WITH(NOLOCK) WHERE B.RES_CODE = A.RES_CODE AND B.SND_TYPE = 6  ORDER BY B.NEW_DATE DESC) ELSE A.RSV_DATE END AS RSV_DATE,
		(SELECT ('[ver' + CONVERT(VARCHAR(3), AA.CONTRACT_NO) + '.0]' + CONVERT(VARCHAR(16), CFM_DATE, 120) + ' ') AS [text()] FROM RES_CONTRACT AA WITH(NOLOCK) WHERE AA.RES_CODE = A.RES_CODE AND AA.CFM_YN = 'Y' 
		FOR XML PATH('')) AS [CFM_HISTORY]

		FROM RES_CONTRACT A WITH(NOLOCK)
		--WHERE A.RES_CODE = @RES_CODE --#VERSION
		INNER JOIN RES_MASTER_DAMO B WITH(NOLOCK) 
			ON A.REs_CODE = B.RES_CODE  
		INNER JOIN PKG_DETAIL C WITH(NOLOCK) 
			ON B.PRO_CODE = C.PRO_CODE 
		INNER JOIN PKG_MASTER E WITH(NOLOCK) 
			ON C.MASTER_CODE = E.MASTER_CODE
		LEFT JOIN RES_CUSTOMER_LIST D 
			ON B.RES_CODE = D.RES_CODE AND D.SEQ_NO = 1
		LEFT JOIN AGT_MASTER F WITH(NOLOCK) 
			ON F.AGT_CODE = B.SALE_COM_CODE

		WHERE A.RES_CODE =@RES_CODE 
		AND ( A.CONTRACT_NO = @CONTRACT_NO  OR @CONTRACT_NO = -9) -- 전체조회도 포함 
	
		ORDER BY A.RES_CODE, A.CONTRACT_NO DESC

	END 


END 






GO
