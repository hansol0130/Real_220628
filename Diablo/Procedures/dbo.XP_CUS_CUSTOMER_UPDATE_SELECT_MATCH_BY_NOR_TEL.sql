USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*==================================================================================
	기본내용
====================================================================================
- SP 명 : XP_CUS_CUSTOMER_UPDATE_SELECT_MATCH_BY_NOR_TEL
- 기 능 : 고객정보로 CUS_NO 자동 찾기  이름+생년월일+휴대폰 우선으로 적용  
====================================================================================
	참고내용
====================================================================================
SELECT TOP 100 * FROM CUS_CUSTOMER WHERE CUS_NO = 998899106
- 예제 
EXEC XP_CUS_CUSTOMER_UPDATE_SELECT_MATCH_BY_NOR_TEL @CUS_NO=0,
@CUS_NAME='박박박',@GENDER=NULL,@BIRTH_DATE='1980-07-08',@NOR_TEL1='010',@NOR_TEL2='9185',@NOR_TEL3='2481',@NEW_CUS_YN = 'Y' 

EXEC XP_CUS_CUSTOMER_UPDATE_SELECT_MATCH_BY_NOR_TEL @CUS_NO=0,
@CUS_NAME='오은진',@GENDER=NULL,@BIRTH_DATE='',@NOR_TEL1='010',@NOR_TEL2='9185',@NOR_TEL3='2481' 

EXEC XP_CUS_CUSTOMER_UPDATE_SELECT_MATCH_BY_NOR_TEL @CUS_NO=0,
@CUS_NAME='최성례',@GENDER=NULL,@BIRTH_DATE='',@NOR_TEL1='010',@NOR_TEL2='8369',@NOR_TEL3='1855' 

EXEC XP_CUS_CUSTOMER_UPDATE_SELECT_MATCH_BY_NOR_TEL @CUS_NO=0,
@CUS_NAME='정은미',@GENDER=NULL,@BIRTH_DATE='1962-05-04',@NOR_TEL1='010',@NOR_TEL2='4602',@NOR_TEL3='4924' 

EXEC XP_CUS_CUSTOMER_UPDATE_SELECT_MATCH_BY_NOR_TEL @CUS_NO=0,
@CUS_NAME='정은미',@GENDER=NULL,@BIRTH_DATE='',@NOR_TEL1='010',@NOR_TEL2='4602',@NOR_TEL3='4924' 

====================================================================================
	변경내역			작성자		작업내역
====================================================================================
	2017-07-18		박형만		신규작성 
	2021-10-27		김성호		CUS_CUSTOMER테이블 CUS_GRADE 조건 부분 삭제 고객 등급 영향 무시
===================================================================================*/
CREATE PROC [dbo].[XP_CUS_CUSTOMER_UPDATE_SELECT_MATCH_BY_NOR_TEL]
	@CUS_NO INT,    --1 보다 큰경우는 아직 보류,,
	@CUS_NAME VARCHAR(50) , -- 주요검색조건
	@BIRTH_DATE DATETIME ,-- 주요검색조건
	@GENDER VARCHAR(1)  = NULL ,
	@NOR_TEL1 VARCHAR(4) ,-- 1순위검색조건
	@NOR_TEL2 VARCHAR(6) ,-- 1순위검색조건
	@NOR_TEL3 VARCHAR(6) ,-- 1순위검색조건
	@EMAIL VARCHAR(50) = NULL ,  --2순위검색조건 

	@PASS_NUM VARCHAR(20) = NULL,

	@HOM_TEL1 VARCHAR(6) = NULL ,
	@HOM_TEL2 VARCHAR(6) = NULL ,
	@HOM_TEL3 VARCHAR(6) = NULL ,

	@LAST_NAME VARCHAR(50) = NULL ,
	@FIRST_NAME VARCHAR(50) = NULL ,

	@NATIONAL  VARCHAR(10) = NULL , 
	@NEW_CODE VARCHAR(7)= '9999999',
	@NEW_CUS_YN CHAR(1) = NULL ,
	@DUP_PROC_YN CHAR(1) = NULL 
AS
BEGIN


--DECLARE  @CUS_NO INT    --1 보다 큰경우는 아직 보류,,
--DECLARE  @CUS_NAME VARCHAR(50) , -- 주요검색조건
--@GENDER VARCHAR(50) ,
--@BIRTH_DATE VARCHAR(50) ,-- 주요검색조건
--@NOR_TEL1 VARCHAR(50) ,-- 주요검색조건
--@NOR_TEL2 VARCHAR(50) ,-- 주요검색조건
--@NOR_TEL3 VARCHAR(50) ,-- 주요검색조건
--@EMAIL VARCHAR(50),


--DECLARE @IS_DUP_PROC INT 
--SET @IS_DUP_PROC = 1 -- 고객 자동병합 처리 

--SELECT @CUS_NAME='박형만',@GENDER=NULL,@BIRTH_DATE='1980-07-08',@NOR_TEL1='010',@NOR_TEL2='9185',@NOR_TEL3='2481' 

	DECLARE @RET_CUS_NO INT 
	SET @RET_CUS_NO = 1 ; --  기본값 
	--고객번호가 1 보다 작거나 같으면 , 휴대폰 번호가 유효하면 
	--이메일 주소가 있으면 
	IF ISNULL(@CUS_NO,-1) <= 1  
		--AND @BIRTH_DATE IS NOT NULL 
		AND ISNULL(@NOR_TEL1,'') <> '' AND @NOR_TEL1 IN ( '010','011','017','018','019' ) 
		AND ISNULL(@NOR_TEL2,'') <> '' AND LEN(@NOR_TEL2) >= 3 
		AND ISNULL(@NOR_TEL3,'') <> '' AND LEN(@NOR_TEL3) >= 4 

		--OR (ISNULL(@EMAIL,'') <>  '' AND LEN(@EMAIL) > 3 AND CHARINDEX('@',@EMAIL) > 1 )
		
	BEGIN
		-- 자동매핑 체크 
		-- 1. 이름+휴대폰으로 체크
		-- 이름 휴대폰 중에 생년월일 같은것 , 있는것 생년월일 없는것 순 
		-- 멤버에 있으면 (두명일수는 없음)

		DECLARE @TMP_CUS_NO INT 
		DECLARE @CERT_YN VARCHAR(1) 
		-- 기존것 우선으로 ( 주민번호 변경으로 DI 가 바뀌었을수 있음)
		SELECT TOP 1 @TMP_CUS_NO = CUS_NO FROM ( 

			SELECT A.CUS_NO, A.CUS_ID ,'1' AS [MEMBER_TYPE] , BIRTH_DATE 
			FROM CUS_CUSTOMER_damo A WITH(NOLOCK)
			WHERE CUS_NAME = @CUS_NAME 	/*AND BIRTH_DATE = @BIRTH_DATE*/ AND NOR_TEL1 = @NOR_TEL1 AND NOR_TEL2 = @NOR_TEL2 AND NOR_TEL3 = @NOR_TEL3
			UNION
			SELECT A.CUS_NO, A.CUS_ID ,'2' AS [MEMBER_TYPE] , BIRTH_DATE 
			FROM CUS_MEMBER A WITH(NOLOCK)
			WHERE CUS_NAME = @CUS_NAME 	/*AND BIRTH_DATE = @BIRTH_DATE*/ AND NOR_TEL1 = @NOR_TEL1 AND NOR_TEL2 = @NOR_TEL2 AND NOR_TEL3 = @NOR_TEL3 AND CUS_ID IS NOT NULL 
			UNION
			SELECT A.CUS_NO,A.CUS_ID ,'2' AS [MEMBER_TYPE] , BIRTH_DATE 
			FROM CUS_MEMBER_SLEEP A WITH(NOLOCK)
			WHERE CUS_NAME = @CUS_NAME 	/*AND BIRTH_DATE = @BIRTH_DATE*/ AND NOR_TEL1 = @NOR_TEL1 AND NOR_TEL2 = @NOR_TEL2 AND NOR_TEL3 = @NOR_TEL3 AND CUS_ID IS NOT NULL 
		) T 
		ORDER BY
			 --(CASE WHEN BIRTH_DATE IS NOT NULL AND BIRTH_DATE = @BIRTH_DATE THEN 1 
				--WHEN BIRTH_DATE IS NOT NULL THEN 2 ELSE 3 END),  -- 생년월일 같은것 , 생년월일 있는것  , 생년월일 없는것순 
			MEMBER_TYPE DESC	-- 회원 우선
			, CUS_NO ASC		-- 가입일 빠른것 우선 
		
		
		SET @RET_CUS_NO = @TMP_CUS_NO 

		------------------------------------------------------------------------
		-- 정보를 찾지 못하였다면, 신규 고객정보 생성하고 CUS_NO 갱신 
		IF ISNULL(@TMP_CUS_NO,-1)  = -1  AND @NEW_CUS_YN = 'Y' 
		BEGIN
		
			INSERT INTO CUS_CUSTOMER_DAMO (CUS_NAME, LAST_NAME , FIRST_NAME,
				--SOC_NUM1,SEC1_SOC_NUM2, SEC_SOC_NUM2, 
				NOR_TEL1, NOR_TEL2 ,NOR_TEL3 , EMAIL, 
				HOM_TEL1 ,HOM_TEL2 ,HOM_TEL3 ,
				NEW_DATE, NEW_CODE ,--IPIN_DUP_INFO ,IPIN_CONN_INFO ,
				[NATIONAL] ,
				BIRTH_DATE , GENDER )
			VALUES (@CUS_NAME,  @LAST_NAME , @FIRST_NAME,
				@NOR_TEL1, @NOR_TEL2 , @NOR_TEL3,  @EMAIL,
				@HOM_TEL1 ,@HOM_TEL2 ,@HOM_TEL3 ,
				GETDATE(), @NEW_CODE ,--@IPIN_DUP_INFO, @IPIN_CONN_INFO , 
				@NATIONAL,
				@BIRTH_DATE , @GENDER )

			SET @RET_CUS_NO = @@IDENTITY 
		END    

		IF( @RET_CUS_NO > 1 ) 
		BEGIN 
			SELECT T.*
			, DAMO.dbo.dec_varchar('DIABLO','dbo.CUS_CUSTOMER','PASS_NUM', C.SEC_PASS_NUM) AS PASS_NUM,C.PASS_DATE,C.FAX_SEQ , C.PASS_EXPIRE, C.PASS_ISSUE
			 FROM 
			(
				SELECT 3 AS CUS_TYPE , CUS_NO,CUS_ID,CUS_NAME,LAST_NAME,FIRST_NAME,NOR_TEL1, NOR_TEL2,NOR_TEL3,EMAIL,HOM_TEL1 ,HOM_TEL2 ,HOM_TEL3 ,[NATIONAL],BIRTH_DATE , GENDER ,
					ADDRESS1,ADDRESS2,ZIP_CODE,IPIN_DUP_INFO,IPIN_CONN_INFO
				FROM CUS_CUSTOMER_DAMO WHERE CUS_NO = @RET_CUS_NO 	
				--UNION ALL 
				--SELECT 1 AS CUS_TYPE , CUS_NO,CUS_ID,CUS_NAME,LAST_NAME,FIRST_NAME,NOR_TEL1, NOR_TEL2,NOR_TEL3,EMAIL,HOM_TEL1 ,HOM_TEL2 ,HOM_TEL3 ,[NATIONAL],BIRTH_DATE , GENDER ,
				--	ADDRESS1,ADDRESS2,ZIP_CODE,IPIN_DUP_INFO,IPIN_CONN_INFO
				--FROM CUS_MEMBER WHERE CUS_NO = @RET_CUS_NO AND CUS_ID IS NOT NULL  	
				--UNION ALL 
				--SELECT 2 AS CUS_TYPE , CUS_NO,CUS_ID,CUS_NAME,LAST_NAME,FIRST_NAME,NOR_TEL1, NOR_TEL2,NOR_TEL3,EMAIL,HOM_TEL1 ,HOM_TEL2 ,HOM_TEL3 ,[NATIONAL],BIRTH_DATE , GENDER ,
				--	ADDRESS1,ADDRESS2,ZIP_CODE,IPIN_DUP_INFO,IPIN_CONN_INFO
				--FROM CUS_MEMBER_SLEEP WHERE CUS_NO = @RET_CUS_NO AND CUS_ID IS NOT NULL 
			
			) T
				LEFT JOIN CUS_CUSTOMER_DAMO  C 
					ON T.CUS_NO = C.CUS_NO 
			ORDER BY T.CUS_TYPE ASC 
		END 
		
	
	END 

END 

GO
