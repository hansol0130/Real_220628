USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: SP_ERP_MERGE_CUSTOMER_SEARCH
■ DESCRIPTION				: 고객병합 고객정보 검색
■ INPUT PARAMETER			: 
	@CUS_ID					: Web고객ID
	@CUS_NAME				: 고객명
	@CUS_BIRTH				: 생년월일
	@CUS_NUMBER1			: 고객전화번호
	@CUS_NUMBER2			: 고객전화번호
	@CUS_NUMBER3			: 고객전화번호
	@CUS_EMAIL				: 고객이메일
■ OUTPUT PARAMETER			: 
■ EXEC						: 
	exec SP_ERP_MERGE_CUSTOMER_SEARCH @CUS_ID='',@CUS_NAME='김성호',@CUS_BIRTH=NULL,@CUS_TEL='',@CUS_EMAIL=''
	exec SP_ERP_MERGE_CUSTOMER_SEARCH @CUS_ID='',@CUS_NAME='김성호',@CUS_BIRTH='1977-09-12',@CUS_TEL='',@CUS_EMAIL=''
	exec SP_ERP_MERGE_CUSTOMER_SEARCH @CUS_ID='',@CUS_NAME='김성호',@CUS_BIRTH='',@CUS_TEL='010-3253-6841',@CUS_EMAIL=''
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2015-10-08		정지용			최초생성
================================================================================================================*/ 

CREATE PROCEDURE [dbo].[SP_ERP_MERGE_CUSTOMER_SEARCH]

	@CUS_ID		VARCHAR(20),
	@CUS_NAME	VARCHAR(20),
	@CUS_BIRTH	VARCHAR(10),
	@CUS_TEL	VARCHAR(20),
	@CUS_EMAIL	VARCHAR(40)

AS

	DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(1000), @WHERE NVARCHAR(1000)
	DECLARE @CUS_TEL1 VARCHAR(4), @CUS_TEL2 VARCHAR(4), @CUS_TEL3 VARCHAR(20)

	SELECT @WHERE = '', @CUS_TEL = REPLACE(@CUS_TEL, '-', '');

	-- 전화번호 처리
	IF ISNULL(@CUS_TEL, '') <> ''
	BEGIN
		IF LEN(@CUS_TEL) = 7 OR LEN(@CUS_TEL) = 8
		BEGIN
			SELECT @CUS_TEL1 = '', @CUS_TEL2 = SUBSTRING(@CUS_TEL, 1, (LEN(@CUS_TEL) - 4)), @CUS_TEL3 = SUBSTRING(@CUS_TEL, (LEN(@CUS_TEL) - 3), 4)
		END
		ELSE IF LEN(@CUS_TEL) = 9
		BEGIN
			SELECT @CUS_TEL1 = SUBSTRING(@CUS_TEL, 1, 2), @CUS_TEL2 = SUBSTRING(@CUS_TEL, 3, 3), @CUS_TEL3 = SUBSTRING(@CUS_TEL, 6, 4)
		END
		ELSE IF LEN(@CUS_TEL) = 10 AND SUBSTRING(@CUS_TEL, 1, 2) = '02'
		BEGIN
			SELECT @CUS_TEL1 = SUBSTRING(@CUS_TEL, 1, 2), @CUS_TEL2 = SUBSTRING(@CUS_TEL, 3, 4), @CUS_TEL3 = SUBSTRING(@CUS_TEL, 7, 4)
		END
		ELSE IF LEN(@CUS_TEL) = 10 AND SUBSTRING(@CUS_TEL, 1, 2) <> '02'
		BEGIN
			SELECT @CUS_TEL1 = SUBSTRING(@CUS_TEL, 1, 3), @CUS_TEL2 = SUBSTRING(@CUS_TEL, 4, 3), @CUS_TEL3 = SUBSTRING(@CUS_TEL, 7, 4)
		END
		ELSE IF LEN(@CUS_TEL) = 11
		BEGIN
			SELECT @CUS_TEL1 = SUBSTRING(@CUS_TEL, 1, 3), @CUS_TEL2 = SUBSTRING(@CUS_TEL, 4, 4), @CUS_TEL3 = SUBSTRING(@CUS_TEL, 8, 4)
		END
		ELSE
		BEGIN
			SELECT @CUS_TEL3 = @CUS_TEL
		END 

		IF LEN(@CUS_TEL) = 4
		BEGIN
			SET @WHERE = @WHERE + N' AND (A.NOR_TEL3 = @CUS_TEL3 OR A.COM_TEL3 = @CUS_TEL3 OR A.HOM_TEL3 = @CUS_TEL3)'
		END
		ELSE IF LEN(@CUS_TEL) > 4
		BEGIN
			SET @WHERE = @WHERE + N' AND ((A.NOR_TEL3 = @CUS_TEL3 AND A.NOR_TEL2 = @CUS_TEL2 AND ISNULL(A.NOR_TEL1, '''') = @CUS_TEL1)
				OR (A.COM_TEL3 = @CUS_TEL3 AND A.COM_TEL2 = @CUS_TEL2 AND ISNULL(A.COM_TEL1, '''') = @CUS_TEL1)
				OR (A.HOM_TEL3 = @CUS_TEL3 AND A.HOM_TEL2 = @CUS_TEL2 AND ISNULL(A.HOM_TEL1, '''') = @CUS_TEL1))'
		END
	END

	IF ISNULL(@CUS_ID, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + N' AND A.CUS_ID = @CUS_ID'
	END

	IF ISNULL(@CUS_NAME, '') <> ''
	BEGIN 
		SET @WHERE = @WHERE + N' AND A.CUS_NAME LIKE @CUS_NAME + ''%'''
		--SET @WHERE = @WHERE + ' AND A.CUS_NAME = @CUS_NAME'
	END

	IF ISNULL(@CUS_EMAIL, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + N' AND A.EMAIL LIKE @CUS_EMAIL + ''%'''
	END

	IF ISNULL(@CUS_BIRTH, '') <> '' AND ISDATE(@CUS_BIRTH) > 0
	BEGIN
		SET @WHERE = @WHERE + N' AND A.BIRTH_DATE = CONVERT(DATETIME, @CUS_BIRTH)'
	END

	IF ISNULL(@WHERE, '') <> ''
	BEGIN
		SELECT @WHERE = N'WHERE ' + SUBSTRING(@WHERE, 5, 3000)
	END

	SET @SQLSTRING = N'WITH LIST AS
(
-- 웹회원 우선
SELECT A.CUS_NO, MAX(A.MEMBER_TYPE) AS [MEMBER_TYPE]
FROM (
	SELECT A.CUS_NO, (CASE WHEN B.CUS_NO IS NULL THEN ''C'' WHEN B.CUS_NO > 0 THEN ''M'' END) AS [MEMBER_TYPE]
	FROM Diablo.DBO.CUS_CUSTOMER_damo A WITH(NOLOCK)
	--LEFT JOIN Diablo.DBO.CUS_MEMBER B WITH(NOLOCK) ON A.CUS_NO = B.CUS_NO
	LEFT JOIN (
		SELECT
			A.CUS_NO, A.CUS_ID, A.CUS_NAME, A.EMAIL, A.BIRTH_DATE, A.GENDER, A.NOR_TEL1, A.NOR_TEL2, A.NOR_TEL3, A.COM_TEL1, A.COM_TEL2, A.COM_TEL3, A.HOM_TEL1, A.HOM_TEL2, A.HOM_TEL3
		FROM Diablo.dbo.CUS_MEMBER A WITH(NOLOCK)
		WHERE CUS_ID IS NOT NULL 
		UNION 
		SELECT
			A.CUS_NO, A.CUS_ID, A.CUS_NAME, A.EMAIL, A.BIRTH_DATE, A.GENDER, A.NOR_TEL1, A.NOR_TEL2, A.NOR_TEL3, A.COM_TEL1, A.COM_TEL2, A.COM_TEL3, A.HOM_TEL1, A.HOM_TEL2, A.HOM_TEL3
		FROM Diablo.dbo.CUS_MEMBER_SLEEP A WITH(NOLOCK)
	) B ON A.CUS_NO = B.CUS_NO
	' + @WHERE + N'
	UNION ALL
	SELECT A.CUS_NO, ''M'' AS [MEMBER_TYPE]
	--FROM Diablo.DBO.CUS_MEMBER A WITH(NOLOCK)
	FROM (
		SELECT
			A.CUS_NO, A.CUS_ID, A.CUS_NAME, A.EMAIL, A.BIRTH_DATE, A.GENDER, A.NOR_TEL1, A.NOR_TEL2, A.NOR_TEL3, A.COM_TEL1, A.COM_TEL2, A.COM_TEL3, A.HOM_TEL1, A.HOM_TEL2, A.HOM_TEL3
		FROM Diablo.dbo.CUS_MEMBER A WITH(NOLOCK)
		WHERE CUS_ID IS NOT NULL 
		UNION 
		SELECT
			A.CUS_NO, A.CUS_ID, A.CUS_NAME, A.EMAIL, A.BIRTH_DATE, A.GENDER, A.NOR_TEL1, A.NOR_TEL2, A.NOR_TEL3, A.COM_TEL1, A.COM_TEL2, A.COM_TEL3, A.HOM_TEL1, A.HOM_TEL2, A.HOM_TEL3
		FROM Diablo.dbo.CUS_MEMBER_SLEEP A WITH(NOLOCK)
	) A
	';
	SET @SQLSTRING = @SQLSTRING + @WHERE + N'
	) A
	GROUP BY A.CUS_NO
)
SELECT	TOP 200
	Z.FLAG,
	A.CUS_NO,
	A.CUS_ID,
	A.CUS_NAME,
	BIRTH_DATE,
	DATEDIFF(YEAR,CAST(A.BIRTH_DATE AS DATETIME),GETDATE()) AS AGE,
	GENDER,
	A.NOR_TEL1, A.NOR_TEL2, A.NOR_TEL3, 
	A.EMAIL,
	B.RES_COUNT,
	B.RES_LAST_CNT,
	CONVERT(VARCHAR(10),A.NEW_DATE,120) AS NEW_DATE,
	A.LAST_NAME + ''/'' + A.FIRST_NAME AS ENG_NAME,
	A.HOM_TEL1, A.HOM_TEL2, A.HOM_TEL3,
	A.COM_TEL1, A.COM_TEL2, A.COM_TEL3,
	A.RCV_SMS_YN,
	A.RCV_EMAIL_YN,
	A.ETC,
	(SELECT COUNT(1) FROM SIRENS.CTI.CTI_CONSULT CCT WITH(NOLOCK) WHERE CCT.CUS_NO = A.CUS_NO) AS CONSULT_CNT
FROM (
	SELECT *, ROW_NUMBER() OVER (PARTITION BY A.CUS_NO ORDER BY A.FLAG, A.SEQ) AS [SEQ_NUM]
	FROM (
		-- 고객과의 약속
		SELECT ''1'' AS [FLAG], AA.CUS_NO AS [CUS_NO], ROW_NUMBER() OVER(ORDER BY AA.NEW_DATE DESC, AA.CONSULT_RES_DATE) AS [SEQ]
		FROM SIRENS.CTI.CTI_CONSULT_RESERVATION AA WITH(NOLOCK)
		INNER JOIN SIRENS.CTI.CTI_CONSULT BB WITH(NOLOCK) ON AA.CONSULT_SEQ = BB.CONSULT_SEQ
		WHERE AA.CONSULT_RES_DATE >= DATEADD(M, -1, GETDATE()) AND AA.CUS_NO IN (SELECT CUS_NO FROM LIST)
		UNION ALL
		-- 상담 내역
		SELECT ''2'', AA.CUS_NO, ROW_NUMBER() OVER(ORDER BY AA.CONSULT_DATE DESC)
		FROM SIRENS.CTI.CTI_CONSULT AA WITH(NOLOCK)
		WHERE AA.CONSULT_DATE >= DATEADD(M, -1, GETDATE()) AND AA.CUS_NO IN (SELECT CUS_NO FROM LIST)
		UNION ALL
		-- 예약 정보
		SELECT AA.FLAG, AA.CUS_NO, ROW_NUMBER() OVER(ORDER BY AA.DEP_DATE)
		FROM (
			SELECT (CASE WHEN AA.DEP_DATE > GETDATE() THEN ''3'' ELSE ''4'' END) AS [FLAG], AA.CUS_NO, AA.DEP_DATE
			FROM Diablo.DBO.RES_MASTER_damo AA WITH(NOLOCK)
			WHERE AA.ARR_DATE > DATEADD(D, -15, GETDATE()) AND AA.RES_STATE <> 9 AND AA.CUS_NO IN (SELECT CUS_NO FROM LIST)
			UNION ALL
			SELECT (CASE WHEN AA.DEP_DATE > GETDATE() THEN ''3'' ELSE ''4'' END), BB.CUS_NO, AA.DEP_DATE
			FROM Diablo.DBO.RES_MASTER_damo AA WITH(NOLOCK)
			INNER JOIN Diablo.DBO.RES_CUSTOMER_damo BB WITH(NOLOCK) ON AA.RES_CODE = BB.RES_CODE
			WHERE AA.ARR_DATE > DATEADD(D, -15, GETDATE()) AND AA.RES_STATE <> 9 AND BB.RES_STATE <> 1 AND BB.CUS_NO IN (SELECT CUS_NO FROM LIST)
		) AA
		UNION ALL
		SELECT (CASE WHEN AA.MEMBER_TYPE = ''M'' THEN ''5'' ELSE ''6'' END), AA.CUS_NO, ROW_NUMBER() OVER(ORDER BY AA.CUS_NO DESC)
		FROM LIST AA
	) A
) Z
INNER JOIN Diablo.DBO.CUS_CUSTOMER_DAMO A WITH(NOLOCK) ON Z.CUS_NO = A.CUS_NO
LEFT JOIN (
	SELECT A.CUS_NO, SUM(CASE WHEN A.DEP_DATE > DATEADD(DD, -1, GETDATE()) THEN 1 ELSE 0 END) AS [RES_COUNT]
		, SUM(CASE WHEN A.DEP_DATE < DATEADD(DD, -1, GETDATE()) THEN 1 ELSE 0 END) AS [RES_LAST_CNT]
	FROM (
		SELECT A.CUS_NO, A.RES_CODE, A.DEP_DATE
		FROM Diablo.DBO.RES_MASTER_DAMO A WITH(NOLOCK)
		WHERE A.RES_STATE <= 7 AND A.CUS_NO IN (SELECT CUS_NO FROM LIST)
		UNION
		SELECT B.CUS_NO, A.RES_CODE, A.DEP_DATE
		FROM Diablo.DBO.RES_MASTER_DAMO A WITH(NOLOCK)
		INNER JOIN Diablo.DBO.RES_CUSTOMER_damo B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
		WHERE A.RES_STATE <= 7 AND B.RES_STATE = 0 AND B.CUS_NO IN (SELECT CUS_NO FROM LIST)
	) A
	GROUP BY A.CUS_NO
) B ON Z.CUS_NO = B.CUS_NO
WHERE Z.SEQ_NUM = 1
ORDER BY Z.FLAG, Z.SEQ';

	SET @PARMDEFINITION = N'
		@CUS_ID	VARCHAR(20),
		@CUS_NAME	VARCHAR(20),
		@CUS_BIRTH	VARCHAR(10),
		@CUS_TEL1	VARCHAR(4),
		@CUS_TEL2	VARCHAR(4),
		@CUS_TEL3	VARCHAR(4),
		@CUS_EMAIL	VARCHAR(40)';

	--SELECT LEN(@SQLSTRING)
	

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@CUS_ID,
		@CUS_NAME,
		@CUS_BIRTH,
		@CUS_TEL1,
		@CUS_TEL2,
		@CUS_TEL3,
		@CUS_EMAIL;
GO
