USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: XP_CUS_MEM_MERGE
■ DESCRIPTION				: 정회원 고객정보 통합
■ INPUT PARAMETER			:
■ OUTPUT PARAMETER			: 
■ EXEC						: 
■ MEMO						: 

	DECLARE @ERROR_MSG VARCHAR(1000) 

	EXEC XP_CUS_MEM_MERGE @ERROR_MSG OUTPUT , @TAR_CUS_NO = , @MEM_CUS_NO = , @EMP_CODE = '9999999' 
	SELECT @ERROR_MSG 
	정회원 고객정보 병합시 고려사항
		
		기존회원이 본인인증 회원 일경우 기존회원의 이름/생년월일/성별 기준으로 
			병합될(삭제될) 회원정보를 수정해준다 
		
		기존회원도 SNS 회원일경우 현재꺼 기준으로 합친다 
			개인정보는 현재꺼 기준으로 합쳐준다 (이름,생년월일등)
			단 현재꺼에 없는 정보는 기존회원꺼로 갱신한다? 요건 보류 


		포인트 내역 합쳐 주기 
			병합될(삭제될) 회원의 포인트를 기존회원으로 양도 

		기존 XP_CUS_CLEAR 로직에 정회원 정보 수정과 , 포인트 부분 추가 

------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
	DATE			AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
	2018-04-02		박형만			최초생성 정회원끼리도 통합 가능하도록 수정 ( 비회원 -> 정회원 통합은 불가 ) 
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[XP_CUS_MEM_MERGE]
	@ERROR_MSG		VARCHAR(1000) OUTPUT,
	@TAR_CUS_NO		INT,		-- 현재 회원(삭제대상 )
	@MEM_CUS_NO		INT,		-- 본인인증 정회원 (기준) 
	@EMP_CODE		EMP_CODE 
AS 
BEGIN


--DECLARE @TAR_CUS_NO		INT,		-- 현재 회원(삭제대상 )
--	@MEM_CUS_NO		INT,		-- 본인인증 정회원 (기준) 
--	@EMP_CODE		EMP_CODE 
--SELECT @TAR_CUS_NO =10600625  , @MEM_CUS_NO = 4767270 



-- 정회원 정보가 이미 SNS 회원에 연결(통합)되어 있을경우 튕기기 
IF @TAR_CUS_NO = @MEM_CUS_NO 
BEGIN
	SET @ERROR_MSG = '대상과 현재 회원이 같습니다'
	--ROLLBACK TRAN;
	RETURN;
END

	
	DECLARE @CUS_NO			INT,	-- 본인인증 정회원 (기준) 
	@CUS_NAME		VARCHAR(40),	-- 
	@CUS_NO_LIST	VARCHAR(1000), --  현재 회원(삭제대상 )
	--@EMP_CODE		VARCHAR(7), --  시스템 관리자 
	@CUS_CLASS		INT,
	@NOR_TEL1		VARCHAR(4),
	@NOR_TEL2		VARCHAR(4),
	@NOR_TEL3		VARCHAR(4),
	@COM_TEL1		VARCHAR(4),
	@COM_TEL2		VARCHAR(4),
	@COM_TEL3		VARCHAR(4),
	@HOM_TEL1		VARCHAR(4),
	@HOM_TEL2		VARCHAR(4),
	@HOM_TEL3		VARCHAR(4),
	
	@BIRTH_DATE		DATETIME,
	@GENDER			VARCHAR(1),
	@EMAIL			VARCHAR(40),
	@FIRST_NAME		VARCHAR(20),
	@LAST_NAME		VARCHAR(20),
	@PASS_NUM		VARCHAR(20),
	@ZIP_CODE		VARCHAR(7),
	@ADDRESS1		VARCHAR(100),
	@ADDRESS2		VARCHAR(100)

	-- 정회원 정보를 가져옴 
	-- WEB ,ERP 에서 미리 체크해야함
	SELECT  
		@CUS_NAME = CUS_NAME , @BIRTH_DATE = BIRTH_DATE , @GENDER = GENDER , --@CUS_CLASS = CUS_CLASS ,  -- 등급은 무조건 CUSTOMER 
		@NOR_TEL1 = NOR_TEL1 , @NOR_TEL2 = NOR_TEL2 ,@NOR_TEL3 = NOR_TEL3 ,@COM_TEL1 = COM_TEL1 , @COM_TEL2 = COM_TEL2 ,@COM_TEL3 = COM_TEL3 ,@HOM_TEL1 = HOM_TEL1 , @HOM_TEL2 = HOM_TEL2 ,@HOM_TEL3 = HOM_TEL3 ,
		@EMAIL = EMAIL  , @FIRST_NAME = FIRST_NAME , @LAST_NAME = LAST_NAME , /*@PASS_NUM = PASS_NUM ,*/  @ZIP_CODE = ZIP_CODE , @ADDRESS1 =  ADDRESS1 ,@ADDRESS2 =  ADDRESS2 
	FROM 
	(
		SELECT 1 AS ROW_NUM,  CUS_NO , CUS_NAME , CUS_GRADE AS  CUS_CLASS , NOR_TEL1 , NOR_TEL2 ,NOR_TEL3 ,COM_TEL1 , COM_TEL2 ,COM_TEL3 ,HOM_TEL1 , HOM_TEL2 ,HOM_TEL3 ,
		BIRTH_DATE , GENDER , EMAIL  , FIRST_NAME , LAST_NAME , PASS_NUM , ZIP_CODE , ADDRESS1 , ADDRESS2 
		FROM CUS_MEMBER WITH(NOLOCK) -- 기준회원번호 
		WHERE CUS_NO = @MEM_CUS_NO 
		UNION ALL 
		SELECT 2 AS ROW_NUM, CUS_NO , CUS_NAME , CUS_GRADE AS CUS_CLASS , NOR_TEL1 , NOR_TEL2 ,NOR_TEL3 ,COM_TEL1 , COM_TEL2 ,COM_TEL3 ,HOM_TEL1 , HOM_TEL2 ,HOM_TEL3 ,
		BIRTH_DATE , GENDER , EMAIL  , FIRST_NAME , LAST_NAME , PASS_NUM , ZIP_CODE , ADDRESS1 , ADDRESS2 
		FROM CUS_MEMBER_SLEEP  WITH(NOLOCK)
		WHERE CUS_NO = @MEM_CUS_NO   -- 기준회원번호 
	) T 
	WHERE CUS_NO = @MEM_CUS_NO 
	ORDER BY ROW_NUM ASC   


	-- 현재 회원 정보 꺼  우선 쓰기 !!! 
	-- NOR_TEL , EMAIL 만 
	SELECT  
		@NOR_TEL1 = NOR_TEL1 , @NOR_TEL2 = NOR_TEL2 ,@NOR_TEL3 = NOR_TEL3 ,@COM_TEL1 = COM_TEL1 , @COM_TEL2 = COM_TEL2 ,@COM_TEL3 = COM_TEL3 ,@HOM_TEL1 = HOM_TEL1 , @HOM_TEL2 = HOM_TEL2 ,@HOM_TEL3 = HOM_TEL3 ,
		@EMAIL = EMAIL
	FROM 
	(
		SELECT 1 AS ROW_NUM,  CUS_NO , CUS_NAME , CUS_GRADE AS  CUS_CLASS , NOR_TEL1 , NOR_TEL2 ,NOR_TEL3 ,COM_TEL1 , COM_TEL2 ,COM_TEL3 ,HOM_TEL1 , HOM_TEL2 ,HOM_TEL3 ,
		BIRTH_DATE , GENDER , EMAIL  , FIRST_NAME , LAST_NAME , PASS_NUM , ZIP_CODE , ADDRESS1 , ADDRESS2 
		FROM CUS_MEMBER WITH(NOLOCK) -- 기준회원번호 
		WHERE CUS_NO = @TAR_CUS_NO 
		UNION ALL 
		SELECT 2 AS ROW_NUM, CUS_NO , CUS_NAME , CUS_GRADE AS CUS_CLASS , NOR_TEL1 , NOR_TEL2 ,NOR_TEL3 ,COM_TEL1 , COM_TEL2 ,COM_TEL3 ,HOM_TEL1 , HOM_TEL2 ,HOM_TEL3 ,
		BIRTH_DATE , GENDER , EMAIL  , FIRST_NAME , LAST_NAME , PASS_NUM , ZIP_CODE , ADDRESS1 , ADDRESS2 
		FROM CUS_MEMBER_SLEEP  WITH(NOLOCK)
		WHERE CUS_NO = @TAR_CUS_NO   -- 기준회원번호 
	) T 
	WHERE CUS_NO = @TAR_CUS_NO 
	ORDER BY ROW_NUM ASC   

	-- 주요 정보 비엇을때 
	-- CUSTOMER 에서 가져오기. 변수가 비었으면 채워주기 . 아니면 그대로 둠 
	-- 기준회원 우선 
	SELECT 
		@CUS_CLASS = CASE WHEN ISNULL(@CUS_CLASS,-1) = -1 THEN CUS_GRADE ELSE @CUS_CLASS END , 
		@NOR_TEL1 = CASE WHEN ISNULL(@NOR_TEL1,'') = '' THEN NOR_TEL1 ELSE @NOR_TEL1  END , 
		@NOR_TEL2 = CASE WHEN ISNULL(@NOR_TEL2,'') = '' THEN NOR_TEL2 ELSE @NOR_TEL2  END , 
		@NOR_TEL3 = CASE WHEN ISNULL(@NOR_TEL3,'') = '' THEN NOR_TEL3 ELSE @NOR_TEL3  END , 
		@COM_TEL1 = CASE WHEN ISNULL(@COM_TEL1,'') = '' THEN COM_TEL1 ELSE @COM_TEL1  END , 
		@COM_TEL2 = CASE WHEN ISNULL(@COM_TEL2,'') = '' THEN COM_TEL2 ELSE @COM_TEL2  END , 
		@COM_TEL3 = CASE WHEN ISNULL(@COM_TEL3,'') = '' THEN COM_TEL3 ELSE @COM_TEL3  END , 
		@HOM_TEL1 = CASE WHEN ISNULL(@HOM_TEL1,'') = '' THEN HOM_TEL1 ELSE @HOM_TEL1  END , 
		@HOM_TEL2 = CASE WHEN ISNULL(@HOM_TEL2,'') = '' THEN HOM_TEL2 ELSE @HOM_TEL2  END , 
		@HOM_TEL3 = CASE WHEN ISNULL(@HOM_TEL3,'') = '' THEN HOM_TEL3 ELSE @HOM_TEL3  END , 

		@BIRTH_DATE = CASE WHEN @BIRTH_DATE IS NULL THEN BIRTH_DATE ELSE @BIRTH_DATE  END , 
		@GENDER = CASE WHEN ISNULL(@GENDER,'') = '' THEN GENDER ELSE @GENDER END , 
		@EMAIL = CASE WHEN ISNULL(@EMAIL,'') = '' THEN EMAIL ELSE EMAIL  END , 

		@FIRST_NAME = CASE WHEN ISNULL(@FIRST_NAME,'') = '' THEN FIRST_NAME ELSE @FIRST_NAME END, 
		@LAST_NAME = CASE WHEN ISNULL(@LAST_NAME,'') = '' THEN LAST_NAME ELSE @LAST_NAME  END, 
		
		@ZIP_CODE = CASE WHEN ISNULL(@ZIP_CODE,'') = '' THEN ZIP_CODE  ELSE @ZIP_CODE  END, 
		--@PASS_NUM = CASE WHEN ISNULL(@PASS_NUM,'') = '' THEN @PASS_NUM END, 
		@ADDRESS1 = CASE WHEN ISNULL(@ADDRESS1,'') = '' THEN ADDRESS1 ELSE @ADDRESS1 END, 
		@ADDRESS2 = CASE WHEN ISNULL(@ADDRESS2,'') = '' THEN ADDRESS2 ELSE @ADDRESS2 END 
	FROM CUS_CUSTOMER_dAMO  WITH(NOLOCK)
	WHERE CUS_NO = @MEM_CUS_NO    -- 기준회원번호 

	-- 삭제(현재)회원 그다음 
	SELECT 
		@CUS_CLASS = CASE WHEN ISNULL(@CUS_CLASS,-1) = -1 THEN CUS_GRADE ELSE @CUS_CLASS END , 
		@NOR_TEL1 = CASE WHEN ISNULL(@NOR_TEL1,'') = '' THEN NOR_TEL1 ELSE @NOR_TEL1  END , 
		@NOR_TEL2 = CASE WHEN ISNULL(@NOR_TEL2,'') = '' THEN NOR_TEL2 ELSE @NOR_TEL2  END , 
		@NOR_TEL3 = CASE WHEN ISNULL(@NOR_TEL3,'') = '' THEN NOR_TEL3 ELSE @NOR_TEL3  END , 
		@COM_TEL1 = CASE WHEN ISNULL(@COM_TEL1,'') = '' THEN COM_TEL1 ELSE @COM_TEL1  END , 
		@COM_TEL2 = CASE WHEN ISNULL(@COM_TEL2,'') = '' THEN COM_TEL2 ELSE @COM_TEL2  END , 
		@COM_TEL3 = CASE WHEN ISNULL(@COM_TEL3,'') = '' THEN COM_TEL3 ELSE @COM_TEL3  END , 
		@HOM_TEL1 = CASE WHEN ISNULL(@HOM_TEL1,'') = '' THEN HOM_TEL1 ELSE @HOM_TEL1  END , 
		@HOM_TEL2 = CASE WHEN ISNULL(@HOM_TEL2,'') = '' THEN HOM_TEL2 ELSE @HOM_TEL2  END , 
		@HOM_TEL3 = CASE WHEN ISNULL(@HOM_TEL3,'') = '' THEN HOM_TEL3 ELSE @HOM_TEL3  END , 

		@BIRTH_DATE = CASE WHEN @BIRTH_DATE IS NULL THEN BIRTH_DATE ELSE @BIRTH_DATE  END , 
		@GENDER = CASE WHEN ISNULL(@GENDER,'') = '' THEN GENDER ELSE @GENDER END , 
		@EMAIL = CASE WHEN ISNULL(@EMAIL,'') = '' THEN EMAIL ELSE EMAIL  END , 

		@FIRST_NAME = CASE WHEN ISNULL(@FIRST_NAME,'') = '' THEN FIRST_NAME ELSE @FIRST_NAME END, 
		@LAST_NAME = CASE WHEN ISNULL(@LAST_NAME,'') = '' THEN LAST_NAME ELSE @LAST_NAME  END, 
		
		@ZIP_CODE = CASE WHEN ISNULL(@ZIP_CODE,'') = '' THEN ZIP_CODE  ELSE @ZIP_CODE  END, 
		--@PASS_NUM = CASE WHEN ISNULL(@PASS_NUM,'') = '' THEN @PASS_NUM END, 
		@ADDRESS1 = CASE WHEN ISNULL(@ADDRESS1,'') = '' THEN ADDRESS1 ELSE @ADDRESS1 END, 
		@ADDRESS2 = CASE WHEN ISNULL(@ADDRESS2,'') = '' THEN ADDRESS2 ELSE @ADDRESS2 END 
	FROM CUS_CUSTOMER_dAMO  WITH(NOLOCK)
	WHERE CUS_NO = @TAR_CUS_NO  -- 삭제될 회원 


	SET @CUS_NO_LIST  = CONVERT(VARCHAR,@TAR_CUS_NO) 

--SELECT @MEM_CUS_NO , -- 기준 정회원 
--@CUS_NAME, 
--@CUS_NO_LIST,  -- 삭제될 회원1
--@EMP_CODE	,
--@CUS_CLASS ,
--@NOR_TEL1	 ,
--@NOR_TEL2	 ,
--@NOR_TEL3	 ,
--@COM_TEL1	 ,
--@COM_TEL2	 ,
--@COM_TEL3	 ,
--@HOM_TEL1	 ,
--@HOM_TEL2	 ,
--@HOM_TEL3	 ,

--@BIRTH_DATE	,
--@GENDER		,
--@EMAIL		,
--@FIRST_NAME	,
--@LAST_NAME	,
--@PASS_NUM		,
--@ZIP_CODE		,
--@ADDRESS1		,
--@ADDRESS2		

	-- 고객회원정보 병합 신규 SP 호출 
	EXEC XP_CUS_MEM_CLEAR 
		@ERROR_MSG  = @ERROR_MSG  OUTPUT , 
		@CUS_NO			= @MEM_CUS_NO , -- 기준 정회원 
		@CUS_NAME		= @CUS_NAME, 
		@CUS_NO_LIST	= @CUS_NO_LIST,  -- 삭제될 회원1
		@EMP_CODE		= @EMP_CODE	,
		@CUS_CLASS		= @CUS_CLASS ,
		@NOR_TEL1		= @NOR_TEL1	 ,
		@NOR_TEL2		= @NOR_TEL2	 ,
		@NOR_TEL3		= @NOR_TEL3	 ,
		@COM_TEL1		= @COM_TEL1	 ,
		@COM_TEL2		= @COM_TEL2	 ,
		@COM_TEL3		= @COM_TEL3	 ,
		@HOM_TEL1		= @HOM_TEL1	 ,
		@HOM_TEL2		= @HOM_TEL2	 ,
		@HOM_TEL3		= @HOM_TEL3	 ,
	
		@BIRTH_DATE		= @BIRTH_DATE	,
		@GENDER			= @GENDER		,
		@EMAIL			= @EMAIL		,
		@FIRST_NAME		= @FIRST_NAME	,
		@LAST_NAME		= @LAST_NAME	,
		@PASS_NUM		= @PASS_NUM		,
		@ZIP_CODE		= @ZIP_CODE		,
		@ADDRESS1		= @ADDRESS1		,
		@ADDRESS2		= @ADDRESS2		

END 




GO
