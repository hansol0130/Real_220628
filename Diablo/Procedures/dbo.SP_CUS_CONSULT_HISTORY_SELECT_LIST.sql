USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: SP_CUS_CONSULT_HISTORY_SELECT_LIST
■ DESCRIPTION				: CTI 상담이력조회
■ INPUT PARAMETER			: 
	@PAGE_INDEX  INT		: 현재 페이지
	@PAGE_SIZE  INT			: 한 페이지 표시 게시물 수
	@CATEGORY				: 카테고리구분코드
	@KEY VARCHAR(100)		: 검색 키
■ OUTPUT PARAMETER			: 
	@TOTAL_COUNT INT OUTPUT	: 총 상담 내역
■ EXEC						: 

declare @p4 int
set @p4=57
exec SP_CUS_CONSULT_HISTORY_SELECT_LIST @PAGE_INDEX=1,@PAGE_SIZE=10,@KEY=N'CusName=&CusID=gnflwldk&Email=&Tel=',@TOTAL_COUNT=@p4 output
select @p4

	DECLARE @TOTAL_COUNT INT, @KEY VARCHAR(100)
	SELECT @KEY = N'CusId=nolran'
	exec SP_CUS_CONSULT_HISTORY_SELECT_LIST 1, 50, @TOTAL_COUNT OUTPUT, @KEY
	SELECT @TOTAL_COUNT

	SELECT * FROM Sirens.cti.CTI_CONSULT CTI
	SELECT * FROM Sirens.cti.CTI_CONSULT_RESERVATION
	SELECT * FROM CUS_CUSTOMER WHERE SOC_NUM1 = '810606'
	
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2015-01-15		정지용			최초생성
   2015-03-03		김성호			주민번호 삭제, 생년월일 추가
   2015-10-01		정지용			인덱스 문제로 전화번호 조건 변경
   2018-02-26		김성호			CUS_GRADE 추가
   2020-09-21		김성호			CUS_GRADE 스키마 변경 (CUS_CUSTOMER_damo > CUS_GRADE -> CUS_VIP_HISTORY > CUS_GRADE), CTI.CONSULT_DATE 리턴 형식 변경
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[SP_CUS_CONSULT_HISTORY_SELECT_LIST]
	@PAGE_INDEX INT,
	@PAGE_SIZE INT,
	@TOTAL_COUNT INT OUTPUT,
	@KEY VARCHAR(100)
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

	DECLARE @SQLSTRING NVARCHAR(4000), @WHERE NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000)
		, @CUS_NAME VARCHAR(20)
		, @CUS_NO INT
		, @CUS_ID VARCHAR(20)
		, @EMAIL VARCHAR(40)
		, @TEL1 VARCHAR(3)
		, @TEL2 VARCHAR(4)
		, @TEL3 VARCHAR(4)
		, @BIRTH_DATE VARCHAR(10);

	SELECT 
		@CUS_NAME = Diablo.dbo.FN_PARAM(@KEY, 'CusName'),
		@CUS_ID = Diablo.dbo.FN_PARAM(@KEY, 'CusID'),
		@CUS_NO = Diablo.dbo.FN_PARAM(@KEY, 'CusNo'),
		@EMAIL = Diablo.dbo.FN_PARAM(@KEY, 'Email'),
		@TEL1 = Diablo.dbo.FN_PARAM(@KEY, 'Tel1'),
		@TEL2 = Diablo.dbo.FN_PARAM(@KEY, 'Tel2'),
		@TEL3 = Diablo.dbo.FN_PARAM(@KEY, 'Tel3'),
		@BIRTH_DATE = Diablo.dbo.FN_PARAM(@KEY, 'BirthDate');

	SET @WHERE = 'CTI.SAVE_TYPE <> ''1'''

	IF ISNULL(@CUS_NAME, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND CTI.CUS_NAME = @CUS_NAME';
	END

	IF ISNULL(@CUS_ID, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND CC.CUS_ID = @CUS_ID'
	END

	IF ISNULL(@CUS_NO, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND CC.CUS_NO = @CUS_NO'
	END

	IF ISNULL(@EMAIL, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND CC.EMAIL = @EMAIL'
	END

	IF ISNULL(@TEL1, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND CC.NOR_TEL1 = @TEL1'
	END

	IF ISNULL(@TEL2, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND CC.NOR_TEL2 = @TEL2'
	END

	IF ISNULL(@TEL3, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND CC.NOR_TEL3 = @TEL3'
	END

	IF ISNULL(@BIRTH_DATE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND CC.BIRTH_DATE = CONVERT(DATE, @BIRTH_DATE)'
	END

	--IF ISNULL(@SOC_NUM1, '') <> ''
	--BEGIN
	--	SET @WHERE = @WHERE + ' AND CC.SOC_NUM1 LIKE @SOC_NUM1 + ''%''';
	--END

	--IF ISNULL(@SOC_NUM2, '') <> ''
	--BEGIN
	--	SET @WHERE = @WHERE + 'AND CC.SEC1_SOC_NUM2 = damo.dbo.pred_meta_plain_v(@SOC_NUM2, ''DIABLO'', ''dbo.CUS_CUSTOMER'', ''SOC_NUM2'')'
	--END
	
	SET @SQLSTRING = N'
		SELECT 
			@TOTAL_COUNT = COUNT(*)
		FROM Sirens.cti.CTI_CONSULT CTI WITH(NOLOCK)
		INNER JOIN Diablo.DBO.CUS_CUSTOMER_DAMO CC WITH(NOLOCK) ON CC.CUS_NO = CTI.CUS_NO
		--LEFT OUTER JOIN Sirens.cti.CTI_CONSULT_RESERVATION RES WITH(NOLOCK) ON CTI.CONSULT_SEQ = RES.CONSULT_SEQ	
		LEFT JOIN Diablo.DBO.EMP_MASTER EMP WITH(NOLOCK) ON CTI.EDT_CODE = EMP.EMP_CODE
		WHERE ' + @WHERE + ';		

		SELECT 
			CTI.CONSULT_SEQ AS CON_NO,
			CTI.CONSULT_TYPE,
			(SELECT COUNT(CONSULT_TYPE) FROM Sirens.cti.CTI_CONSULT_TYPE WITH(NOLOCK) WHERE CONSULT_SEQ = CTI.CONSULT_SEQ AND CONSULT_TYPE = ''C'') AS CONSULT_TYPE1,
			(SELECT COUNT(CONSULT_TYPE) FROM Sirens.cti.CTI_CONSULT_TYPE WITH(NOLOCK) WHERE CONSULT_SEQ = CTI.CONSULT_SEQ AND CONSULT_TYPE = ''R'') AS CONSULT_TYPE2,
			(SELECT COUNT(CONSULT_TYPE) FROM Sirens.cti.CTI_CONSULT_TYPE WITH(NOLOCK) WHERE CONSULT_SEQ = CTI.CONSULT_SEQ AND CONSULT_TYPE = ''P'') AS CONSULT_TYPE3,
			RIGHT(''00'' + CONVERT(VARCHAR(2),CTI.DURATION_TIME/60),2) + '':'' + RIGHT(''00'' + CONVERT(VARCHAR,CTI.DURATION_TIME%60),2) AS DURATION_TIME,
			CC.CUS_NO,
			--CASE WHEN CC.CUS_ID IS NULL THEN ''N'' ELSE ''Y'' END AS MEMBER_YN,
			(CASE WHEN VM.CUS_NO > 0 THEN ''Y'' ELSE ''N'' END) AS MEMBER_YN,
			CC.CUS_NAME,
			CC.BIRTH_DATE,
			CC.GENDER,
			CC.NOR_TEL1,
			CC.NOR_TEL2,
			CC.NOR_TEL3,
			CC.HOM_TEL1,
			CC.HOM_TEL2,
			CC.HOM_TEL3,
			CC.ADDRESS1, 
			CC.ADDRESS2,
			CC.ZIP_CODE,
			ISNULL(CVH.CUS_GRADE, 0) AS CUS_GRADE,
			CTI.NEW_DATE,
			CTI.NEW_CODE,
			EMP.KOR_NAME AS NEW_NAME,
			CTI.TEAM_NAME,
			ISNULL(CVH.CUS_GRADE, 0) AS CUS_GRADE,		-- 상담일 기준 고객 등급
			CTI.CONSULT_CONTENT,
			CTI.CONSULT_DATE
			--CONVERT(VARCHAR(19), CTI.CONSULT_DATE, 120) AS CONSULT_DATE
		FROM Sirens.cti.CTI_CONSULT CTI WITH(NOLOCK)
		INNER JOIN Diablo.dbo.CUS_CUSTOMER_damo CC WITH(NOLOCK) ON CC.CUS_NO = CTI.CUS_NO
		LEFT JOIN Diablo.dbo.VIEW_MEMBER VM WITH(NOLOCK) ON CC.CUS_NO = VM.CUS_NO
		LEFT JOIN Diablo.dbo.CUS_VIP_HISTORY CVH WITH(NOLOCK) ON CVH.CUS_NO = CTI.CUS_NO AND CVH.VIP_YEAR = YEAR(CTI.CONSULT_DATE)
		--LEFT OUTER JOIN Sirens.cti.CTI_CONSULT_RESERVATION RES WITH(NOLOCK) ON CTI.CONSULT_SEQ = RES.CONSULT_SEQ	
		LEFT JOIN Diablo.DBO.EMP_MASTER EMP WITH(NOLOCK) ON CTI.NEW_CODE = EMP.EMP_CODE
		WHERE ' + @WHERE + '
		ORDER BY CTI.CUS_NO, CTI.CONSULT_DATE DESC
		OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
		ROWS ONLY';

	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@TOTAL_COUNT INT OUTPUT,
		@CUS_NAME VARCHAR(20),
		@CUS_ID VARCHAR(20),
		@CUS_NO INT,
		@EMAIL VARCHAR(40),
		@TEL1 VARCHAR(3),
		@TEL2 VARCHAR(4),
		@TEL3 VARCHAR(4),
		@BIRTH_DATE VARCHAR(10)';

	--PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, 
		@PAGE_INDEX,
		@PAGE_SIZE,
		@TOTAL_COUNT OUTPUT,
		@CUS_NAME,
		@CUS_ID,
		@CUS_NO,
		@EMAIL,
		@TEL1,
		@TEL2,
		@TEL3,
		@BIRTH_DATE;
	
END

GO
