USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_CUS_POINT_SELECT_LIST
■ DESCRIPTION				: 포인트 내역 LIST
■ INPUT PARAMETER			: 
	@PAGE_INDEX  INT		: 현재 페이지
	@PAGE_SIZE  INT			: 한 페이지 표시 게시물 수
	@CUS_NO		INT			: 회원 관리 번호
■ OUTPUT PARAMETER			: 
	@TOTAL_COUNT INT OUTPUT	: 총 포인트 내역  
	@TOTAL_COUNT INT OUTPUT	: 해당 고객의 총 포인트         
■ EXEC						: 
	DECLARE @PAGE_INDEX INT,
	@PAGE_SIZE  INT,
	@TOTAL_COUNT INT, 
	@TOTAL_POINT INT,
	@CUS_NO		INT  

	SELECT @PAGE_INDEX=1,@PAGE_SIZE=10,@CUS_NO=4948543

	exec XP_CUS_POINT_SELECT_LIST @page_index, @page_size, @cus_no, @total_count output, @TOTAL_POINT output
	SELECT @TOTAL_COUNT;
	SELECT @TOTAL_POINT
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
	2013-04-29		이동호			최초생성
	2013-11-26		박형만			지역구분 & 제휴사 상품 URL 추가 
	2016-04-18		김성호			총 포인트 검색 쿼리 NEW_DATE DESC 정렬시 버그 발생,POINT_NO DESC 로 수정
	2017-02-02		박형만			적립포인트의 경우 남아있는 포인트 계산 
	2021-04-14		김영민			ACC_USE_TYPE(5)경우 TITLE가져오기 
================================================================================================================*/ 

CREATE PROCEDURE [dbo].[XP_CUS_POINT_SELECT_LIST]
(
	@PAGE_INDEX  INT,
	@PAGE_SIZE  INT,
	@CUS_NO		INT,
	@TOTAL_COUNT INT OUTPUT,
	@TOTAL_POINT INT OUTPUT
)

AS  
BEGIN

	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

	DECLARE @SQLSTRING NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000), @WHERE NVARCHAR(4000), @SORT_STRING VARCHAR(50);
	
	SET @SQLSTRING = N'
	-- 전체 마스터 수
	SELECT @TOTAL_COUNT = COUNT(*)
	FROM CUS_POINT A WHERE CUS_NO = @CUS_NO;
	
	-- 전체 포인트 값
	SELECT TOP 1 @TOTAL_POINT = TOTAL_PRICE 
	FROM CUS_POINT A WITH(NOLOCK)
	WHERE CUS_NO = @CUS_NO ORDER BY POINT_NO DESC;

	WITH LIST AS
	(
		SELECT		
			P.CUS_NO, 
			P.POINT_NO, 
			P.POINT_TYPE,
			P.ACC_USE_TYPE,
			P.POINT_PRICE,
			CASE WHEN P.POINT_TYPE = 1 
				THEN P.POINT_PRICE - ISNULL(( SELECT SUM(B.POINT_PRICE) FROM CUS_POINT_HISTORY B  WITH(NOLOCK)  WHERE P.POINT_NO = B.ACC_POINT_NO ),0) 
				ELSE 0 END  AS REMAIN_PRICE ,
			P.TOTAL_PRICE,			
			P.RES_CODE, 
			P.MASTER_SEQ, 
			P.BOARD_SEQ,
			P.TITLE,
			P.START_DATE,
			P.END_DATE,
			P.NEW_DATE
		FROM CUS_POINT P WITH(NOLOCK)
		WHERE P.CUS_NO = @CUS_NO
		--ORDER BY P.NEW_DATE DESC 
		ORDER BY P.POINT_NO DESC
		OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
		ROWS ONLY
	)
		SELECT P.POINT_NO ,
				CASE B.PRO_TYPE WHEN 3 THEN DBO.FN_RES_HTL_GET_TOTAL_PRICE(B.RES_CODE) ELSE DBO.FN_RES_GET_TOTAL_PRICE(B.RES_CODE) END AS PRO_PRICE,				
				P.POINT_TYPE,
				P.ACC_USE_TYPE,
				P.POINT_PRICE,
				P.REMAIN_PRICE,
				P.TOTAL_PRICE,
				CASE P.POINT_TYPE WHEN 1 THEN CASE P.ACC_USE_TYPE WHEN 1 THEN B.PRO_NAME WHEN 4 THEN C.[SUBJECT] 
				WHEN 5 THEN ISNULL(D.EVT_NAME, P.TITLE) ELSE P.TITLE END WHEN 2 THEN CASE P.ACC_USE_TYPE WHEN 1 THEN B.PRO_NAME ELSE P.TITLE END END AS CONTENT,
				CASE P.POINT_TYPE WHEN 1 THEN CASE P.ACC_USE_TYPE WHEN 1 THEN B.PRO_CODE WHEN 4 THEN CONVERT(VARCHAR(10), C.BOARD_SEQ) WHEN 5 THEN CONVERT(VARCHAR(10), D.EVT_SEQ) ELSE '''' END WHEN 2 THEN B.PRO_CODE END AS REFERENCE_CODE,
				CASE P.CUS_NO WHEN (SELECT E.CUS_NO FROM DBO.RES_MASTER E WHERE P.CUS_NO = E.CUS_NO AND P.RES_CODE = E.RES_CODE) THEN ''Y'' ELSE ''N'' END AS RES_YN,
				P.START_DATE,
				P.END_DATE,
				P.NEW_DATE,
				F.SIGN_CODE ,
				G.ALT_PRO_URL  ,
				CASE WHEN G.RES_CODE IS NOT NULL THEN ''Y'' ELSE ''N'' END AS ALT_PRO_YN 
		FROM LIST P WITH(NOLOCK)
			LEFT JOIN DBO.RES_MASTER_DAMO B ON P.RES_CODE = B.RES_CODE
			LEFT JOIN DBO.HBS_DETAIL C ON P.MASTER_SEQ = C.MASTER_SEQ AND P.BOARD_SEQ = C.BOARD_SEQ
			LEFT JOIN DBO.PUB_EVENT D ON B.PRO_CODE = D.PRO_CODE 

			LEFT JOIN DBO.PKG_DETAIL E ON E.PRO_CODE = B.PRO_CODE 
			LEFT JOIN DBO.PKG_MASTER F ON F.MASTER_CODE = E.MASTER_CODE 
			LEFT JOIN DBO.RES_ALT_MATCHING G ON G.RES_CODE = B.RES_CODE 
				AND ALT_CODE NOT IN (''GMarket'')

			WHERE P.CUS_NO = @CUS_NO
			ORDER BY P.POINT_NO DESC '
			
	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@CUS_NO INT,
		@TOTAL_COUNT INT OUTPUT,
		@TOTAL_POINT INT OUTPUT';
		
	PRINT @SQLSTRING
		
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@PAGE_INDEX,
		@PAGE_SIZE,
		@CUS_NO,
		@TOTAL_COUNT OUTPUT,
		@TOTAL_POINT OUTPUT;
END
GO
