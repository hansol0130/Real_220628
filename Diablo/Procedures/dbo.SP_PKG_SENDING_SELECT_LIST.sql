USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: SP_PKG_SENDING_SELECT_LIST
■ DESCRIPTION				: 샌딩 리스트
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			: 
■ EXEC						: 
declare @p5 int
set @p5=NULL
exec SP_PKG_SENDING_SELECT_LIST @PAGE_INDEX=1,@PAGE_SIZE=99999,@KEY=N'MeetDate=2019-06-01&ProCode=&ProName=&Mtc=&TeamCode=&ManagerCode=&StartMtTime=&EndMtTIme=&Monthly=M',@ORDER_BY=0,@TOTAL_COUNT=@p5 output
select @p5
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------  
   2017-04-17		정지용			최초생성
   2017-05-16		정지용			요청에 따른 수정
   2019-01-09		김남훈			월별 센딩리스트 엑셀 다운 쿼리 수정
   2019-01-09		박형만			브랜드타입 추가    
   2021-11-15		오준혁			미팅일자-기간으로 수정
================================================================================================================*/ 
CREATE PROC [dbo].[SP_PKG_SENDING_SELECT_LIST]
 	@PAGE_INDEX  INT,
	@PAGE_SIZE  INT,
	@TOTAL_COUNT INT OUTPUT,
	@KEY	varchar(200),
	@ORDER_BY	int
AS 
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED	

	DECLARE @SQLSTRING NVARCHAR(4000), @WHERE NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000), @SORT_STRING VARCHAR(100);
	DECLARE @MEET_DATE VARCHAR(10);
	DECLARE @MEET_DATE2 VARCHAR(10);
	DECLARE @PRO_CODE VARCHAR(20);
	DECLARE @PRO_NAME VARCHAR(200);
	DECLARE @MEET_COUNTER INT;
	DECLARE @START_MEET_TIME VARCHAR(5);
	DECLARE @END_MEET_TIME VARCHAR(5);
	DECLARE @TEAM_CODE CHAR(3)
	DECLARE @MANAGER_CODE CHAR(7)
	DECLARE @MONTHLY CHAR(1)
	

	SELECT
		@MEET_DATE = DBO.FN_PARAM(@KEY, 'MeetDate'),
		@MEET_DATE2 = DBO.FN_PARAM(@KEY, 'MeetDate2'),
		@PRO_CODE = DBO.FN_PARAM(@KEY, 'ProCode'),
		@PRO_NAME = DBO.FN_PARAM(@KEY, 'ProName'),
		@MEET_COUNTER = DBO.FN_PARAM(@KEY, 'Mtc'),
		@START_MEET_TIME = DBO.FN_PARAM(@KEY, 'StartMtTime'),
		@END_MEET_TIME = DBO.FN_PARAM(@KEY, 'EndMtTIme'),
		@TEAM_CODE = DBO.FN_PARAM(@KEY, 'TeamCode'),
		@MANAGER_CODE = DBO.FN_PARAM(@KEY, 'ManagerCode'),
		@MONTHLY = DBO.FN_PARAM(@KEY, 'Monthly');

	IF ISNULL(@MONTHLY, '') <> ''
	BEGIN
		DECLARE @MEETDATE DATETIME
		DECLARE @MEETMONTHSTARTDATE DATETIME
		DECLARE @MEETMONTHENDDATE DATETIME
		--월별 처리 MEET_DATE를 일단 DATETIME으로 변경.
		SET @MEETDATE = CONVERT(DATE, @MEET_DATE)
		SET @MEETMONTHSTARTDATE = DATEADD(mm, DATEDIFF(mm, 0, @MEETDATE), 0)
		SET @MEETMONTHENDDATE = DATEADD (dd, -1, DATEADD(mm, DATEDIFF(mm, 0, @MEETDATE) + 1, 0))
		--
		SET @WHERE = 'A.MEET_DATE BETWEEN '''+CONVERT(VARCHAR(10),@MEETMONTHSTARTDATE,121)+''' AND '''+CONVERT(VARCHAR(10),@MEETMONTHENDDATE,121)+''''; -- 미팅일 기준

		--PRINT @WHERE
	END
	ELSE
	BEGIN
	    --일별 처리
	    SET @MEET_DATE2 = DATEADD (dd, 1, @MEET_DATE2)
		SET @WHERE = 'A.MEET_DATE >= @MEET_DATE AND A.MEET_DATE < @MEET_DATE2'; -- 미팅일 기준
	END
	IF ISNULL(@PRO_CODE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.PRO_CODE LIKE @PRO_CODE + ''%''';
	END
	IF ISNULL(@PRO_NAME, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.PRO_NAME LIKE ''%'' + @PRO_NAME + ''%''';
	END
	IF ISNULL(@MEET_COUNTER, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.MEET_COUNTER = @MEET_COUNTER';
	END
	IF ISNULL(@START_MEET_TIME, '') <> ''
	BEGIN
		--SET @WHERE = @WHERE + ' AND CONVERT(DATETIME, CONVERT(VARCHAR(10), A.MEET_DATE, 121) + '' '' + A.MEET_TIME) >= CONVERT(DATETIME, CONVERT(VARCHAR(10), A.MEET_DATE, 121) + '' '' + @START_MEET_TIME)';
		SET @WHERE = @WHERE + ' AND A.MEET_TIME >= @START_MEET_TIME';
	END
	IF ISNULL(@END_MEET_TIME, '') <> ''
	BEGIN
		--SET @WHERE = @WHERE + ' AND CONVERT(DATETIME, CONVERT(VARCHAR(10), A.MEET_DATE, 121) + '' '' + A.MEET_TIME) <= CONVERT(DATETIME, CONVERT(VARCHAR(10), A.MEET_DATE, 121) + '' '' + @END_MEET_TIME)';
		SET @WHERE = @WHERE + ' AND A.MEET_TIME <= @END_MEET_TIME';
	END	
	IF ISNULL(@TEAM_CODE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND C.TEAM_CODE = @TEAM_CODE'
	END
	IF ISNULL(@MANAGER_CODE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.MANAGER_CODE = @MANAGER_CODE'
	END
	
	SELECT @SORT_STRING = (  
		CASE @ORDER_BY  
			WHEN 1 THEN ' A.DEP_TIME ASC'
			ELSE ' A.MEET_TIME ASC'
		END	
	)
	SET @SQLSTRING = N'
	SELECT 
		@TOTAL_COUNT = COUNT(*)
	FROM PKG_SENDING A WITH(NOLOCK)
	LEFT JOIN EMP_MASTER B ON A.MANAGER_CODE = B.EMP_CODE
	LEFT JOIN EMP_TEAM C ON B.TEAM_CODE = C.TEAM_CODE
	WHERE ' + @WHERE + ';

	WITH LIST AS 
	(
		SELECT
			A.SEQ_NO,
			SUBSTRING(A.PRO_CODE, 1 , CHARINDEX(''-'' , A.PRO_CODE)-1) AS MASTER_CODE,  
			A.PRO_CODE,
			A.PRO_NAME,
			A.DEP_DATE,
			A.DEP_TIME,
			A.TRANS_NAME,
			A.MEET_CNT,
			A.CONTRACT_CNT,
			A.RECEIPT_CNT,
			A.MEET_DATE,
			A.MEET_TIME,
			A.MEET_COUNTER,
			A.REMARK,
			A.MANAGER_CODE,
			B.KOR_NAME AS MANAGER_NAME,
			C.TEAM_NAME,
			A.INNER_NUMBER,
			A.EMR_TEL_NUMBER,
			A.TC_YN,
			A.NEW_CODE,
			A.NEW_DATE, 
			A.SEND_KEY
		FROM PKG_SENDING A WITH(NOLOCK)
		LEFT JOIN EMP_MASTER B ON A.MANAGER_CODE = B.EMP_CODE
		LEFT JOIN EMP_TEAM C ON B.TEAM_CODE = C.TEAM_CODE
		WHERE ' + @WHERE + '
	)
	SELECT 
		A.SEQ_NO,
		B.MASTER_CODE,
		B.BRAND_TYPE,
		A.PRO_CODE,
		A.PRO_NAME,
		A.DEP_DATE,
		A.DEP_TIME,
		A.TRANS_NAME,
		A.MEET_CNT,
		A.CONTRACT_CNT,
		A.RECEIPT_CNT,
		A.MEET_DATE,
		A.MEET_TIME,
		A.MEET_COUNTER,
		A.REMARK,
		A.MANAGER_CODE,
		A.MANAGER_NAME,
		A.TEAM_NAME,
		A.INNER_NUMBER,
		A.EMR_TEL_NUMBER,
		A.TC_YN,
		A.NEW_CODE,
		A.NEW_DATE,
		A.SEND_KEY
	FROM LIST A	
	INNER JOIN PKG_MASTER B 
		ON A.MASTER_CODE = B.MASTER_CODE 
	ORDER BY A.MEET_DATE,' + @SORT_STRING + '
	OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
	ROWS ONLY';
	 
	--PRINT @SQLSTRING;
	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@TOTAL_COUNT INT OUTPUT,
		@MEET_DATE VARCHAR(10),
		@MEET_DATE2 VARCHAR(10),
		@PRO_CODE VARCHAR(20),
		@PRO_NAME VARCHAR(200),
		@MEET_COUNTER INT,
		@START_MEET_TIME VARCHAR(5),
		@END_MEET_TIME VARCHAR(5),
		@TEAM_CODE VARCHAR(3),
		@MANAGER_CODE CHAR(7)';


	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, 
		@PAGE_INDEX,
		@PAGE_SIZE,
		@TOTAL_COUNT OUTPUT,
		@MEET_DATE,
		@MEET_DATE2,
		@PRO_CODE,
		@PRO_NAME,
		@MEET_COUNTER,
		@START_MEET_TIME,
		@END_MEET_TIME,
		@TEAM_CODE,
		@MANAGER_CODE;
END
GO
