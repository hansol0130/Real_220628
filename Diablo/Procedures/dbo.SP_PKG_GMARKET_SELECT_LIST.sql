USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*================================================================================================================
■ USP_NAME					: SP_PKG_GMARKET_SELECT_LIST
■ DESCRIPTION				: <G마켓 상품연동 XML 생성 GProductMakeXML.exe >
■ INPUT PARAMETER			: 
	@MASTER_CODE_STRING		: 마스터 코드
■ OUTPUT PARAMETER			: 
■ EXEC						: 
app9103
	exec SP_PKG_GMARKET_SELECT_LIST 'app1919'
	
	exec SP_PKG_GMARKET_SELECT_LIST 'IPF666'

	exec SP_PKG_GMARKET_SELECT_LIST ''
	
	'EPP200-140128OZ', 4
	'EPP471'
	SELECT * INTO #TMP_LIST FROM 
	SP_PKG_GMARKET_SELECT_LIST '' 
	exec SP_PKG_GMARKET_SELECT_LIST 'EPP426'

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
2010-11-22			박형만			국내 크루즈 상품 KPP120 G마켓 해외 크루즈 카테고리로(E-7) 넣기 추가 
2011-01-10			박형만			해외자유여행(E-1) 카테고리에 대표속성 항공+호텔,호텔팩,에어텔,티켓(B,H,I,T 추가 ) 
2011-03-09			박형만			AFF_TYPE  => PROVIDER 로변경 @PROVIDER 파라미터추가
2013-08-02			박형만			지마켓 국내 카테고리 다시 설정 , USE_YN  조건 추가 
2013-12-12			박형만			이미지업데이트 여부 IMAGE_UPDATE_STATUS 필드 추가
2014-01-08			김성호			SP_PKG_MASTER_SELECT_PRODUCT_GMARKET SP에 행사검색 쿼리 추가하여 신규 생성
2014-02-07			박형만			유류할증료  추가 , 전체제휴 상품 대상으로 STATUS 처리 ( WHERE 문 수정 )
2014-02-18			박형만			ARRIVAL_DATE -> ARRIVAL_DAY
2014-02-27			박형만			XN_PRO_GET_QCHARGE_PRICE 파라미터 변경
2014-03-05			박형만			PKG_DETAIL.SHOW_YN 조건 추가
2014-03-05			박형만			IMAGE_UPDATE_STATUS = 2 변경없음으로 전송(지마켓요청)
2014-04-09			박형만			임시 테스트 상품 추가 xxx101
2014-07-03			박형만			유류할증료 함수변경 
2014-08-25			박형만			DP_ST_DT 수정 
2017-07-03			박형만			출발일,가격순정렬
2018-06-20			박형만			카테고리 업데이트 
2020-03-06			김영민			aff변경
2021-09-06			오준혁			http => https
================================================================================================================*/ 
CREATE PROC [dbo].[SP_PKG_GMARKET_SELECT_LIST]
	@MASTER_CODE_STRING VARCHAR(1000)
AS 
BEGIN
--DECLARE @MASTER_CODE_STRING  VARCHAR(1000)
--SET @MASTER_CODE_STRING = 'XXX903'

	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

	DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(100)

	SET @SQLSTRING = N'WHERE B.PROVIDER = 14 /* A.LAST_DATE > GETDATE() AND A.SHOW_YN = ''Y'' AND  AND B.USE_YN = ''Y'' */ ' 

	IF ISNULL(@MASTER_CODE_STRING, '') <> ''
	BEGIN
		SET @SQLSTRING = @SQLSTRING + N' AND A.MASTER_CODE IN (SELECT DATA FROM DBO.FN_SPLIT(@MASTER_CODE, '',''))'
	END

	SET @SQLSTRING = N'
	-- MASTER
	WITH MASTER_LIST AS
	(
		SELECT
			UPPER(A.MASTER_CODE) AS  MASTER_CODE 
			, A.MASTER_NAME
			, CONVERT(VARCHAR(10), A.NEXT_DATE, 120) AS [NEXT_DATE]
			, CONVERT(VARCHAR(10), A.LAST_DATE, 120) AS [LAST_DATE]
			, A.LOW_PRICE
			, A.HIGH_PRICE
			, (CASE
				WHEN C.FILE_NAME_S = '''' THEN ''''
				WHEN C.FILE_NAME_M = '''' THEN (''https://contents.verygoodtour.com/content/'' + C.REGION_CODE + ''/'' + C.NATION_CODE + ''/'' + C.STATE_CODE + ''/'' + C.CITY_CODE + ''/image/'' + C.FILE_NAME_S)
				ELSE (''https://contents.verygoodtour.com/content/'' + C.REGION_CODE + ''/'' + C.NATION_CODE + ''/'' + C.STATE_CODE + ''/'' + C.CITY_CODE + ''/image/'' + C.FILE_NAME_M)
			END) AS [IMAGE_URL]
			, CONVERT(VARCHAR(19), A.NEW_DATE, 120) AS [NEW_DATE]
			, CONVERT(VARCHAR(19), A.EDT_DATE, 120) AS [EDT_DATE]

			, CASE WHEN A.LAST_DATE > GETDATE() AND A.SHOW_YN = ''Y'' AND B.USE_YN = ''Y'' 
				THEN ''1'' ELSE ''2'' END AS [STATUS]
			, DBO.FN_PRO_GMARKET_CODE(A.SIGN_CODE, A.ATT_CODE,A.MASTER_CODE,A.BRANCH_CODE) AS [GD_TYPE]
			, CASE WHEN A.MASTER_CODE = ''IPF666'' THEN ''1'' ELSE  ''2'' END AS [IMAGE_UPDATE_STATUS]
			, DBO.FN_GET_TOUR_NIGHT(A.MASTER_CODE, 0) AS [TOUR_NIGHT]
			, A.TOUR_DAY
			, A.SIGN_CODE
		FROM PKG_MASTER A WITH(NOLOCK)
		INNER JOIN PKG_MASTER_AFFILIATE B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
		LEFT JOIN INF_FILE_MASTER C WITH(NOLOCK) ON A.MAIN_FILE_CODE = C.FILE_CODE
		' + @SQLSTRING + '

	), 
	CITY_LIST AS
	(
		SELECT ROW_NUMBER() OVER (PARTITION BY A.MASTER_CODE ORDER BY MAX(A.CITY_SHOW_ORDER) DESC) AS [ROW_NUMBER]
			, UPPER(A.MASTER_CODE) AS MASTER_CODE, D.G_CITY_CODE AS [CITY_CODE], B.KOR_NAME AS [CITY_NAME], C.NATION_CODE, C.KOR_NAME AS [NATION_NAME]
		FROM MASTER_LIST Z
		INNER JOIN PKG_MASTER_SCH_CITY A WITH(NOLOCK) ON Z.MASTER_CODE = A.MASTER_CODE
		INNER JOIN PUB_CITY B WITH(NOLOCK) ON A.CITY_CODE = B.CITY_CODE
		INNER JOIN PUB_NATION C WITH(NOLOCK) ON B.NATION_CODE = C.NATION_CODE
		INNER JOIN GMARKET_CITY_MAP D WITH(NOLOCK) ON B.CITY_CODE = D.G_CITY_CODE
		WHERE A.MAINCITY_YN = ''Y''
		GROUP BY A.MASTER_CODE, D.G_CITY_CODE, B.KOR_NAME, C.NATION_CODE, C.KOR_NAME
	)
	SELECT
		1 AS [FLAG]
		, A.MASTER_CODE AS [GD_CD]
		, A.MASTER_NAME AS [GD_NM]
		, CASE WHEN A.NEXT_DATE > DATEADD(D,-1,GETDATE()) THEN CONVERT(VARCHAR(10),DATEADD(D,-1,GETDATE()),121) ELSE A.NEXT_DATE END  AS [DP_ST_DT]
		, A.LAST_DATE AS [DP_ED_DT]
		, A.LOW_PRICE AS [DP_MIN_PRICE]
		, A.HIGH_PRICE AS [DP_MAX_PRICE]
		, A.IMAGE_URL
		, A.NEW_DATE AS [REG_DT]
		, A.EDT_DATE AS [CHG_DT]
		, CASE WHEN B.CITY_CODE IS NULL OR B.NATION_CODE IS NULL THEN ''2'' ELSE A.STATUS END  AS STATUS 
		, A.GD_TYPE
		, (CASE WHEN A.SIGN_CODE = ''K'' THEN ''1'' ELSE ''2'' END) AS [NATION]
		, (CASE WHEN A.SIGN_CODE = ''K'' THEN ''KR'' ELSE B.NATION_CODE END) AS [COUNTRY_CD]
		, (CASE WHEN A.SIGN_CODE = ''K'' THEN ''한국'' ELSE B.NATION_NAME END) AS [COUNTRY_NM]
		, (CASE WHEN A.SIGN_CODE = ''K'' THEN ''K14'' ELSE B.CITY_CODE END) AS [CITY_CD]
		, (CASE WHEN A.SIGN_CODE = ''K'' THEN ''제주'' ELSE B.CITY_NAME END) AS [CITY_NM]
		, A.IMAGE_UPDATE_STATUS
		, A.TOUR_NIGHT AS [TOUR_SLEEP_DAYS]
		, A.TOUR_DAY AS [TOUR_DAYS]
	FROM MASTER_LIST A
	LEFT JOIN (
		SELECT *
		FROM CITY_LIST AA
		WHERE AA.ROW_NUMBER = 1
	) B ON A.MASTER_CODE = B.MASTER_CODE
	UNION ALL
	SELECT
		2 AS [FLAG]
		, UPPER(A.MASTER_CODE) AS [GD_CD]
		, NULL AS [GD_NM]
		, NULL AS [DP_ST_DT]
		, NULL AS [DP_ED_DT]
		, NULL AS [DP_MIN_PRICE]
		, NULL AS [DP_MAX_PRICE]
		, NULL AS [IMAGE_URL]
		, NULL AS [REG_DT]
		, NULL AS [CHG_DT]
		, NULL AS [STATUS]
		, NULL AS [GD_TYPE]
		, NULL AS [NATION]
		, A.NATION_CODE AS [COUNTRY_CD]
		, A.NATION_NAME AS [COUNTRY_NM]
		, A.CITY_CODE AS [CITY_CD]
		, A.CITY_NAME AS [CITY_NM]
		, NULL AS [IMAGE_URPDATE_STATUS]
		, NULL AS [TOUR_SLEEP_DAYS]
		, NULL AS [TOUR_DAYS]
	FROM CITY_LIST A;
	
	-- DETAIL
	WITH MASTER_LIST AS
	(
		SELECT
			UPPER(A.MASTER_CODE) AS  MASTER_CODE 
		FROM PKG_MASTER A WITH(NOLOCK)
		INNER JOIN PKG_MASTER_AFFILIATE B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
		' + @SQLSTRING + '
	)
	SELECT
		UPPER(A.MASTER_CODE) AS [GD_CD]
		, (CONVERT(VARCHAR(10), B.DEP_DEP_DATE, 120)) AS [DEPAR_DAY]
		, B.DEP_DEP_TIME AS [DEPAR_TIME]
		, RTRIM(B.DEP_TRANS_NUMBER) AS [DEPAR_FLIGHT_NO]
		, B.DEP_TRANS_CODE AS [AIR_COMP_CD]
		, CASE WHEN TRANSFER_TYPE = 2 THEN ''선박'' ELSE C.KOR_NAME END AS [AIR_COMP_NAME]
		, D.ADT_PRICE AS [PRICE]
		, D.ADT_PRICE AS [ADULT_PRICE]
		, D.CHD_PRICE AS [CHILD_PRICE]
		, D.INF_PRICE AS [BABY_PRICE]
		--, ISNULL(DBO.XN_PRO_DETAIL_SALE_PRICE_CUTTING(A.PRO_CODE,0),0)  AS [TAX_PRICE]
		, ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',1),''0'') AS TAX_PRICE
		, 0 AS ADULT_TAX_PRICE    
		, 0 AS CHILD_TAX_PRICE    
		, 0 AS BABY_TAX_PRICE    
		--, dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ) AS QCHARGE_PRICE_ALL
		, ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',1),''0'') AS ADULT_FUEL_SURCHARGE
		, ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',2),''0'') AS CHILD_FUEL_SURCHARGE
		, ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',3),''0'') AS BABY_FUEL_SURCHARGE
		--, (CASE WHEN A.MAX_COUNT = 0 THEN 99 WHEN A.MAX_COUNT = -1 THEN 0 ELSE A.MAX_COUNT END) AS [RSV_REMAIN_CNT]
		--, DBO.FN_PRO_GET_RES_COUNT(A.PRO_CODE) AS [RES_COUNT]
		, CASE WHEN A.RSV_REMAIN_CNT > 0 AND A.RES_ADD_YN =''Y'' THEN A.RSV_REMAIN_CNT ELSE 0 END AS [RSV_REMAIN_CNT]
		, CASE WHEN A.RSV_REMAIN_CNT > 0 AND A.RES_ADD_YN =''Y'' THEN (A.RSV_REMAIN_CNT - A.RES_COUNT) ELSE 0 END  AS [REMAIN_SEAT_CNT]
		, CASE WHEN A.RSV_REMAIN_CNT > 0 AND A.RES_ADD_YN =''Y'' THEN A.MIN_COUNT ELSE 0 END AS [MIN_CNT]
		, ''1'' AS  [RSV_YN]
		, CASE WHEN A.RES_ADD_YN =''Y'' THEN ''Y'' ELSE ''N'' END AS [ONOFF]
		, (''https://aff.verygoodtour.com/Product/Package/PackageDetail?&IsProvider=Y&ProCode='' + A.PRO_CODE + ''&PriceSeq='' + CONVERT(VARCHAR(3), D.PRICE_SEQ)) AS [TOUR_SCHEDULE_URL]
		, (A.PRO_CODE + ''|'' + CONVERT(VARCHAR(3), D.PRICE_SEQ)) AS [SERIES_NO]
		, A.TOUR_NIGHT AS [TOUR_SLEEP_DAYS]
		, A.TOUR_DAY AS [TOUR_DAYS]
		, (CONVERT(VARCHAR(10), B.ARR_ARR_DATE, 120)) AS [ARRIVAL_DAY]
		, B.ARR_ARR_TIME AS [ARRIVAL_TIME]
		, RTRIM(B.ARR_TRANS_NUMBER) AS [ARRIVAL_FLIGHT_NO]
		, B.DEP_ARR_AIRPORT_CODE , B.SEAT_CODE
	FROM MASTER_LIST Z
	INNER JOIN (
		SELECT AA.*
			, (CASE WHEN DATEADD(DAY, -2, AA.DEP_DATE) <= GETDATE() THEN -1 
				WHEN AA.MAX_COUNT = 0 THEN 99
				WHEN AA.MAX_COUNT = -1 THEN 0 ELSE AA.MAX_COUNT END
			) AS [RSV_REMAIN_CNT]
			, DBO.FN_PRO_GET_RES_COUNT(AA.PRO_CODE) AS [RES_COUNT]
		FROM PKG_DETAIL AA WITH(NOLOCK)
		WHERE AA.MASTER_CODE IN (SELECT MASTER_CODE FROM MASTER_LIST)
		AND AA.SHOW_YN =''Y'' 
		--AND AA.RES_ADD_YN =''Y''
	) A ON Z.MASTER_CODE = A.MASTER_CODE
	INNER JOIN PRO_TRANS_SEAT B WITH(NOLOCK) ON A.SEAT_CODE = B.SEAT_CODE
	INNER JOIN PKG_DETAIL_PRICE D WITH(NOLOCK) ON A.PRO_CODE = D.PRO_CODE
	LEFT JOIN PUB_AIRLINE C WITH(NOLOCK) ON B.DEP_TRANS_CODE = C.AIRLINE_CODE
	
	WHERE A.DEP_DATE > GETDATE()
	ORDER BY A.DEP_DATE , D.ADT_PRICE
	;' 

	SET @PARMDEFINITION = N'@MASTER_CODE VARCHAR(1000)';

	--PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @MASTER_CODE_STRING;

END

GO
