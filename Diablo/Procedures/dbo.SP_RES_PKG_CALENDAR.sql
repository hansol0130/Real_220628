USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_RES_PKG_CALENDAR]
	@SEARCH_TYPE	INT,
	@SEARCH_EMP_TYPE INT,
	@PRO_TYPE		INT,
	@EMP_CODE		VARCHAR(7),
	@TEAM_CODE		VARCHAR(3),
	@START_DATE		DATETIME,
	@END_DATE		DATETIME
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	DECLARE @SQLSTRING NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000)--, @OUTERJOINTABLE NVARCHAR(1000), @ORDERBY NVARCHAR(100)

	SET @SQLSTRING = ''

	-- WHERE 조건 만들기
	IF ISNULL(@SEARCH_EMP_TYPE, 1) = 1
	BEGIN
		-- 담당자코드( 없으면 팀 전체, 팀 코드가 없으면 전체)
		IF ISNULL(@TEAM_CODE, '') <> ''
		BEGIN
			IF ISNULL(@EMP_CODE, '') <> ''
				SET @SQLSTRING = ' AND A.NEW_CODE = @EMP_CODE'
			ELSE
				SET @SQLSTRING = ' AND A.NEW_CODE IN (SELECT EMP_CODE FROM EMP_MASTER  WITH(NOLOCK) WHERE TEAM_CODE = @TEAM_CODE)'
		END
	END
	ELSE
	BEGIN
		-- 판매담당자코드( 없으면 팀 전체, 팀 코드가 없으면 전체 )
		IF ISNULL(@TEAM_CODE, '') <> ''
		BEGIN
			IF ISNULL(@EMP_CODE, '') <> ''
				SET @SQLSTRING = ' AND A.SALE_EMP_CODE = @EMP_CODE'
			ELSE
				SET @SQLSTRING = ' AND A.SALE_EMP_CODE IN (SELECT EMP_CODE FROM EMP_MASTER WITH(NOLOCK) WHERE TEAM_CODE = @TEAM_CODE)'
		END
	END

	-- 서브테이블
	IF @SEARCH_TYPE = 0				-- 예약일
	BEGIN
		SET @SQLSTRING = N'
	-- 평균
	SELECT
		  ISNULL(SUM(CNT),0) AS [RES_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (0) THEN CNT END),0) AS [ZERO_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (1) THEN CNT END),0) AS [ONE_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (2) THEN CNT END),0) AS [TWO_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (3) THEN CNT END),0) AS [THREE_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (4) THEN CNT END),0) AS [FOUR_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (5) THEN CNT END),0) AS [FIVE_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (6) THEN CNT END),0) AS [SIX_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (7) THEN CNT END),0) AS [SEVEN_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (8) THEN CNT END),0) AS [EIGHT_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (9) THEN CNT END),0) AS [NINE_STEP_COUNT]
		, ISNULL(SUM(RES_GET_CNT),0) AS [RES_NUM_COUNT]
	FROM (
		SELECT
			A.RES_STATE,COUNT(*) CNT,SUM(dbo.FN_RES_GET_RES_COUNT(A.RES_CODE)) RES_GET_CNT
		FROM RES_MASTER_damo A WITH(NOLOCK) 
		WHERE A.PRO_TYPE = @PRO_TYPE AND A.NEW_DATE BETWEEN @START_DATE AND @END_DATE
		' + @SQLSTRING + '
		GROUP BY A.RES_STATE
	) A
	
	-- 리스트
	SELECT A.NEW_DATE AS [DIS_DATE]
		, A.RES_CODE
		, A.PRO_TYPE
		, A.RES_STATE
		, A.RES_NAME
		, A.NEW_DATE
		, A.PRO_CODE
		, A.CUS_COUNT
		, DBO.FN_RES_GET_PAY_STATE(A.RES_CODE) AS [PAY_STATE]
		, A.OK_YN
		, ISNULL(SUM(CUS_COUNT) OVER(PARTITION BY CONVERT(VARCHAR(10), A.NEW_DATE, 120)),0) DAY_COUNT
		, DBO.FN_PRO_GET_ACCOUNT_STATE(A.PRO_CODE) AS [ACCOUNT_STATE]
	FROM 
		(		
			SELECT A.RES_CODE
				, A.PRO_TYPE
				, A.RES_STATE
				, A.RES_NAME
				, A.NEW_DATE
				, A.PRO_CODE
				, ISNULL(MIN(C.SEAT_YN), ''N'') AS [OK_YN]
				, ISNULL(SUM(CASE WHEN C.RES_STATE IN (0, 3, 4) THEN 1 END),0) AS [CUS_COUNT]
			FROM RES_MASTER_damo A WITH(NOLOCK)
			LEFT OUTER JOIN  RES_CUSTOMER C  WITH(NOLOCK) ON C.RES_CODE = A.RES_CODE
			WHERE A.PRO_TYPE = @PRO_TYPE   
			AND A.NEW_DATE BETWEEN @START_DATE AND @END_DATE
			' + @SQLSTRING + '
			GROUP BY A.RES_CODE, A.PRO_TYPE, A.RES_STATE, A.RES_NAME, A.NEW_DATE, A.PRO_CODE 
		) A
	ORDER BY A.NEW_DATE, A.RES_CODE'
	END
	ELSE IF @SEARCH_TYPE = 1		-- 출발일날짜
	BEGIN
		SET @SQLSTRING = N'
	-- 평균
	SELECT
		  ISNULL(SUM(CNT),0) AS [RES_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (0) THEN CNT END),0) AS [ZERO_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (1) THEN CNT END),0) AS [ONE_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (2) THEN CNT END),0) AS [TWO_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (3) THEN CNT END),0) AS [THREE_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (4) THEN CNT END),0) AS [FOUR_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (5) THEN CNT END),0) AS [FIVE_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (6) THEN CNT END),0) AS [SIX_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (7) THEN CNT END),0) AS [SEVEN_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (8) THEN CNT END),0) AS [EIGHT_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (9) THEN CNT END),0) AS [NINE_STEP_COUNT]
		, ISNULL(SUM(RES_GET_CNT),0) AS [RES_NUM_COUNT]
	FROM (
		SELECT
			A.RES_STATE,COUNT(*) CNT,SUM(dbo.FN_RES_GET_RES_COUNT(A.RES_CODE)) RES_GET_CNT
		FROM RES_MASTER_damo A WITH(NOLOCK) 
		WHERE A.PRO_TYPE = @PRO_TYPE AND A.DEP_DATE BETWEEN @START_DATE AND @END_DATE
		' + @SQLSTRING + '
		GROUP BY A.RES_STATE
	) A

	-- 리스트
	SELECT A.DEP_DATE AS [DIS_DATE]
		, A.RES_CODE
		, A.PRO_TYPE
		, A.RES_STATE
		, A.RES_NAME
		, A.DEP_DATE
		, A.PRO_CODE
		, A.OK_YN
		, A.CUS_COUNT
		, DBO.FN_RES_GET_PAY_STATE(A.RES_CODE) AS [PAY_STATE]
		, ISNULL(SUM(CUS_COUNT) OVER(PARTITION BY DEP_DATE),0) DAY_COUNT
		, DBO.FN_PRO_GET_ACCOUNT_STATE(A.PRO_CODE) AS [ACCOUNT_STATE]
	FROM 
		(		
			SELECT A.RES_CODE
				, A.PRO_TYPE
				, A.RES_STATE
				, A.RES_NAME
				, A.DEP_DATE
				, A.PRO_CODE
				, MIN(C.SEAT_YN) AS [OK_YN]
				, ISNULL(SUM(CASE WHEN C.RES_STATE IN (0, 3, 4) THEN 1 END),0) AS [CUS_COUNT]
			FROM RES_MASTER_damo A WITH(NOLOCK)
			LEFT OUTER JOIN  RES_CUSTOMER C  WITH(NOLOCK) ON C.RES_CODE = A.RES_CODE
			WHERE A.PRO_TYPE = @PRO_TYPE   
			AND A.DEP_DATE BETWEEN @START_DATE AND @END_DATE
			' + @SQLSTRING + '
			GROUP BY A.RES_CODE, A.PRO_TYPE, A.RES_STATE, A.RES_NAME, A.DEP_DATE, A.PRO_CODE 
		) A
	ORDER BY A.DEP_DATE, A.RES_CODE'
	END
	ELSE IF @SEARCH_TYPE = 2		-- 취소마감일
	BEGIN
		SET @SQLSTRING = N'
	-- 평균
	SELECT
		  ISNULL(SUM(CNT),0) AS [RES_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (0) THEN CNT END),0) AS [ZERO_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (1) THEN CNT END),0) AS [ONE_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (2) THEN CNT END),0) AS [TWO_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (3) THEN CNT END),0) AS [THREE_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (4) THEN CNT END),0) AS [FOUR_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (5) THEN CNT END),0) AS [FIVE_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (6) THEN CNT END),0) AS [SIX_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (7) THEN CNT END),0) AS [SEVEN_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (8) THEN CNT END),0) AS [EIGHT_STEP_COUNT]
		, ISNULL(SUM(CASE WHEN RES_STATE IN (9) THEN CNT END),0) AS [NINE_STEP_COUNT]
		, ISNULL(SUM(RES_GET_CNT),0) AS [RES_NUM_COUNT]
	FROM (
			SELECT
				A.RES_STATE,COUNT(*) CNT,SUM(dbo.FN_RES_GET_RES_COUNT(A.RES_CODE)) RES_GET_CNT
			FROM RES_MASTER_damo A WITH(NOLOCK) 
			WHERE A.PRO_TYPE = @PRO_TYPE AND A.LAST_PAY_DATE BETWEEN @START_DATE AND @END_DATE
			' + @SQLSTRING + '
			GROUP BY A.RES_STATE
		  ) A

	-- 리스트
	SELECT A.LAST_PAY_DATE AS [DIS_DATE]
		, A.RES_CODE
		, A.PRO_TYPE
		, A.RES_STATE
		, A.RES_NAME
		, A.LAST_PAY_DATE
		, A.PRO_CODE
		, A.OK_YN
		, A.CUS_COUNT
		, DBO.FN_RES_GET_PAY_STATE(A.RES_CODE) AS [PAY_STATE]
		, ISNULL(SUM(CUS_COUNT) OVER(PARTITION BY LAST_PAY_DATE),0) DAY_COUNT
		, DBO.FN_PRO_GET_ACCOUNT_STATE(A.PRO_CODE) AS [ACCOUNT_STATE]
	FROM 
		(		
			SELECT A.RES_CODE
				, A.PRO_TYPE
				, A.RES_STATE
				, A.RES_NAME
				, A.LAST_PAY_DATE
				, A.PRO_CODE
				, MIN(C.SEAT_YN) AS [OK_YN]
				, ISNULL(SUM(CASE WHEN C.RES_STATE IN (0, 3, 4) THEN 1 END),0) AS [CUS_COUNT]
			FROM RES_MASTER_damo A WITH(NOLOCK)
			LEFT OUTER JOIN  RES_CUSTOMER C  WITH(NOLOCK) ON C.RES_CODE = A.RES_CODE
			WHERE A.PRO_TYPE = @PRO_TYPE   
			AND A.LAST_PAY_DATE BETWEEN @START_DATE AND @END_DATE
			' + @SQLSTRING + '
			GROUP BY A.RES_CODE, A.PRO_TYPE, A.RES_STATE, A.RES_NAME, A.LAST_PAY_DATE, A.PRO_CODE 
		) A
	ORDER BY A.LAST_PAY_DATE, A.RES_CODE'
	END

	SET @PARMDEFINITION = N'@SEARCH_TYPE INT, @PRO_TYPE INT, @EMP_CODE VARCHAR(7), @TEAM_CODE VARCHAR(3), @START_DATE DATETIME, @END_DATE DATETIME'

	--PRINT @SQLSTRING
	
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @SEARCH_TYPE, @PRO_TYPE, @EMP_CODE , @TEAM_CODE, @START_DATE, @END_DATE
END

--	@SEARCH_TYPE, @EMP_CODE , @TEAM_CODE, @START_DATE, @END_DATE
--	SP_RES_PKG_CALENDAR 0, 1, '', '', '2009-02-01 00:00', '2009-02-28 23:59'
--exec SP_RES_PKG_CALENDAR @SEARCH_TYPE=0,@PRO_TYPE=1,@EMP_CODE=N'2009042',@TEAM_CODE=N'503',@START_DATE='2009-11-01 00:00:00',@END_DATE='2009-11-30 23:59:59'
GO
