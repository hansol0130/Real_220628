USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================    
■ USP_NAME     : XP_WEB_MENU_ITEM_PACKGAGE_LIST_SELECT    
■ DESCRIPTION    : 베스트 상품 상품 검색    
■ INPUT PARAMETER   :     
 @SITE_CODE    : 사이트 코드    
 @MENU_CODE    : 메뉴 코드    
 @SEC_CODE    : 섹션코드    
 @ORDER_BY    : 섹션 코드 정렬 방향 (D: DESC, 이외 ASC)    
 @TOP_COUNT    : 최대 검색 수    
■ OUTPUT PARAMETER   :     
■ EXEC      :     
    
 exec XP_WEB_MENU_ITEM_PACKGAGE_LIST_SELECT 'VGT', '10206', '2', 5, 'D'    
    
■ MEMO      :     
------------------------------------------------------------------------------------------------------------------    
■ CHANGE HISTORY                       
------------------------------------------------------------------------------------------------------------------    
   DATE    AUTHOR   DESCRIPTION               
------------------------------------------------------------------------------------------------------------------    
   2013-03-19  김성호   최초생성    
   2013-05-22  김성호   4LEVEL 이하에 SEC_CODE가 없으면 상위 레벨의 값을 가져온다    
   2013-05-29  김성호   SEC_CODE VARCHAR(4)로 수정    
   2013-06-01  김성호   스케줄 검색 조건 반영    
   2013-06-10  김성호   WITH(NOLOCK) 추가    
   2013-10-24  김성호   대표지역, 대표속성 추가    
   2014-04-25  박형만   출발일 기준 7일 이내 상품에서 , 5일이내 상품으로 변경    
   2015-02-24  김성호   SEC_CODE ORDER BY 정렬 방향 설정과 TOP 설정값 추가 (최근베스트 상품 검색 이유)    
   2019-01-08  임검제   BRANCH_CODE,BRAND_TYPE,WEEK_DAY 추가, SQLSTRING 변수 길이 4000자 초과로 max로 변경 
   2020-11-23  김영민	CLEAN_YN 컬럼추가
================================================================================================================*/     
    
CREATE  PROCEDURE [dbo].[XP_WEB_MENU_ITEM_PACKGAGE_LIST_SELECT]    
(    
 @SITE_CODE VARCHAR(3),    
 @MENU_CODE VARCHAR(20),    
 @SEC_CODE VARCHAR(4),    
 @TOP_COUNT INT,    
 @ORDER_BY VARCHAR(1)    
)    
AS      
BEGIN    
    
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED    
    
 DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(1000), @WHERE NVARCHAR(100);    
    
 IF ISNULL(@SEC_CODE, '') = ''    
  SET @WHERE = ''    
 ELSE    
 BEGIN    
  SET @WHERE = ' AND A.SEC_CODE = @SEC_CODE'    
    
  -- 해당 섹션이 존재하지 않으면 상위 메뉴의 값을 가져온다 (최대 LEVEL 3까지 체크)    
  WHILE LEN(@MENU_CODE) >= 7    
  BEGIN    
   IF EXISTS(SELECT 1 FROM MNU_MNG_SECTION WITH(NOLOCK) WHERE SITE_CODE = @SITE_CODE AND MENU_CODE = @MENU_CODE AND SEC_CODE = @SEC_CODE)    
   BEGIN    
    BREAK;    
   END    
   ELSE    
   BEGIN    
    SET @MENU_CODE = SUBSTRING(@MENU_CODE, 1, (LEN(@MENU_CODE) - 2))    
   END    
  END    
 END    
    
 SET @SQLSTRING = N'    
 WITH LIST AS    
 (    
  SELECT ''M'' AS [FLAG], A.SITE_CODE, A.MENU_CODE, A.SEC_CODE, A.GRP_SEQ, A.ITEM_SEQ, A.MASTER_CODE    
   , B.LOW_PRICE AS [PRICE], B.MAIN_FILE_CODE AS [FILE_CODE]    
   , (    
    SELECT TOP 1 PRO_CODE FROM PKG_DETAIL AA WITH(NOLOCK)    
    WHERE AA.MASTER_CODE = A.MASTER_CODE AND AA.DEP_DATE > DATEADD(DAY, 5, GETDATE()) AND AA.SHOW_YN = ''Y''    
     AND AA.RES_ADD_YN = ''Y'' AND (AA.MAX_COUNT = 0 OR (AA.MAX_COUNT - DBO.FN_PRO_GET_RES_COUNT(AA.PRO_CODE) > 0))     
   ) AS [PRO_CODE]    
   , (SELECT MAX(COM_SEQ) FROM PRO_COMMENT AA WITH(NOLOCK) WHERE AA.MASTER_CODE = B.MASTER_CODE) AS [COM_SEQ]    
  FROM MNU_MNG_ITEM A WITH(NOLOCK)    
  INNER JOIN PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE    
  LEFT JOIN MNU_MNG_ITEM_SCH Z WITH(NOLOCK) ON A.SITE_CODE = Z.SITE_CODE AND A.MENU_CODE = Z.MENU_CODE AND A.SEC_CODE = Z.SEC_CODE AND A.GRP_SEQ = Z.GRP_SEQ AND A.ITEM_SEQ = Z.ITEM_SEQ    
  WHERE A.SITE_CODE = @SITE_CODE AND A.MENU_CODE = @MENU_CODE' + @WHERE + N'    
   AND (A.SCH_YN = ''N'' OR (    
    GETDATE() >= Z.START_DATE AND GETDATE() < Z.END_DATE    
    AND Z.DAY_START_TIME <= SUBSTRING(CONVERT(VARCHAR(20), GETDATE(), 120), 12, 8)    
    AND Z.DAY_END_TIME > SUBSTRING(CONVERT(VARCHAR(20), GETDATE(), 120), 12, 8)    
    AND SUBSTRING(Z.SHOW_DAY, DATEPART(DW, GETDATE()), 1) = 1    
   ))    
  UNION ALL    
  SELECT ''P'' AS [FALG], A.SITE_CODE, A.MENU_CODE, A.SEC_CODE, A.GRP_SEQ, A.ITEM_SEQ, B.MASTER_CODE       
   , DBO.XN_PRO_DETAIL_SALE_PRICE_CUTTING(A.PRO_CODE, 0)       
   , (SELECT TOP 1 FILE_CODE FROM PKG_DETAIL_FILE WITH(NOLOCK) WHERE PRO_CODE = A.PRO_CODE ORDER BY SHOW_ORDER) AS [FILE_CODE]    
   , A.PRO_CODE    
   , (SELECT MAX(COM_SEQ) FROM PRO_COMMENT AA WITH(NOLOCK) WHERE AA.MASTER_CODE = B.MASTER_CODE) AS [COM_SEQ]    
  FROM MNU_MNG_ITEM A WITH(NOLOCK)    
  INNER JOIN PKG_DETAIL B WITH(NOLOCK) ON A.PRO_CODE = B.PRO_CODE    
  LEFT JOIN MNU_MNG_ITEM_SCH Z WITH(NOLOCK) ON A.SITE_CODE = Z.SITE_CODE AND A.MENU_CODE = Z.MENU_CODE AND A.SEC_CODE = Z.SEC_CODE AND A.GRP_SEQ = Z.GRP_SEQ AND A.ITEM_SEQ = Z.ITEM_SEQ    
  WHERE A.SITE_CODE = @SITE_CODE AND A.MENU_CODE = @MENU_CODE' + @WHERE + N'    
   AND (A.SCH_YN = ''N'' OR (    
    GETDATE() >= Z.START_DATE AND GETDATE() < Z.END_DATE    
    AND Z.DAY_START_TIME <= SUBSTRING(CONVERT(VARCHAR(20), GETDATE(), 120), 12, 8)    
    AND Z.DAY_END_TIME > SUBSTRING(CONVERT(VARCHAR(20), GETDATE(), 120), 12, 8)    
    AND SUBSTRING(Z.SHOW_DAY, DATEPART(DW, GETDATE()), 1) = 1    
   ))    
 )    
 SELECT ';  
 SET @SQLSTRING = @SQLSTRING + (CASE @TOP_COUNT WHEN 0 THEN '' ELSE 'TOP (@TOP_COUNT) ' END) + N'    
   Z.*, A.IMG_URL, A.PRO_NAME, A.PKG_COMMENT, A.DTI_ITEM1, A.DTI_ITEM2, A.DTI_ITEM3, A.DTI_ITEM4    
  , (SELECT TOP 1 PRICE_SEQ FROM PKG_DETAIL_PRICE AA WITH(NOLOCK) WHERE AA.PRO_CODE = Z.PRO_CODE ORDER BY ADT_PRICE) AS [PRICE_SEQ]    
  , B.GRP_TITLE, B.GRP_CODE, B.GRP_DESC    
  , C.DEP_DATE, C.ARR_DATE, C.TOUR_NIGHT, C.TOUR_DAY, C.TOUR_JOURNEY, D.SIGN_CODE, D.ATT_CODE    
  , (SELECT KOR_NAME FROM PUB_REGION AA WITH(NOLOCK) WHERE AA.SIGN = D.SIGN_CODE) AS [SIGN_NAME]    
  , (SELECT PUB_VALUE FROM COD_PUBLIC AA WITH(NOLOCK) WHERE AA.PUB_TYPE = ''PKG.ATTRIBUTE'' AND AA.PUB_CODE = D.ATT_CODE) AS [ATT_NAME]    
  , E.*, F.CONTENTS AS [COMMENT_CONTENTS], F.GRADE AS [COMMENT_GRADE], F.NICKNAME AS [COMMENT_NAME], F.NEW_DATE AS [COMMENT_DATE]  
  , D.BRANCH_CODE  
  , D.BRAND_TYPE  
  , D.CLEAN_YN
  , dbo.FN_GET_MASTER_SUMMARY(D.MASTER_CODE,''W'') AS WEEK_DAY  
 FROM LIST Z    
 INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = Z.SITE_CODE AND A.MENU_CODE = Z.MENU_CODE AND A.SEC_CODE = Z.SEC_CODE AND A.GRP_SEQ = Z.GRP_SEQ AND A.ITEM_SEQ = Z.ITEM_SEQ    
 INNER JOIN MNU_MNG_GROUP B WITH(NOLOCK) ON A.SITE_CODE = B.SITE_CODE AND A.MENU_CODE = B.MENU_CODE AND A.SEC_CODE = B.SEC_CODE AND A.GRP_SEQ = B.GRP_SEQ    
 INNER JOIN PKG_DETAIL C WITH(NOLOCK) ON C.PRO_CODE = Z.PRO_CODE    
 INNER JOIN PKG_MASTER D WITH(NOLOCK) ON C.MASTER_CODE = D.MASTER_CODE    
 LEFT JOIN INF_FILE_MASTER E WITH(NOLOCK) ON E.FILE_CODE = Z.FILE_CODE    
 LEFT JOIN PRO_COMMENT F WITH(NOLOCK) ON F.MASTER_CODE = C.MASTER_CODE AND F.COM_SEQ = Z.COM_SEQ    
 ORDER BY Z.SITE_CODE, Z.MENU_CODE, Z.SEC_CODE' + (CASE @ORDER_BY WHEN 'D' THEN ' DESC' ELSE '' END) + ', Z.GRP_SEQ, A.ORDER_NO;'    
    
 SET @PARMDEFINITION = N'    
  @SITE_CODE VARCHAR(3),    
  @MENU_CODE VARCHAR(20),    
  @SEC_CODE VARCHAR(4),    
  @TOP_COUNT INT';    
    
 --PRINT @SQLSTRING    
    
 EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,     
  @SITE_CODE,    
  @MENU_CODE,    
  @SEC_CODE,    
  @TOP_COUNT;    
    
END    
GO
