USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_PKG_EMPLOYEE_CHANGE_UPDATE
■ DESCRIPTION				: 상품 담당자 변경
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			: 
	@CODE					: 행사코드 OR 마스터코드
	@EMP_CODE				: 변경될 담당자사번
	@START_DATE				: 수정범위 시작
	@END_DATE				: 수정범위 종료
■ EXEC						: 

EXEC XP_PKG_EMPLOYEE_CHANGE_UPDATE 'APP2061,APP9268,APP0810,APP2787,APP2091,APP8800,APP0612,APP1919,APP2095,APP2929,APP150,APG2006,APP1833,APP1925,APF008,APF009,APF4433,APP1278,APF3333,APF720,APF3377,APF5656,APF3399', '2017083', '2018-12-01', '2020-01-01'



select * from fn_split('APP1702, APP0704, APP2666,APP0806, ', ',') WHERE DATA <> '' WHERE DATA <> ''


SELECT * FROM RES_MASTER A WITH(NOLOCK) WHERE A.NEW_CODE = '2017009' AND A.DEP_DATE >= '2018-12-01' AND MASTER_CODE = 'APP6312'


■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2018-12-04		김성호			최초생성
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[XP_PKG_EMPLOYEE_CHANGE_UPDATE]
(
	@CODE	VARCHAR(1000),
	@NEW_CODE CHAR(7),
	@START_DATE DATETIME,
	@END_DATE DATETIME
)
AS  
BEGIN

	SELECT @END_DATE = DATEADD(D, 1, @END_DATE)

	-- 마스터 존재
	IF EXISTS(SELECT 1 FROM PKG_MASTER A WITH(NOLOCK) WHERE A.MASTER_CODE IN (SELECT Data FROM DBO.FN_SPLIT(@CODE, ',') WHERE DATA <> ''))
	BEGIN
		UPDATE PKG_MASTER SET NEW_CODE = @NEW_CODE WHERE MASTER_CODE IN (SELECT Data FROM DBO.FN_SPLIT(@CODE, ',') WHERE DATA <> '');
		-- 상품담당자 수정
		UPDATE PKG_DETAIL SET NEW_CODE = @NEW_CODE
		WHERE MASTER_CODE IN (SELECT Data FROM DBO.FN_SPLIT(@CODE, ',') WHERE DATA <> '') AND DEP_DATE >= @START_DATE AND DEP_DATE < @END_DATE;
		-- 예약담당자, 수익부서 수정 - 부산, 대구, 대전지점 예외
		UPDATE A SET A.NEW_CODE = B.EMP_CODE, A.NEW_TEAM_CODE = B.TEAM_CODE, A.NEW_TEAM_NAME = C.TEAM_NAME
			, A.PROFIT_EMP_CODE = (CASE WHEN A.PROFIT_TEAM_CODE IN ('514', '568', '624') AND B.TEAM_CODE NOT IN ('514', '568', '624') THEN A.PROFIT_EMP_CODE ELSE B.EMP_CODE END)
			, A.PROFIT_TEAM_CODE = (CASE WHEN A.PROFIT_TEAM_CODE IN ('514', '568', '624') AND B.TEAM_CODE NOT IN ('514', '568', '624') THEN A.PROFIT_TEAM_CODE ELSE B.TEAM_CODE END)
			, A.PROFIT_TEAM_NAME = (CASE WHEN A.PROFIT_TEAM_CODE IN ('514', '568', '624') AND B.TEAM_CODE NOT IN ('514', '568', '624') THEN A.PROFIT_TEAM_NAME ELSE C.TEAM_NAME END)
		FROM RES_MASTER_DAMO A
		CROSS JOIN EMP_MASTER B
		INNER JOIN EMP_TEAM C ON B.TEAM_CODE = C.TEAM_CODE
		WHERE A.MASTER_CODE IN (SELECT Data FROM DBO.FN_SPLIT(@CODE, ',') WHERE DATA <> '') AND A.DEP_DATE >= @START_DATE AND A.DEP_DATE < @END_DATE AND B.EMP_CODE = @NEW_CODE;
		-- 정산마스터 수정
		UPDATE A SET A.PROFIT_TEAM_CODE = B.TEAM_CODE, A.PROFIT_TEAM_NAME = C.TEAM_NAME
		FROM SET_MASTER A
		CROSS JOIN EMP_MASTER B
		INNER JOIN EMP_TEAM C ON B.TEAM_CODE = C.TEAM_CODE
		WHERE A.MASTER_CODE IN (SELECT Data FROM DBO.FN_SPLIT(@CODE, ',') WHERE DATA <> '') AND A.DEP_DATE >= @START_DATE AND A.DEP_DATE < @END_DATE AND B.EMP_CODE = @NEW_CODE;

	END
	ELSE IF EXISTS(SELECT 1 FROM PKG_DETAIL WHERE PRO_CODE = @CODE)
	BEGIN
		DECLARE @NEW_PRO_CODE VARCHAR(20);
		SELECT @NEW_PRO_CODE = A.MASTER_CODE + '-______' + SUBSTRING(PRO_CODE, (CHARINDEX('-', PRO_CODE) + 7), 4) FROM PKG_DETAIL A WITH(NOLOCK) WHERE PRO_CODE = @CODE
		-- 상품담당자 수정
		UPDATE PKG_DETAIL SET NEW_CODE = @NEW_CODE
		WHERE PRO_CODE LIKE @NEW_PRO_CODE AND DEP_DATE >= @START_DATE AND DEP_DATE < @END_DATE;
		-- 예약담당자, 수익부서 수정 - 부산, 대구지점예외
		UPDATE A SET A.NEW_CODE = B.EMP_CODE, A.NEW_TEAM_CODE = B.TEAM_CODE, A.NEW_TEAM_NAME = C.TEAM_NAME
			, A.PROFIT_EMP_CODE = (CASE WHEN A.PROFIT_TEAM_CODE IN ('514', '568', '624') AND B.TEAM_CODE NOT IN ('514', '568', '624') THEN A.PROFIT_EMP_CODE ELSE B.EMP_CODE END)
			, A.PROFIT_TEAM_CODE = (CASE WHEN A.PROFIT_TEAM_CODE IN ('514', '568', '624') AND B.TEAM_CODE NOT IN ('514', '568', '624') THEN A.PROFIT_TEAM_CODE ELSE B.TEAM_CODE END)
			, A.PROFIT_TEAM_NAME = (CASE WHEN A.PROFIT_TEAM_CODE IN ('514', '568', '624') AND B.TEAM_CODE NOT IN ('514', '568', '624') THEN A.PROFIT_TEAM_NAME ELSE C.TEAM_NAME END)
		FROM RES_MASTER_DAMO A
		CROSS JOIN EMP_MASTER B
		INNER JOIN EMP_TEAM C ON B.TEAM_CODE = C.TEAM_CODE
		WHERE A.PRO_CODE LIKE @NEW_PRO_CODE AND A.DEP_DATE >= @START_DATE AND A.DEP_DATE < @END_DATE AND B.EMP_CODE = @NEW_CODE;
		-- 정산마스터 수정
		UPDATE A SET A.PROFIT_TEAM_CODE = B.TEAM_CODE, A.PROFIT_TEAM_NAME = C.TEAM_NAME
		FROM SET_MASTER A
		CROSS JOIN EMP_MASTER B
		INNER JOIN EMP_TEAM C ON B.TEAM_CODE = C.TEAM_CODE
		WHERE A.PRO_CODE LIKE @NEW_PRO_CODE AND A.DEP_DATE >= @START_DATE AND A.DEP_DATE < @END_DATE AND B.EMP_CODE = @NEW_CODE;
	END

END
GO
