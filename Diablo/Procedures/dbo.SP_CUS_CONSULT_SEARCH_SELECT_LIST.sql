USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		최미선
-- Create date: 2010-04-26
-- Description:	<회원검색 PAGING>
-- 2010-06-03 박형만 암호화 적용
-- 2010-12-08 김성호 회원테이블 분리로 인해 CUS_STATE 사용 안함
-- 2012-03-02 박형만 READ UNCOMMITTED 설정
-- 2015-03-03 김성호 주민번호 삭제, 생년월일 사용
-- =============================================
CREATE PROCEDURE [dbo].[SP_CUS_CONSULT_SEARCH_SELECT_LIST]
(
	@FLAG			CHAR(1),
	@PAGE_SIZE		INT,
	@PAGE_INDEX		INT,
	@MEM_YN			VARCHAR(3),
	@CUS_GRADE		INT,
	@CUS_NAME		VARCHAR(20),
	@CUS_ID			VARCHAR(20),
	--@SOC_NUM1		VARCHAR(6),
	--@SOC_NUM2		VARCHAR(7),
	@BIRTH_DATE		DATETIME,
	@EMAIL			VARCHAR(40),
	@NOR_TEL1		VARCHAR(6),
	@NOR_TEL2		VARCHAR(5),
	@NOR_TEL3		VARCHAR(4),
	@RES_CODE		CHAR(12),
	@START_DATE		DATETIME,
	@END_DATE		DATETIME
)
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	
	DECLARE @SQLSTRING NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000), @FROM INT, @TO INT;

	SET @FROM = @PAGE_INDEX * @PAGE_SIZE + 1;
	SET @TO = @PAGE_INDEX * @PAGE_SIZE + @PAGE_SIZE;

	-- WHERE 조건 만들기
	SET @SQLSTRING = 'WHERE 1 = 1';

	BEGIN
		-- 고객구분
		IF (@MEM_YN = 'ON')
			SET @SQLSTRING = @SQLSTRING + ' AND A.CUS_ID IS NOT NULL AND A.CUS_ID <> '''''
		ELSE IF (@MEM_YN = 'OFF')
			SET @SQLSTRING = @SQLSTRING + ' AND (A.CUS_ID IS NULL OR A.CUS_ID = '''')'
		-- 고객등급
		IF @CUS_GRADE < 9
			SET @SQLSTRING = @SQLSTRING + ' AND A.CUS_GRADE = @CUS_GRADE'
		--고객이름
		IF ISNULL(@CUS_NAME, '') <> ''
			SET @SQLSTRING = @SQLSTRING + ' AND A.CUS_NAME = @CUS_NAME'
		--고객아이디
		IF ISNULL(@CUS_ID, '') <> ''
			SET @SQLSTRING = @SQLSTRING + ' AND A.CUS_ID = @CUS_ID'
		----주민번호1
		--IF ISNULL(@SOC_NUM1, '') <> ''
		--	SET @SQLSTRING = @SQLSTRING + ' AND A.SOC_NUM1 LIKE @SOC_NUM1 + ''%'''
		----주민번호2
		--IF ISNULL(@SOC_NUM2, '') <> ''
		--BEGIN
		--	--SET @SQLSTRING = @SQLSTRING + ' AND A.SOC_NUM2 = @SOC_NUM2'
		--	SET @SQLSTRING = @SQLSTRING + ' AND A.SEC1_SOC_NUM2 = damo.dbo.pred_meta_plain_v (@SOC_NUM2,''DIABLO'',''dbo.CUS_CUSTOMER'',''SOC_NUM2'') '
		--END 
		IF ISNULL(@BIRTH_DATE, '') <> ''
			SET @SQLSTRING = @SQLSTRING + ' AND A.BIRTH_DATE = @BIRTH_DATE'
		--이메일
		IF ISNULL(@EMAIL, '') <> ''
			SET @SQLSTRING = @SQLSTRING + ' AND A.EMAIL LIKE @EMAIL + ''%'''
		--휴대폰번호1
		IF ISNULL(@NOR_TEL1, '') <> ''
			SET @SQLSTRING = @SQLSTRING + ' AND A.NOR_TEL1 = @NOR_TEL1'
		--휴대폰번호2
		IF ISNULL(@NOR_TEL2, '') <> ''
			SET @SQLSTRING = @SQLSTRING + ' AND A.NOR_TEL2 = @NOR_TEL2'
		--휴대폰번호3
		IF ISNULL(@NOR_TEL3, '') <> ''
			SET @SQLSTRING = @SQLSTRING + ' AND A.NOR_TEL3 = @NOR_TEL3'
		--예약코드
		IF ISNULL(@RES_CODE, '') <> ''
			SET @SQLSTRING = @SQLSTRING + ' AND CUS_NO IN (SELECT CUS_NO FROM RES_MASTER_damo  WITH(NOLOCK) WHERE RES_CODE = @RES_CODE UNION SELECT CUS_NO FROM RES_CUSTOMER_damo  WITH(NOLOCK) WHERE RES_CODE = @RES_CODE)'
		--가입날짜
		IF ISNULL(@START_DATE, '') <> ''
			SET @SQLSTRING = @SQLSTRING + ' AND A.NEW_DATE >= @START_DATE'
		IF ISNULL(@END_DATE, '') <> ''
			SET @SQLSTRING = @SQLSTRING + ' AND A.NEW_DATE <= DATEADD(SECOND, -1, (DATEADD(DAY, 1, @END_DATE)))'

	END

	IF @FLAG = 'C'					-- 전체 글수
	BEGIN
		SET @SQLSTRING = N'SELECT COUNT(*) FROM CUS_CUSTOMER_damo A WITH(NOLOCK) ' + @SQLSTRING;
	END
	ELSE IF @FLAG = 'L'				-- 검색
	BEGIN
		SET @SQLSTRING = N'
		WITH LIST AS
		(
			SELECT ROW_NUMBER() OVER (ORDER BY A.NEW_DATE DESC, A.CUS_NAME) AS [ROWNUMBER], A.CUS_NO
			FROM CUS_CUSTOMER_damo A WITH(NOLOCK)
			' + @SQLSTRING + '
		)
		SELECT A.ROWNUMBER
			, (
				CASE
					WHEN ISNULL(B.CUS_ID, '''') <> '''' THEN ''ON''
					ELSE ''OFF''
				END
			) AS [ONOFF],
			B.CUS_NO,
			B.CUS_GRADE,
			B.CUS_ID,
			B.CUS_NAME,
--			B.SOC_NUM1,
			--B.SOC_NUM2,
--			damo.dbo.dec_varchar(''DIABLO'',''dbo.CUS_CUSTOMER'',''SOC_NUM2'', B.SEC_SOC_NUM2) AS SOC_NUM2 , 
			B.BIRTH_DATE,
			B.GENDER,
			B.NOR_TEL1,
			B.NOR_TEL2,
			B.NOR_TEL3,
			B.EMAIL,
			(SELECT COUNT(*) FROM RES_MASTER_damo  WITH(NOLOCK) WHERE CUS_NO = B.CUS_NO) AS [RES_COUNT],
			(SELECT COUNT(*) FROM RES_CUSTOMER_damo  WITH(NOLOCK) WHERE CUS_NO = B.CUS_NO) AS [DEP_COUNT],
			B.NEW_DATE
		FROM LIST A
		INNER JOIN CUS_CUSTOMER_damo B  WITH(NOLOCK) ON A.CUS_NO = B.CUS_NO 
		WHERE ROWNUMBER BETWEEN @FROM AND @TO;';
	END

	SET @PARMDEFINITION = N'@FROM INT, @TO INT, @FLAG CHAR(1), @PAGE_SIZE INT, @PAGE_INDEX INT, @MEM_YN VARCHAR(3), @CUS_GRADE INT, @CUS_NAME VARCHAR(20), @CUS_ID VARCHAR(20)
	,@BIRTH_DATE DATETIME, @EMAIL VARCHAR(40), @NOR_TEL1 VARCHAR(6), @NOR_TEL2 VARCHAR(5), @NOR_TEL3 VARCHAR(4), @RES_CODE CHAR(12), @START_DATE DATETIME, @END_DATE DATETIME'
	--PRINT @SQLSTRING
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @FROM, @TO, @FLAG, @PAGE_SIZE, @PAGE_INDEX, @MEM_YN, @CUS_GRADE, @CUS_NAME, @CUS_ID
	,@BIRTH_DATE, @EMAIL, @NOR_TEL1, @NOR_TEL2, @NOR_TEL3, @RES_CODE, @START_DATE, @END_DATE;

END


--exec  [dbo].[SP_CUS_CONSULT_SEARCH_SELECT_LIST] 'l', 15, 0, '', 0, '', '', '', '', '', '', '', '', '', '2010-05-01', '2010-05-07'




GO
