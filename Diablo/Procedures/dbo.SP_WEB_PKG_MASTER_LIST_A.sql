USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_WEB_PKG_MASTER_LIST_A]    
	@FLAG    CHAR(1),
	@SORT_CODE   INT,
	@PAGE_SIZE   INT,
	@PAGE_INDEX   INT,
	@REGION_CODE  VARCHAR(100),
	@NATION_CODE  VARCHAR(100),
	@CITY_CODE   VARCHAR(100),
	@GROUP_CODE   VARCHAR(100),
	@ATT_CODE   VARCHAR(100),

	@START_DATE   DATETIME,
	@END_DATE   DATETIME,
	@DAY    INT,
	@PRICE    INT,
	@SEARCH_TEXT  VARCHAR(100)
AS    
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	DECLARE @SQLSTRING NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000), @SORT_STRING VARCHAR(100), @FROM INT, @TO INT;    

	SET @FROM = @PAGE_INDEX * @PAGE_SIZE + 1;    
	SET @TO = @PAGE_INDEX * @PAGE_SIZE + @PAGE_SIZE;    

	-- WHERE 조건 만들기    
	SET @SQLSTRING = 'WHERE LAST_DATE > GETDATE()'    

		-- 검색조건 추가    
	IF @START_DATE IS NOT NULL    
	BEGIN    
		SET @SQLSTRING = 'WHERE LAST_DATE > @START_DATE AND NEXT_DATE < @END_DATE'    
	END    
	IF @DAY > 0    
	BEGIN    
		SET @SQLSTRING = @SQLSTRING + ' AND TOUR_DAY = @DAY'    
	END    
	IF @PRICE > 0    
	BEGIN    
		SET @SQLSTRING = @SQLSTRING + ' AND @PRICE BETWEEN LOW_PRICE AND HIGH_PRICE'    
	END    
	IF ISNULL(@SEARCH_TEXT, '') <> ''    
	BEGIN    
		SET @SQLSTRING = @SQLSTRING + ' AND MASTER_NAME LIKE ''%'' + @SEARCH_TEXT + ''%'''    
	END    
		-- 검색조건 추가    

		-- 지역코드    
	IF ISNULL(@REGION_CODE, '') <> ''    
	BEGIN    
		SELECT @REGION_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@REGION_CODE, ',') FOR XML PATH('')), 1, 1, '')    

		SET @SQLSTRING = @SQLSTRING + ' AND MASTER_CODE IN (    
		SELECT MASTER_CODE FROM PKG_MASTER_SCH_CITY    
		WHERE CITY_CODE IN (    
		SELECT C.CITY_CODE FROM PUB_REGION A    
		INNER JOIN PUB_NATION B ON A.REGION_CODE = B.REGION_CODE    
		INNER JOIN PUB_CITY C ON B.NATION_CODE = C.NATION_CODE    
		WHERE [SIGN] IN (' + @REGION_CODE + ')    
		))'    
	END    
		-- 국가코드    
	IF ISNULL(@NATION_CODE, '') <> ''    
	BEGIN    
		SELECT @NATION_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@NATION_CODE, ',') FOR XML PATH('')), 1, 1, '')    
		SET @SQLSTRING = @SQLSTRING + ' AND MASTER_CODE IN (SELECT MASTER_CODE FROM PKG_MASTER_SCH_CITY WHERE CITY_CODE IN (SELECT CITY_CODE FROM PUB_CITY WHERE NATION_CODE IN (' + @NATION_CODE + ')) AND MAINCITY_YN = ''Y'')'    
	END    
		-- 도시코드    
	IF ISNULL(@CITY_CODE, '') <> ''    
	BEGIN    
		SELECT @CITY_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@CITY_CODE, ',') FOR XML PATH('')), 1, 1, '')    
		SET @SQLSTRING = @SQLSTRING + ' AND MASTER_CODE IN (SELECT MASTER_CODE FROM PKG_MASTER_SCH_CITY WHERE CITY_CODE IN (SELECT CITY_CODE FROM PUB_CITY WHERE CITY_CODE IN (' + @CITY_CODE + ')) AND MAINCITY_YN = ''Y'')'    
	END    
		-- 그룹코드    
	IF ISNULL(@GROUP_CODE, '') <> ''    
	BEGIN    
		SELECT @GROUP_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@GROUP_CODE, ',') FOR XML PATH('')), 1, 1, '')    
		SET @SQLSTRING = @SQLSTRING + ' AND MASTER_CODE IN (SELECT MASTER_CODE FROM PKG_GROUP WHERE GROUP_CODE IN (' + @GROUP_CODE + '))'    
	END    
		-- 속성코드    
	IF ISNULL(@ATT_CODE, '') <> ''    
	BEGIN    
		SELECT @ATT_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@ATT_CODE, ',') FOR XML PATH('')), 1, 1, '')    
		SET @SQLSTRING = @SQLSTRING + ' AND MASTER_CODE IN (SELECT MASTER_CODE FROM PKG_ATTRIBUTE WHERE ATT_CODE IN (' + @ATT_CODE + '))'    
	END    

	-- SORT 조건 만들기    
	SELECT @SORT_STRING = (    
		CASE @SORT_CODE    
		WHEN 1 THEN 'ORDER BY REGION_ORDER'
		WHEN 2 THEN 'ORDER BY LOW_PRICE'    
		WHEN 3 THEN 'ORDER BY HIGH_PRICE DESC'
	END)    

	IF @FLAG = 'C'    
	BEGIN    
		SET @SQLSTRING = N'    
		SELECT COUNT(*) FROM PKG_MASTER A '    
		+ @SQLSTRING;    
	END    
	ELSE IF @FLAG = 'L'    
	BEGIN    
		SET @SQLSTRING = N'    
		WITH LIST AS    
		(    
			SELECT ROW_NUMBER() OVER (' + @SORT_STRING + ') AS [ROWNUMBER], A.MASTER_CODE    
			FROM PKG_MASTER A    
			' + @SQLSTRING + '    
		)    
		SELECT    
			B.MASTER_CODE, B.MASTER_NAME, B.PKG_COMMENT, B.PKG_SUMMARY, B.LOW_PRICE, B.HIGH_PRICE, B.EVENT_NAME
			, B.EVENT_PRO_CODE, B.EVENT_DEP_DATE
			, ISNULL((SELECT SUM(GRADE) FROM PRO_COMMENT WHERE MASTER_CODE = A.MASTER_CODE), 0) AS [GRADE]
			, (SELECT COUNT(*) FROM HBS_DETAIL WHERE MASTER_SEQ = ''1'' AND MASTER_CODE = A.MASTER_CODE) AS [TRAVEL]
			, C.*, D.TWO_COUNT, D.THREE_COUNT, D.FOUR_COUNT, D.FIVE_COUNT,
			D.TWO_PERCENT, D.THREE_PERCENT, D.FOUR_PERCENT, D.FIVE_PERCENT
		FROM LIST A
		INNER JOIN PKG_MASTER B ON A.MASTER_CODE = B.MASTER_CODE
		LEFT OUTER JOIN INF_FILE_MASTER C ON B.MAIN_FILE_CODE = C.FILE_CODE
		LEFT OUTER JOIN STS_PKG_RES_COUNT D ON A.MASTER_CODE = D.MASTER_CODE
		' + @SORT_STRING
	END

	SET @PARMDEFINITION = N'@FROM INT, @TO INT, @START_DATE DATETIME, @END_DATE DATETIME, @DAY INT, @PRICE INT, @SEARCH_TEXT VARCHAR(100)';

	--PRINT @SQLSTRING
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @FROM, @TO, @START_DATE, @END_DATE, @DAY, @PRICE, @SEARCH_TEXT;
	PRINT @SQLSTRING

END

--SP_WEB_PKG_MASTER_LIST 'C', 1, 10, 0, 'JP,CN', '', '', ''    
--SP_WEB_PKG_MASTER_LIST 'C', 1, 10, 0, '', 'TYO,OSA', '', ''    
--SP_WEB_PKG_MASTER_LIST 'C', 1, 10, 0, '', '', 'G100,T120', ''    
--SP_WEB_PKG_MASTER_LIST 'C', 1, 10, 0, '', '', '', 'P,G'

GO
