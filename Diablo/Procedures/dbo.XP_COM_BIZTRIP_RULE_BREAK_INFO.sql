USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: XP_COM_BIZTRIP_RULE_BREAK_INFO
■ DESCRIPTION				: 예약전 규정위반 내역 조회 하기 
■ INPUT PARAMETER			: 

	exec XP_COM_BIZTRIP_RULE_BREAK_INFO @AGT_CODE=N'92756',@EMP_SEQ=N'122,100',@PRO_TYPE=2,@AIRLINE_CODE=N'CX',@AIR_TOTAL_TIME=N'03:40',@AIR_SEAT_TYPE=2,@HOTEL_CITY_CODE=NULL,@HOTEL_CHAIN_CODE=NULL,@HOTEL_PRICE_PER_DAY=0	
	
	exec XP_COM_BIZTRIP_RULE_BREAK_INFO @AGT_CODE=N'92756',@EMP_SEQ=122,@PRO_TYPE=2,@AIRLINE_CODE=N'UO',@AIR_TOTAL_TIME=N'03:35',@AIR_SEAT_TYPE=1,@HOTEL_CITY_CODE=NULL,@HOTEL_CHAIN_CODE=NULL,@HOTEL_PRICE_PER_DAY=0

	XP_COM_BIZTRIP_RULE_BREAK_INFO '92756' ,'122,100,122', 
	2 , 'OZ','05:00',1,	
	'','',0

	XP_COM_BIZTRIP_RULE_BREAK_INFO '92756' ,122, 
	3 , '','',0,	
	'179900','',1000000

--규정 가져오기 
SELECT TOP 100 * FROM COM_BIZTRIP_GROUP WHERE  BT_SEQ = 4 
SELECT TOP 100 * FROM COM_AIR_RULE WHERE  BT_SEQ = 4 
SELECT TOP 100 * FROM COM_HOTEL_RULE WHERE BT_SEQ = 4 

--규정 위반 사유 리스트 
XP_COM_BREAKREASON_LIST_SELECT @AGT_CODE= '92756',  @REASON_SEQ = 0 ,  @USE_YN = 'Y'

--선호
SELECT TOP 100 * FROM COM_PREFER WHERE AGT_CODE = '92756' AND PREFER_YN ='Y' AND PRO_TYPE = 'A' 
--비선호
SELECT TOP 100 * FROM COM_PREFER WHERE AGT_CODE = '92756' AND PREFER_YN ='N' AND PRO_TYPE = 'A' 

■ OUTPUT PARAMETER			: 
■ EXEC						: 
	
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2016-02-26		박형만			최초생성  
   2016-03-18		정지용			규정 사용여부 추가  AND A.USE_YN = 'Y'  
   2016-03-29		박형만			PUB_CITY_MAP_JUSTGO_TMP -> PUB_CITY_MAP_JUSTGO
   2016-05-04		박형만			부서별,직급별 매핑 추가 
   2016-05-09		박형만			호텔체인 조건 수정 
   2016-05-11		박형만			BT_CODE가져오기 공용함수로 수정 
   2016-05-24		박형만			항공 이용불가 규정 ,시간대별 규정 순으로 체크 
   2016-08-25		이유라			규정이 여러개일경우 세부단위 순으로(도시,국가,지역)
   2016-12-05		박형만			프리미엄일반석도 일반석처럼 동작 @AIR_SEAT_TYPE  일반석1,프리미엄일반석2 ==> 1 로 동작 , 비즈니스3=>2 , 일등석4=>3 으로 
================================================================================================================*/ 
CREATE PROC [dbo].[XP_COM_BIZTRIP_RULE_BREAK_INFO] 
(
@AGT_CODE VARCHAR(10)
--,@EMP_SEQ INT 
,@EMP_SEQ varchar(100)

,@PRO_TYPE INT -- 2항공,3호텔
,@AIRLINE_CODE VARCHAR(100) --  항공사코드(복수 OZ,KE,...)
,@AIR_TOTAL_TIME VARCHAR(5) --  항공소요시간 (HH:MM)
,@AIR_SEAT_TYPE INT --1 일반석(프리미엄일반석),2 비즈니스 3 일등석  =--> 프리미엄 일반석은 일반석처럼 동작하도록 수정 

,@HOTEL_CITY_CODE VARCHAR(20) --  예약전, 저스트고 도시코드 
,@HOTEL_CHAIN_CODE VARCHAR(2) --  호텔체인코드(단일 AP)
,@HOTEL_PRICE_PER_DAY decimal --  호텔1박당 금액 
)

AS 
------------------------------------------------------------
--DECLARE @AGT_CODE VARCHAR(10)
--DECLARE @EMP_SEQ INT 

--DECLARE @PRO_TYPE INT -- 2항공,3호텔
--DECLARE @AIRLINE_CODE VARCHAR(100) --  항공사코드(복수 OZ,KE,...)
--DECLARE @AIR_TOTAL_TIME VARCHAR(5) --  항공소요시간 (HH:MM)
--DECLARE @AIR_SEAT_TYPE INT --  1 일반석(프리미엄일반석),2 비즈니스 3 일등석

--DECLARE @HOTEL_CITY_CODE VARCHAR(5) --  호텔도시코드 
--DECLARE @HOTEL_CHAIN_CODE VARCHAR(2) --  호텔체인코드(단일 AP)
--DECLARE @HOTEL_PRICE_PER_DAY INT --  호텔1박당 금액 
--------------------------------------------------------------
--SELECT @AGT_CODE = '92756'
--,@EMP_SEQ = 100
--,@PRO_TYPE = 2 

--,@AIRLINE_CODE = 'OZ,KE'
--,@AIR_TOTAL_TIME = '01:00'
--,@AIR_SEAT_TYPE = 1 


--,@AIRLINE_CODE = 'OZ,KE'
--,@AIR_TOTAL_TIME = '01:00'
--,@AIR_SEAT_TYPE = 1 
----SELECT TOP 100 * FROM COM_EMPLOYEE A WITH(NOLOCK) WHERE AGT_CODE = @AGT_CODE
BEGIN 

	-- 프리미엄 일반석은 일반석처럼 동작하도록 수정  , 비즈니스, 일등석 하나씩 -1 
	SET @AIR_SEAT_TYPE = CASE WHEN @AIR_SEAT_TYPE = 2 THEN 1 
							  WHEN @AIR_SEAT_TYPE = 3 THEN 2 
							  WHEN @AIR_SEAT_TYPE = 4 THEN 3
								ELSE @AIR_SEAT_TYPE END 
	--가져올 규정정보1건 
	DECLARE 
	@BT_SEQ INT,
	@ALL_YN	char(1),
	@REPORT_YN	char(1),@EMAIL_SEND_YN	char(1),@CONFIRM_YN	char(1), --공용기능 
	@AIR_SAME_YN	char(1),@AIR_LIKE_YN char(1), --항공
	@HOTEL_LIKE_YN	char(1)--호텔 

	--반환될 규정값 
	DECLARE 
	@AIR_SEAT_RULE_BRK_YN CHAR(1),
	@AIR_SEAT_RULE_BRK_DETAIL VARCHAR(200),
	@AIR_SAME_RULE_BRK_YN CHAR(1),
	@AIR_SAME_RULE_BRK_DETAIL VARCHAR(200),

	@AIR_LIKE_RULE_BRK_YN CHAR(1),
	@AIR_LIKE_RULE_BRK_DETAIL VARCHAR(200),
	@AIR_DISLIKE_RULE_BRK_YN CHAR(1),
	@AIR_DISLIKE_RULE_BRK_DETAIL VARCHAR(200),

	@HOTEL_REGION_RULE_BRK_YN CHAR(1),
	@HOTEL_REGION_RULE_BRK_DETAIL VARCHAR(200),

	@HOTEL_LIKE_RULE_BRK_YN CHAR(1),
	@HOTEL_LIKE_RULE_BRK_DETAIL VARCHAR(200),
	@HOTEL_DISLIKE_RULE_BRK_YN CHAR(1),
	@HOTEL_DISLIKE_RULE_BRK_DETAIL VARCHAR(200)

	--출장규정 가져오기 우선순위 높은거 1건 

	SELECT TOP 1 @BT_SEQ = BT_SEQ , --규정번호 
		@ALL_YN=ALL_YN, 
		@REPORT_YN=REPORT_YN,@EMAIL_SEND_YN=EMAIL_SEND_YN, @CONFIRM_YN=CONFIRM_YN,
		@AIR_SAME_YN=AIR_SAME_YN, @AIR_LIKE_YN=AIR_LIKE_YN,
		@HOTEL_LIKE_YN=HOTEL_LIKE_YN
	FROM 
	(
		/*  이전 소스 
		--직원별,팀별,직급별 매핑
		SELECT A.* FROM COM_BIZTRIP_GROUP A WITH(NOLOCK) 
			INNER JOIN COM_BIZTRIP_EMPLOYEE B  WITH(NOLOCK) 
				ON A.AGT_CODE = B.AGT_CODE AND A.BT_SEQ = B.BT_SEQ
		WHERE A.AGT_CODE = @AGT_CODE AND A.USE_YN = 'Y'
		--AND B.BT_EMP_SEQ = @EMP_SEQ --직원매핑
		AND  
		( (B.BT_EMP_TYPE = 'E' AND B.BT_EMP_SEQ IN ( SELECT DATA FROM FN_SPLIT(@EMP_SEQ ,',') ) )   --직원매핑
		OR  (B.BT_EMP_TYPE = 'T' AND B.BT_EMP_SEQ IN ( SELECT TEAM_SEQ FROM  COM_EMPLOYEE WHERE AGT_CODE = @AGT_CODE AND EMP_SEQ IN ( SELECT DATA FROM FN_SPLIT(@EMP_SEQ ,',') ) )   )--부서매핑
		OR  (B.BT_EMP_TYPE = 'P' AND B.BT_EMP_SEQ IN ( SELECT POS_SEQ FROM  COM_EMPLOYEE WHERE AGT_CODE = @AGT_CODE AND EMP_SEQ IN ( SELECT DATA FROM FN_SPLIT(@EMP_SEQ ,',') ) )   )--직급매핑
		)

		UNION ALL 
		SELECT A.* FROM COM_BIZTRIP_GROUP A WITH(NOLOCK) 
		WHERE A.AGT_CODE = @AGT_CODE AND A.USE_YN = 'Y'
		AND A.ALL_YN ='Y'  --전직원 사용
		*/
		--공용함수로 수정 16.05.11
		SELECT A.* FROM COM_BIZTRIP_GROUP A  WITH(NOLOCK) 
			INNER JOIN DBO.FN_COM_BIZTRIP_GROUP_INFO(@AGT_CODE, @EMP_SEQ) B 
				ON A.AGT_CODE = B.AGT_CODE 
				AND A.BT_SEQ = B.BT_SEQ 
			
	) TT 
	ORDER BY ORDER_NUM ASC 



	--SELECT @BT_SEQ ,@ALL_YN ,@REPORT_YN , @EMAIL_SEND_YN , @CONFIRM_YN , @AIR_SAME_YN , @AIR_LIKE_YN ,@HOTEL_LIKE_YN 
	--------------------------------------------------------------------------------------------------------------------------
	IF( @PRO_TYPE = 2 )  --항공 
	BEGIN 
		---- 항공 소요시간별 좌석등급규정 체크 
		--IF EXISTS ( SELECT *
		--	FROM COM_AIR_RULE WITH(NOLOCK)
		--	WHERE AGT_CODE = @AGT_CODE AND BT_SEQ = @BT_SEQ  AND USE_YN ='Y' ) 
		--BEGIN 
		--	-- 항공시간별 좌석등급규정
		--	-- 하위 등급 규정은 가능 (비즈니스규정은 , 일반석가능)
		--	DECLARE @RULE_SEAT_TYPE INT 
		--	DECLARE @RULE_SEAT_TYPE_CODE VARCHAR(1)
		--	DECLARE @RULE_SEAT_TYPE_NAME VARCHAR(100)
		--	SELECT TOP 1 @RULE_SEAT_TYPE = (CASE WHEN CLASS = 'E' THEN 1 WHEN CLASS = 'B' THEN 2  WHEN CLASS = 'F' THEN 3 ELSE 0 END ) ,
		--			@RULE_SEAT_TYPE_NAME = (CASE WHEN CLASS = 'E' THEN '일반석' WHEN CLASS = 'B' THEN '비즈니스'WHEN CLASS = 'F' THEN '일등석' ELSE '' END ) , 
		--			@RULE_SEAT_TYPE_CODE = CLASS 
		--	FROM COM_AIR_RULE WITH(NOLOCK)
		--	WHERE AGT_CODE = @AGT_CODE
		--	AND BT_SEQ = @BT_SEQ  
		--	AND CONVERT(decimal(5,2),REPLACe(@AIR_TOTAL_TIME,':','.')) BETWEEN START_HOUR AND END_HOUR 
		--	ORDER BY (CASE WHEN CLASS = 'E' THEN 1 WHEN CLASS = 'B' THEN 2 WHEN CLASS = 'F' THEN 3 ELSE 0 END ) DESC 
		--	--규정보다 높은등급을 이용했을경우에만 
		--	IF( @RULE_SEAT_TYPE < @AIR_SEAT_TYPE )
		--	BEGIN
		--		SET @AIR_SEAT_RULE_BRK_YN ='Y' -- 규정위반
		--		SET @AIR_SEAT_RULE_BRK_DETAIL = @RULE_SEAT_TYPE_CODE --@RULE_SEAT_TYPE_NAME 
		--	END 
		--END 
		--항공 좌석 등급 규정 
		IF EXISTS ( SELECT *
			FROM COM_AIR_RULE WITH(NOLOCK)
			WHERE AGT_CODE = @AGT_CODE AND BT_SEQ = @BT_SEQ  AND USE_YN ='Y' ) 
		BEGIN 

			DECLARE @AIR_TIME DECIMAL(5,2)
			SET @AIR_TIME = CONVERT(decimal(5,2),REPLACe(@AIR_TOTAL_TIME,':','.')) 
		
			--항공규정테이블 데이터 넣기 
			DECLARE @AIR_RULES TABLE 
			( SEAT_TYPE INT , CLASS CHAR(1) ,   CLASS_NOT_USE CHAR(1)  , START_HOUR INT , END_HOUR INT  ) 
			INSERT @AIR_RULES ( SEAT_TYPE , CLASS , CLASS_NOT_USE , START_HOUR , END_HOUR )
			SELECT (CASE WHEN CLASS = 'E' THEN 1 WHEN CLASS = 'B' THEN 2  WHEN CLASS = 'F' THEN 3 ELSE 0 END )  , CLASS , ISNULL(CLASS_NOT_USE,'N') , START_HOUR , END_HOUR 
			FROM COM_AIR_RULE WITH(NOLOCK)
			WHERE AGT_CODE = @AGT_CODE AND BT_SEQ = @BT_SEQ  AND USE_YN ='Y' 
			ORDER BY AIR_RULE_SEQ ASC 
 
			DECLARE @RULE_SEAT_TYPE INT 
			DECLARE @RULE_SEAT_TYPE_CODE VARCHAR(1)
			DECLARE @RULE_SEAT_TYPE_NAME VARCHAR(100)
			-- 이용불가 여부 1순위 
			IF EXISTS (SELECT * FROM @AIR_RULES WHERE SEAT_TYPE = @AIR_SEAT_TYPE AND CLASS_NOT_USE = 'Y' )
			BEGIN
				SELECT TOP 1  --한건 
					@RULE_SEAT_TYPE = SEAT_TYPE ,
					@RULE_SEAT_TYPE_CODE = CLASS ,
					@RULE_SEAT_TYPE_NAME = (CASE WHEN SEAT_TYPE = 1 THEN '일반석' WHEN SEAT_TYPE = 2 THEN '비즈니스'WHEN SEAT_TYPE = 3 THEN '일등석' ELSE '' END )
				FROM @AIR_RULES WHERE CLASS_NOT_USE <> 'Y' --이용가능한것중
				ORDER BY SEAT_TYPE DESC  -- 가장높은등급순

				-- 이용가능한것이 있을경우 
				IF( @RULE_SEAT_TYPE IS NOT NULL )
				BEGIN 
					--이용불가 한 항공 이용시 
					SET @AIR_SEAT_RULE_BRK_YN ='Y' -- 규정위반
					SET @AIR_SEAT_RULE_BRK_DETAIL = @RULE_SEAT_TYPE_CODE --@RULE_SEAT_TYPE_NAME 
				
					--SELECT '이용불가한것 위반 ' +  @RULE_SEAT_TYPE_NAME +  '미이용'
				END 
			END 
			-- 항공시간별 좌석등급 규정 2순위 
			ELSE IF EXISTS (SELECT * FROM @AIR_RULES 
				WHERE  @AIR_TIME >= START_HOUR 
				AND @AIR_TIME < END_HOUR --해당시간대에 있을경우 
				) 
			BEGIN
				-- 시간대별 
				SELECT TOP 1  --한건 
					@RULE_SEAT_TYPE = SEAT_TYPE ,
					@RULE_SEAT_TYPE_CODE = CLASS ,
					@RULE_SEAT_TYPE_NAME = (CASE WHEN SEAT_TYPE = 1 THEN '일반석' WHEN SEAT_TYPE = 2 THEN '비즈니스'WHEN SEAT_TYPE = 3 THEN '일등석' ELSE '' END )
				FROM @AIR_RULES 
				WHERE @AIR_TIME >= START_HOUR 
				AND @AIR_TIME < END_HOUR   --해당시간대에 있을경우 
				--AND  SEAT_TYPE < @AIR_SEAT_TYPE   --규정보다 높은등급을 이용했을경우에만 
				ORDER BY SEAT_TYPE DESC   -- 가장높은등급순

				--규정보다 높은등급을 이용했을경우에만 
				IF( @RULE_SEAT_TYPE < @AIR_SEAT_TYPE )
				BEGIN
					SET @AIR_SEAT_RULE_BRK_YN ='Y' -- 규정위반
					SET @AIR_SEAT_RULE_BRK_DETAIL = @RULE_SEAT_TYPE_CODE --@RULE_SEAT_TYPE_NAME 

					--SELECT @RULE_SEAT_TYPE_NAME +  '시간대별클래스 위반 ' + @RULE_SEAT_TYPE_NAME + '미이용' 
				END 
			END 
		END 

		-- 동일항공사 이용여부 
		IF( @AIR_SAME_YN = 'Y' )
		BEGIN
			IF EXISTS ( SELECT * FROM 
				  (SELECT ROW_NUMBER() OVER (ORDER BY DATA ) AS ROW_NUM FROM (SELECT DISTINCT DATA FROM FN_SPLIT(@AIRLINE_CODE,',')  ) B ) C 
				  WHERE ROW_NUM > 1 ) -- 다른 항공사가 한건이라도 있으면 
			BEGIN
				SET @AIR_SAME_RULE_BRK_YN = 'Y' 
				SET @AIR_SAME_RULE_BRK_DETAIL = '미이용' 
			END 
		END 

		-- 선호항공 이용여부 
		IF( @AIR_LIKE_YN = 'Y' )
		BEGIN
			IF NOT EXISTS ( SELECT PRE_SEQ FROM COM_PREFER WITH(NOLOCK) WHERE PRO_TYPE = 'A' AND PREFER_YN = 'Y' --선호항공사정보 
				AND AGT_CODE = @AGT_CODE
				AND PRE_CODE IN ( SELECT DATA FROM FN_SPLIT(@AIRLINE_CODE,',') )) -- 선호항공사 인것이 없을때
			BEGIN
				--SELECT 'A' 
				SET @AIR_LIKE_RULE_BRK_YN = 'Y' 
				SET @AIR_LIKE_RULE_BRK_DETAIL = '비이용' 
			END 
		END 
		--비선호 항공 이용여부 
		IF EXISTS ( SELECT PRE_SEQ FROM COM_PREFER WITH(NOLOCK) WHERE PRO_TYPE = 'A' AND PREFER_YN = 'N' --비선호항공사정보 
			AND AGT_CODE = @AGT_CODE
			AND PRE_CODE IN ( SELECT DATA FROM FN_SPLIT(@AIRLINE_CODE,',') ) ) --비선호 항공사 하나라도 있을때 
		BEGIN
			--SELECT 'A' 
			SET @AIR_DISLIKE_RULE_BRK_YN = 'Y' 
			SET @AIR_DISLIKE_RULE_BRK_DETAIL = '이용' 
		END 

	END 
	ELSE IF( @PRO_TYPE = 3 )  --호텔 
	BEGIN 
		--지역별 1박당금액 규정이 있으면 
		--전지역 우선적용 
		DECLARE @LIMIT_PRICE INT 
		SELECT  @LIMIT_PRICE = LIMIT_PRICE  FROM COM_HOTEL_RULE A WITH(NOLOCK)
			INNER JOIN COM_REGION_MASTER B WITH(NOLOCK)
				ON A.AGT_CODE = B.AGT_CODE 
				AND A.REG_MASTER_SEQ = B.REG_MASTER_SEQ 
		WHERE A.AGT_CODE = @AGT_CODE AND A.BT_SEQ = @BT_SEQ  AND A.USE_YN ='Y' 
		AND B.ALL_YN = 'Y' 
		ORDER BY A.REG_MASTER_SEQ ASC -- 중복될경우 가장 처음 전지역

		--SELECT @LIMIT_PRICE 
		--전지역 한도금액 있고 한도를 초과한경우 
		IF( ISNULL(@LIMIT_PRICE,0) > 0 AND @HOTEL_PRICE_PER_DAY > @LIMIT_PRICE  )
		BEGIN
			SET @HOTEL_REGION_RULE_BRK_YN ='Y'
			SET @HOTEL_REGION_RULE_BRK_DETAIL = CONVERT(VARCHAR(10),@LIMIT_PRICE)
		END 
		ELSE
		BEGIN 
			-- 기타지역 재검색 
			--CITY_CODE 로 지역, 국가 , 도시 구함 
			DECLARE @CITY_CODE VARCHAR(3),@NATION_CODE VARCHAR(2) , @REGION_CODE VARCHAR(3) 
			SELECT @CITY_CODE = A.CITY_CODE , @NATION_CODE = B.NATION_CODE , @REGION_CODE =  C.REGION_CODE FROM PUB_CITY A 
				INNER JOIN PUB_NATION B 
					ON A.NATION_CODE = B.NATION_CODE 
				INNER JOIN PUB_REGION C
					ON B.REGION_CODE = C.REGION_CODE 

				--INNER JOIN PUB_CITY_MAP_JUSTGO_TMP D
				--	ON A.CITY_CODE = D.CITY_CODE 
			WHERE A.CITY_CODE =  @HOTEL_CITY_CODE

			--한도금액 담기 
			SELECT TOP 1 @LIMIT_PRICE = LIMIT_PRICE 
			FROM 
			(
				SELECT 
					LIMIT_PRICE,
					(CASE WHEN REG_TYPE = 'R' THEN 3 
						  WHEN REG_TYPE = 'N' THEN 2
						  WHEN REG_TYPE = 'C' THEN 1 END ) AS REG_ORDER , 
					(CASE WHEN REG_TYPE = 'R' THEN REG_CODE END ) AS REGION_CODE , 
					(CASE WHEN REG_TYPE = 'N' THEN REG_CODE END) AS NATION_CODE , 
					(CASE WHEN REG_TYPE = 'C' THEN REG_CODE END) AS CITY_CODE
				FROM COM_HOTEL_RULE A WITH(NOLOCK)
					INNER JOIN COM_REGION_MASTER B WITH(NOLOCK)
						ON A.AGT_CODE = B.AGT_CODE 
						AND A.REG_MASTER_SEQ = B.REG_MASTER_SEQ 
					INNER JOIN COM_REGION_DETAIL C WITH(NOLOCK)
						ON A.AGT_CODE = C.AGT_CODE 
						AND A.REG_MASTER_SEQ = C.REG_MASTER_SEQ 
				WHERE  A.AGT_CODE = @AGT_CODE AND A.BT_SEQ = @BT_SEQ  AND A.USE_YN ='Y' 
				AND B.ALL_YN = 'N' 
				--AND A.REG_MASTER_SEQ = 7    
			) T
			WHERE (CITY_CODE = @CITY_CODE OR NATION_CODE = @NATION_CODE OR REGION_CODE = @REGION_CODE)  --도시,국가,지역 조건하나라도 맞으면 
			ORDER BY REG_ORDER ASC --가장 세부 단위순 (도시,국가,지역순)
			--ORDER BY LIMIT_PRICE  ASC -- 가장 낮은것 우선적용 (기존)


			--각지역별 한도금액 있고 한도를 초과한경우 
			IF( ISNULL(@LIMIT_PRICE,0) > 0 AND @HOTEL_PRICE_PER_DAY > @LIMIT_PRICE  )
			BEGIN
				SET @HOTEL_REGION_RULE_BRK_YN ='Y'
				SET @HOTEL_REGION_RULE_BRK_DETAIL = CONVERT(VARCHAR(10),@LIMIT_PRICE)
			END 
		END 

		--선호호텔체인 적용여부 
		IF( @HOTEL_LIKE_YN = 'Y' )
		BEGIN
			IF NOT EXISTS ( SELECT PRE_SEQ , *  FROM COM_PREFER WITH(NOLOCK) WHERE PRO_TYPE = 'H' AND PREFER_YN = 'Y' --선호호텔체인정보 
				AND AGT_CODE = @AGT_CODE
				AND PRE_CODE = @HOTEL_CHAIN_CODE )
			BEGIN
				--SELECT 'A' 
				SET @HOTEL_LIKE_RULE_BRK_YN = 'Y' 
				SET @HOTEL_LIKE_RULE_BRK_DETAIL = '비이용' 
			END 
		END 

		--비선호 호텔체인 이용여부 
		IF EXISTS ( SELECT PRE_SEQ , *  FROM COM_PREFER WITH(NOLOCK) WHERE PRO_TYPE = 'H' AND PREFER_YN = 'N' --비선호항공사정보 
			AND AGT_CODE = @AGT_CODE
			AND PRE_CODE  = @HOTEL_CHAIN_CODE )
		BEGIN
			SET @HOTEL_DISLIKE_RULE_BRK_YN = 'Y' 
			SET @HOTEL_DISLIKE_RULE_BRK_DETAIL = '이용' 
		END 
	END 


	--규정위반 결과 
	SELECT 
	@PRO_TYPE as PRO_TYPE , 
	@AGT_CODE AS AGT_CODE , 
	@BT_SEQ AS  BT_SEQ ,  --적용규정번호
	@REPORT_YN as REPORT_YN ,@EMAIL_SEND_YN as EMAIL_SEND_YN ,@CONFIRM_YN  as CONFIRM_YN ,
	ISNULL(@AIR_SEAT_RULE_BRK_YN,'N') AS AIR_SEAT_RULE_BRK_YN,
	@AIR_SEAT_RULE_BRK_DETAIL AS AIR_SEAT_RULE_BRK_DETAIL,
	ISNULL(@AIR_SAME_RULE_BRK_YN,'N') AS AIR_SAME_RULE_BRK_YN,
	@AIR_SAME_RULE_BRK_DETAIL AS AIR_SAME_RULE_BRK_DETAIL,

	ISNULL(@HOTEL_REGION_RULE_BRK_YN,'N') AS HOTEL_REGION_RULE_BRK_YN,
	@HOTEL_REGION_RULE_BRK_DETAIL AS HOTEL_REGION_RULE_BRK_DETAIL,

	ISNULL(@AIR_LIKE_RULE_BRK_YN,'N') AS AIR_LIKE_RULE_BRK_YN,
	@AIR_LIKE_RULE_BRK_DETAIL AS AIR_LIKE_RULE_BRK_DETAIL,
	ISNULL(@AIR_DISLIKE_RULE_BRK_YN,'N') AS AIR_DISLIKE_RULE_BRK_YN,
	@AIR_DISLIKE_RULE_BRK_DETAIL AS AIR_DISLIKE_RULE_BRK_DETAIL,

	ISNULL(@HOTEL_LIKE_RULE_BRK_YN,'N') AS HOTEL_LIKE_RULE_BRK_YN,
	@HOTEL_LIKE_RULE_BRK_DETAIL AS HOTEL_LIKE_RULE_BRK_DETAIL,

	ISNULL(@HOTEL_DISLIKE_RULE_BRK_YN,'N') AS HOTEL_DISLIKE_RULE_BRK_YN,
	@HOTEL_DISLIKE_RULE_BRK_DETAIL AS HOTEL_DISLIKE_RULE_BRK_DETAIL
END 






GO
