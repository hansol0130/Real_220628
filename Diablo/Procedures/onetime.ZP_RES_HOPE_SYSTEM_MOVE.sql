USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================    
■ USP_Name			: [onetime].[ZP_RES_HOPE_SYSTEM_MOVE]      
■ Description		: 희망예약 상품생성 및 예약 자동 이동
■ Input Parameter   :                      
	@PRO_CODE		: 상품코드
■ Output Parameter	:                      
■ Output Value		:                     
■ Exec				: 

	EXEC [onetime].[ZP_RES_HOPE_SYSTEM_MOVE] 'XXX986-211231A'

------------------------------------------------------------------------------------------------------------------    
■ Change History
------------------------------------------------------------------------------------------------------------------    
	Date			Author		Description
------------------------------------------------------------------------------------------------------------------    
	2021-03-17		김성호		최초생성
	2021-04-12		김성호		행사생성시 show_yn = 'N' 기본으로 설정
	2021-11-01		김성호		입금행사 수정, 이동전표 생성 추가
================================================================================================================*/   
CREATE PROCEDURE [onetime].[ZP_RES_HOPE_SYSTEM_MOVE]

	@PRO_CODE		VARCHAR(20)	-- 상품코드
	
AS
BEGIN
	
	SET NOCOUNT ON;
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	
	-- 트리거 동작 제외
	SET CONTEXT_INFO 0x21884680;
	
	------------------------------------------------------------------------
	-- 행사 당 최대 예약 수 SET
	------------------------------------------------------------------------
	DECLARE @MAX_RES_COUNT INT = 100;
	
	DECLARE @PRO_PART_CODE VARCHAR(20), @LAST_PRO_CODE VARCHAR(20), @REST_RES_COUNT INT, @BIT_CODE VARCHAR(4), @RES_CODE VARCHAR(20);
	DECLARE @ERRORCODE INTEGER = 0, @ERRORMSG VARCHAR(1000) = '';
	
	
	SELECT @PRO_PART_CODE = SUBSTRING(@PRO_CODE, 0, (CHARINDEX('-', @PRO_CODE) + 8)) -- [XXX986-211231A]001 따옴
	FROM PKG_DETAIL PD
	WHERE PD.PRO_CODE = @PRO_CODE;
	
	SELECT TOP 1 @LAST_PRO_CODE = PD.PRO_CODE, @REST_RES_COUNT = (@MAX_RES_COUNT - ISNULL((SELECT COUNT(*) FROM RES_MASTER RM WHERE RM.PRO_CODE = PD.PRO_CODE), 0)),
		@BIT_CODE = SUBSTRING(RM.PRO_CODE, (CHARINDEX('-', RM.PRO_CODE) + 8), 3)
	FROM RES_MASTER_damo RM 
	INNER JOIN PKG_DETAIL PD ON RM.PRO_CODE = PD.PRO_CODE 
	WHERE RM.PRO_CODE LIKE (@PRO_PART_CODE + '%')
	ORDER BY PD.PRO_CODE DESC;
	
	-- 예약이동
	DECLARE USER_CURSOR CURSOR FOR
	
		SELECT RES_CODE FROM RES_MASTER_damo RM WHERE RM.PRO_CODE = @PRO_CODE
	
	OPEN USER_CURSOR
	FETCH NEXT FROM USER_CURSOR	INTO @RES_CODE

	WHILE @@FETCH_STATUS = 0
	BEGIN
		
		BEGIN TRY
			BEGIN TRAN
		
			IF @REST_RES_COUNT <= 0
			BEGIN
				
				SET @BIT_CODE = (CASE WHEN ISNULL(@BIT_CODE, '') = '' THEN '001' ELSE RIGHT(('00' + CONVERT(VARCHAR(3), (CONVERT(INT, @BIT_CODE) + 1))), 3) END);
				
				DECLARE @NEW_PRO_CODE VARCHAR(20) = (@PRO_PART_CODE + @BIT_CODE);
		
				-- 행사복사
				IF NOT EXISTS(SELECT 1 FROM PKG_DETAIL WITH(NOLOCK) WHERE PRO_CODE = @NEW_PRO_CODE)
				BEGIN
					-- 행사 복사
					INSERT INTO PKG_DETAIL (
						PRO_CODE, PRO_NAME, MASTER_CODE, TRANSFER_TYPE, SEAT_CODE, DEP_DATE, ARR_DATE
						, TOUR_NIGHT, TOUR_DAY, SEAT_STATUS, FAKE_COUNT, MAX_COUNT, MIN_COUNT, LAST_PAY_DATE
						, SENDING_YN, SENDING_DATE, TC_YN, TC_CODE, TC_NAME, RES_ADD_YN, RES_EDT_YN, DEP_CFM_YN, CONFIRM_YN, VISA_YN
						, PASS_INFO, FIRST_MEET, SALE_TYPE, PRICE_TYPE, AIR_GDS, HOTEL_GDS, AIRLINE, PKG_SUMMARY, PKG_INC_SPECIAL
						, PKG_REVIEW, PKG_CONTRACT, PKG_REMARK, RES_REMARK, SHOW_YN, NEW_DATE, NEW_CODE
						, TOUR_JOURNEY, PKG_SHOPPING_REMARK, HOTEL_REMARK, OPTION_REMARK, PKG_TOUR_REMARK, PKG_PASSPORT_REMARK, PRO_TYPE, MEET_COUNTER
						, GUIDE_YN, AIR_CFM_YN, ROOM_CFM_YN, SCHEDULE_CFM_YN, PRICE_CFM_YN )
					SELECT
						UPPER(@NEW_PRO_CODE), PRO_NAME, UPPER(MASTER_CODE), TRANSFER_TYPE, SEAT_CODE, DEP_DATE, ARR_DATE
						, TOUR_NIGHT, TOUR_DAY, SEAT_STATUS, 0, MAX_COUNT, MIN_COUNT, LAST_PAY_DATE
						, SENDING_YN, NULL, TC_YN, NULL, NULL, 'Y', 'Y', 'N', 'N', VISA_YN
						, PASS_INFO, FIRST_MEET, SALE_TYPE, PRICE_TYPE, AIR_GDS, HOTEL_GDS, AIRLINE, PKG_SUMMARY, PKG_INC_SPECIAL
						, PKG_REVIEW, PKG_CONTRACT, PKG_REMARK, RES_REMARK, 'N', GETDATE(), NEW_CODE
						, TOUR_JOURNEY, PKG_SHOPPING_REMARK, HOTEL_REMARK, OPTION_REMARK, PKG_TOUR_REMARK, PKG_PASSPORT_REMARK, PRO_TYPE, MEET_COUNTER 
						, GUIDE_YN, AIR_CFM_YN, ROOM_CFM_YN, SCHEDULE_CFM_YN, PRICE_CFM_YN
					FROM PKG_DETAIL WHERE PRO_CODE = @PRO_CODE;

					-- 셀링포인트 복사 19.03 추가 
					INSERT INTO PKG_DETAIL_SELL_POINT 
					(PRO_CODE,TRAFFIC_POINT,STAY_POINT,TOUR_POINT,EAT_POINT,DISCOUNT_POINT,OTHER_POINT,INNER_PKG_GUIDANCE,INNER_CONTENT_URL)
					SELECT @NEW_PRO_CODE , TRAFFIC_POINT,STAY_POINT,TOUR_POINT,EAT_POINT,DISCOUNT_POINT,OTHER_POINT,INNER_PKG_GUIDANCE,INNER_CONTENT_URL
					FROM PKG_DETAIL_SELL_POINT  WITH(NOLOCK)
					WHERE PRO_CODE = @PRO_CODE;

					-- 가격정보 복사
					INSERT INTO PKG_DETAIL_PRICE (
						PRO_CODE, PRICE_SEQ, PRICE_NAME, SEASON, SCH_SEQ, PKG_INCLUDE, PKG_NOT_INCLUDE
						, ADT_PRICE, CHD_PRICE, INF_PRICE, SGL_PRICE, CUR_TYPE, EXC_RATE, FLOATING_YN
						, POINT_RATE, POINT_PRICE, POINT_YN
						, QCHARGE_TYPE, ADT_QCHARGE, CHD_QCHARGE, INF_QCHARGE, ADT_TAX, CHD_TAX, INF_TAX, QCHARGE_DATE
						)
					SELECT @NEW_PRO_CODE, PRICE_SEQ, PRICE_NAME, SEASON, SCH_SEQ, PKG_INCLUDE, PKG_NOT_INCLUDE
						, ADT_PRICE, CHD_PRICE, INF_PRICE, SGL_PRICE, CUR_TYPE, EXC_RATE, FLOATING_YN
						, POINT_RATE, POINT_PRICE, POINT_YN
						, QCHARGE_TYPE, ADT_QCHARGE, CHD_QCHARGE, INF_QCHARGE, ADT_TAX, CHD_TAX, INF_TAX, QCHARGE_DATE
					FROM PKG_DETAIL_PRICE WITH(NOLOCK) 
					WHERE PRO_CODE = @PRO_CODE;

					--가격호텔 복사 19.03 식사코드 추가 
					INSERT INTO PKG_DETAIL_PRICE_HOTEL 
					(PRO_CODE, PRICE_SEQ, DAY_NUMBER, HTL_MASTER_CODE, SUP_CODE, STAY_TYPE, STAY_INFO, DINNER_1,DINNER_2,DINNER_3,DINNER_CODE_1,DINNER_CODE_2,DINNER_CODE_3)
					SELECT @NEW_PRO_CODE, PRICE_SEQ, DAY_NUMBER, HTL_MASTER_CODE, SUP_CODE, STAY_TYPE, STAY_INFO,DINNER_1,DINNER_2,DINNER_3,DINNER_CODE_1,DINNER_CODE_2,DINNER_CODE_3
					FROM PKG_DETAIL_PRICE_HOTEL WITH(NOLOCK) 
					WHERE PRO_CODE = @PRO_CODE;

					-- 공동경비 복사
					INSERT INTO PKG_DETAIL_PRICE_GROUP_COST (PRO_CODE, PRICE_SEQ, COST_SEQ, COST_NAME, CURRENCY, ADT_COST, CHD_COST, INF_COST, USE_YN)
					SELECT @NEW_PRO_CODE, A.PRICE_SEQ, A.COST_SEQ, A.COST_NAME, A.CURRENCY, A.ADT_COST, A.CHD_COST, A.INF_COST, A.USE_YN
					FROM PKG_DETAIL_PRICE_GROUP_COST A WITH(NOLOCK)
					WHERE A.PRO_CODE = @PRO_CODE;
						
					-- 파일정보 복사
					INSERT INTO PKG_DETAIL_FILE (PRO_CODE, FILE_CODE, SHOW_ORDER)
					SELECT @NEW_PRO_CODE, FILE_CODE, SHOW_ORDER
					FROM PKG_DETAIL_FILE  WITH(NOLOCK) WHERE PRO_CODE = @PRO_CODE;
					
					-- 입금정보 수정
					--UPDATE PAY_MATCHING SET PRO_CODE = @NEW_PRO_CODE
					--WHERE PRO_CODE = @PRO_CODE;
					
					-- 가상행사코드 생성
					EXEC [dbo].[SP_ACC_GET_DUZ_CODE] @RES_CODE;
					
				END

				-- 생성된 행사 할당
				SELECT @LAST_PRO_CODE = @NEW_PRO_CODE,  @REST_RES_COUNT = @MAX_RES_COUNT;
				
			END

			-- 예약 행사코드 수정
			UPDATE RES_MASTER_damo SET PRO_CODE = @LAST_PRO_CODE WHERE RES_CODE = @RES_CODE;
			
			-- 입금정보 수정
			UPDATE PAY_MATCHING SET PRO_CODE = @LAST_PRO_CODE WHERE RES_CODE = @RES_CODE;
			
			-- 이동전표 등록
			EXEC DBO.SP_ACC_PAY_CHANGE_INS @PRO_CODE, @RES_CODE, @LAST_PRO_CODE, @RES_CODE, '', @ERRORCODE OUTPUT, @ERRORMSG OUTPUT

			-- 가상행사코드 생성
			IF @REST_RES_COUNT = @MAX_RES_COUNT
				EXEC [dbo].[SP_ACC_GET_DUZ_CODE] @RES_CODE;
			
			--PRINT @RES_CODE + ' | ' + @LAST_PRO_CODE;
			
			-- 가능 예약 수 차감
			SET @REST_RES_COUNT = (@REST_RES_COUNT - 1);
		
			IF @ERRORCODE = 0
			BEGIN
				--PRINT(@PRO_CODE)
				COMMIT TRAN
			END
			ELSE
			BEGIN
				--PRINT('실패')
				ROLLBACK TRAN
			END
			
		END TRY
		BEGIN CATCH

			ROLLBACK TRAN;
			PRINT ERROR_MESSAGE();
			 
		END CATCH
		
		FETCH NEXT FROM USER_CURSOR	INTO @RES_CODE
		
	END
	
	CLOSE USER_CURSOR;
	DEALLOCATE USER_CURSOR;
	
END	
GO
