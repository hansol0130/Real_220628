USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_MOB_CUS_SEND_LIST_SELECT
■ DESCRIPTION				: 회원 문자메일 수신 LIST
■ INPUT PARAMETER			: 
	@PAGE_INDEX  INT		: 현재 페이지
	@PAGE_SIZE  INT			: 한 페이지 표시 게시물 수	
	@CUS_NO INT				: 고객번호 
■ OUTPUT PARAMETER			: 
	@TOTAL_COUNT INT OUTPUT	: 총 리스트 카운트         
■ EXEC						: 
	DECLARE @PAGE_INDEX INT,
	@PAGE_SIZE  INT,
	@CUS_NO	INT ,
	@TOTAL_COUNT INT 
	SELECT @PAGE_INDEX=2,@PAGE_SIZE=20,@CUS_NO=3953145
	exec XP_MOB_CUS_SEND_LIST_SELECT @page_index, @page_size, @CUS_NO, @total_count output
	SELECT @TOTAL_COUNT;
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2013-09-30		박형만			최초생성
   2013-11-27		이동호			조건절에 최근1달 추가
   2014-06-17		박형만			노출여부 VIEW_YN 컬럼조건 추가     
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[XP_MOB_CUS_SEND_LIST_SELECT]
(
	@PAGE_INDEX  INT,
	@PAGE_SIZE  INT,
	@CUS_NO INT,
	@TOTAL_COUNT INT OUTPUT
)
AS  
BEGIN

--DECLARE @PAGE_INDEX INT,
--@PAGE_SIZE  INT,
--@CUS_NO	INT ,
--@TOTAL_COUNT INT 
--SELECT @PAGE_INDEX=1,@PAGE_SIZE=10,@CUS_NO=4228549

--회원SMS,EMAIL 가져오기
DECLARE @NOR_TEL1 INT ,@NOR_TEL2 INT , @NOR_TEL3 INT , @EMAIL VARCHAR(50) 
SELECT @NOR_TEL1 = NOR_TEL1,@NOR_TEL2 = NOR_TEL2,@NOR_TEL3 = NOR_TEL3 , @EMAIL = EMAIL 
FROM CUS_MEMBER WITH(NOLOCK) WHERE CUS_NO = @CUS_NO ;

SET @TOTAL_COUNT = 
ISNULL(( SELECT COUNT(*)
	FROM RES_SND_SMS S WITH(NOLOCK)
	WHERE NEW_DATE > CONVERT(DATETIME,DATEADD(M,-1,GETDATE())) --최근1달 
	AND RES_CODE IN ( SELECT RES_CODE FROM RES_MASTER_DAMO WITH(NOLOCK) WHERE CUS_NO = @CUS_NO AND VIEW_YN ='Y'
						UNION ALL SELECT RES_CODE FROM RES_CUSTOMER_DAMO WITH(NOLOCK) WHERE CUS_NO = @CUS_NO AND RES_STATE = 0 AND VIEW_YN ='Y' ) 
	AND RCV_NUMBER1 = @NOR_TEL1
	AND RCV_NUMBER2 = @NOR_TEL2
	AND RCV_NUMBER3 = @NOR_TEL3
	AND SND_RESULT = 1  ) ,0 )
+ISNULL(( SELECT COUNT(*)
	FROM RES_SND_EMAIL S WITH(NOLOCK)
	WHERE NEW_DATE > CONVERT(DATETIME,DATEADD(M,-1,GETDATE())) --최근1달 
	AND RES_CODE IN ( SELECT RES_CODE FROM RES_MASTER_DAMO WITH(NOLOCK) WHERE CUS_NO = @CUS_NO AND VIEW_YN ='Y'
						UNION ALL SELECT RES_CODE FROM RES_CUSTOMER_DAMO WITH(NOLOCK) WHERE CUS_NO = @CUS_NO AND RES_STATE = 0  AND VIEW_YN ='Y' ) 
	AND RCV_EMAIL = @EMAIL ) , 0 ) 
;

--알림갯수 회원이 예약자인 발송내역
SELECT * FROM 
(
	SELECT		
		'S' SND_DIV ,S.SND_NO,S.SND_TYPE, S.BODY AS TITLE , S.RCV_NAME,
		S.NEW_CODE, S.NEW_DATE, S.RES_CODE, DBO.XN_COM_GET_EMP_NAME(S.NEW_CODE) AS NEW_NAME
	FROM RES_SND_SMS S WITH(NOLOCK)
	WHERE NEW_DATE > CONVERT(DATETIME,DATEADD(M,-1,GETDATE())) --최근1달  
	AND RES_CODE IN ( SELECT RES_CODE FROM RES_MASTER_DAMO WITH(NOLOCK) WHERE CUS_NO = @CUS_NO AND VIEW_YN ='Y'
						UNION ALL SELECT RES_CODE FROM RES_CUSTOMER_DAMO WITH(NOLOCK) WHERE CUS_NO = @CUS_NO AND RES_STATE = 0 AND VIEW_YN ='Y' ) 
	AND RCV_NUMBER1 = @NOR_TEL1
	AND RCV_NUMBER2 = @NOR_TEL2
	AND RCV_NUMBER3 = @NOR_TEL3
	AND SND_RESULT = 1  --정상발송만 
	UNION ALL 
	SELECT		
		'M' SND_DIV ,S.SND_NO, S.SND_TYPE, S.TITLE , S.RCV_NAME,
		S.NEW_CODE, S.NEW_DATE,S.RES_CODE, DBO.XN_COM_GET_EMP_NAME(S.NEW_CODE) AS NEW_NAME
	FROM RES_SND_EMAIL S WITH(NOLOCK)
	WHERE NEW_DATE > CONVERT(DATETIME,DATEADD(M,-1,GETDATE())) --최근1달  
	AND RES_CODE IN ( SELECT RES_CODE FROM RES_MASTER_DAMO WITH(NOLOCK) WHERE CUS_NO = @CUS_NO AND VIEW_YN ='Y' 
						UNION ALL SELECT RES_CODE FROM RES_CUSTOMER_DAMO WITH(NOLOCK) WHERE CUS_NO = @CUS_NO AND RES_STATE = 0 AND VIEW_YN ='Y' ) 
	AND RCV_EMAIL = @EMAIL
)TBL 
ORDER BY NEW_DATE DESC 
OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
		ROWS ONLY


END 

GO
