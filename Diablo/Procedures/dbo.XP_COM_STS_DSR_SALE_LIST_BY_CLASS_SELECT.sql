USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: XP_COM_STS_DSR_SALE_LIST_BY_CLASS_SELECT
■ DESCRIPTION				: BTMS DSR CLASS별 판매현황 리스트 검색
■ INPUT PARAMETER			: 
	@START_DATE		DATE	: 발권일 시작점
	@END_DATE		DATE	: 발권일 종료점
■ OUTPUT PARAMETER			: 
■ EXEC						: 
   DBO.XP_COM_STS_DSR_SALE_LIST_BY_CLASS_SELECT  '2015-07-01', '2015-09-06', '', '', '', '', 'I'
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ Change History                   
------------------------------------------------------------------------------------------------------------------
   Date				Author			Description           
------------------------------------------------------------------------------------------------------------------   
	2016-06-13		이유라			최초생성
	2016-09-29		이유라			발권일 외 출발일 조회 추가 (@DATE_TYPE 추가로 구분)
	2016-10-12		이유라		    티켓 조건 수정 (컨정션티켓, 보이드티켓도 나오도록 조건절 삭제)
	2016-10-19		이유라			발권수수료 항목추가
================================================================================================================*/ 
CREATE PROC [dbo].[XP_COM_STS_DSR_SALE_LIST_BY_CLASS_SELECT]
(
	@START_DATE VARCHAR(10),		
	@END_DATE  VARCHAR(10),
	@AGT_CODE		VARCHAR(10),
	@TEAM_SEQ		INT,
	@EMP_SEQ		INT,
	@ROUTE_TYPE		VARCHAR(1),
	@DATE_TYPE		VARCHAR(1)
)
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(1000), @WHERE NVARCHAR(MAX) = '';
   
	-- 검색 조건 만들기
	IF LEN(@AGT_CODE) > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND D.AGT_CODE = @AGT_CODE'
	END
	IF @EMP_SEQ > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND E.NEW_SEQ = @EMP_SEQ'
	END
	ELSE IF @TEAM_SEQ > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND F.TEAM_SEQ = @TEAM_SEQ'
	END

	IF @ROUTE_TYPE = 'I'
	BEGIN 
		SET @WHERE = @WHERE + ' AND A.CITY_CODE NOT IN (SELECT CITY_CODE FROM PUB_CITY WHERE NATION_CODE = ''KR'') '
	END
	ELSE IF @ROUTE_TYPE = 'D'
	BEGIN 
		SET @WHERE = @WHERE + ' AND A.CITY_CODE IN (SELECT CITY_CODE FROM PUB_CITY WHERE NATION_CODE = ''KR'') '
	END

	IF @START_DATE IS NOT NULL AND @END_DATE IS NOT NULL
	BEGIN 
		IF @DATE_TYPE = 'I'
		BEGIN
			SET @WHERE = @WHERE + ' AND A.ISSUE_DATE >= @START_DATE AND A.ISSUE_DATE < DATEADD(DAY, 1, CONVERT(DATETIME, @END_DATE, 121)) '	
		END
		IF @DATE_TYPE = 'S'
		BEGIN
			SET @WHERE = @WHERE + ' AND A.START_DATE >= @START_DATE AND A.START_DATE < DATEADD(DAY, 1, CONVERT(DATETIME, @END_DATE, 121)) '			
		END
	END

	IF LEN(@WHERE) > 10
	BEGIN
		SELECT @WHERE = (N'WHERE ' + SUBSTRING(@WHERE, 5, 1000))
	END

	SET @SQLSTRING = N'

		DECLARE @TOTAL_TICKET1 INT, @TOTAL_PRICE1 DECIMAL, @TOTAL_TICKET2 INT, @TOTAL_PRICE2 DECIMAL, @TOTAL_TICKET3 INT, @TOTAL_PRICE3 DECIMAL, @TOTAL_TICKET4 INT, @TOTAL_PRICE4 DECIMAL;

		WITH LIST AS (
			SELECT 
				(SELECT COUNT(*) FROM RES_AIR_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.FARE_SEAT_TYPE = ''4'') AS TICKET_COUNT1,
				(SELECT COUNT(*) FROM RES_AIR_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.FARE_SEAT_TYPE = ''3'') AS TICKET_COUNT2,
				(SELECT COUNT(*) FROM RES_AIR_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.FARE_SEAT_TYPE = ''1'') AS TICKET_COUNT3,
				(SELECT COUNT(*) FROM RES_AIR_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE ) AS TICKET_COUNT4,
				(SELECT ISNULL(A.NET_PRICE,0) + ISNULL(A.TAX_PRICE,0) FROM RES_AIR_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.FARE_SEAT_TYPE = ''4'') AS TICKET_PRICE1,
				(SELECT ISNULL(A.NET_PRICE,0) + ISNULL(A.TAX_PRICE,0) FROM RES_AIR_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.FARE_SEAT_TYPE = ''3'') AS TICKET_PRICE2,
				(SELECT ISNULL(A.NET_PRICE,0) + ISNULL(A.TAX_PRICE,0) FROM RES_AIR_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.FARE_SEAT_TYPE = ''1'') AS TICKET_PRICE3,
				(SELECT ISNULL(A.NET_PRICE,0) + ISNULL(A.TAX_PRICE,0) FROM RES_AIR_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE ) AS TICKET_PRICE4,
				ROW_NUMBER() OVER (PARTITION BY A.RES_CODE, A.RES_SEQ_NO ORDER BY A.START_DATE) AS [ROWNUMBER],
				ISNULL(G.CHG_PRICE,0) AS CHG_PRICE
			FROM DSR_TICKET A WITH(NOLOCK) 
			JOIN RES_MASTER_damo B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE AND B.PROVIDER = ''33''
			JOIN RES_AIR_DETAIL C WITH(NOLOCK) ON A.RES_CODE = C.RES_CODE 
			JOIN COM_BIZTRIP_DETAIL D WITH(NOLOCK) ON B.RES_CODE = D.RES_CODE
			JOIN COM_BIZTRIP_MASTER E WITH(NOLOCK) ON D.AGT_CODE = E.AGT_CODE AND D.BT_CODE = E.BT_CODE
			LEFT JOIN COM_EMPLOYEE F WITH(NOLOCK) ON E.AGT_CODE = F.AGT_CODE AND E.NEW_SEQ = F.EMP_SEQ
			JOIN RES_CUSTOMER_damo G WITH(NOLOCK) ON A.RES_CODE = G.RES_CODE AND A.RES_SEQ_NO = G.SEQ_NO
			' + @WHERE + N'
		)
		SELECT 
			@TOTAL_TICKET1 = (CASE WHEN ISNULL(SUM(A.TICKET_COUNT1),0) = 0 THEN 1 ELSE ISNULL(SUM(A.TICKET_COUNT1),0) END),
			@TOTAL_TICKET2 = (CASE WHEN ISNULL(SUM(A.TICKET_COUNT2),0) = 0 THEN 1 ELSE ISNULL(SUM(A.TICKET_COUNT2),0) END),
			@TOTAL_TICKET3 = (CASE WHEN ISNULL(SUM(A.TICKET_COUNT3),0) = 0 THEN 1 ELSE ISNULL(SUM(A.TICKET_COUNT3),0) END),
			@TOTAL_TICKET4 = (CASE WHEN ISNULL(SUM(A.TICKET_COUNT4),0) = 0 THEN 1 ELSE ISNULL(SUM(A.TICKET_COUNT4),0) END),
			@TOTAL_PRICE1 = (CASE WHEN ISNULL(SUM(A.TICKET_PRICE1),0) + SUM(CASE WHEN A.ROWNUMBER = 1 THEN A.CHG_PRICE ELSE 0 END)= 0 THEN 1 ELSE ISNULL(SUM(A.TICKET_PRICE1),0) + SUM(CASE WHEN A.ROWNUMBER = 1 THEN A.CHG_PRICE ELSE 0 END) END), 
			@TOTAL_PRICE2 = (CASE WHEN ISNULL(SUM(A.TICKET_PRICE2),0) + SUM(CASE WHEN A.ROWNUMBER = 1 THEN A.CHG_PRICE ELSE 0 END)= 0 THEN 1 ELSE ISNULL(SUM(A.TICKET_PRICE2),0) + SUM(CASE WHEN A.ROWNUMBER = 1 THEN A.CHG_PRICE ELSE 0 END) END), 
			@TOTAL_PRICE3 = (CASE WHEN ISNULL(SUM(A.TICKET_PRICE3),0) + SUM(CASE WHEN A.ROWNUMBER = 1 THEN A.CHG_PRICE ELSE 0 END)= 0 THEN 1 ELSE ISNULL(SUM(A.TICKET_PRICE3),0) + SUM(CASE WHEN A.ROWNUMBER = 1 THEN A.CHG_PRICE ELSE 0 END) END), 
			@TOTAL_PRICE4 = (CASE WHEN ISNULL(SUM(A.TICKET_PRICE4),0) + SUM(CASE WHEN A.ROWNUMBER = 1 THEN A.CHG_PRICE ELSE 0 END)= 0 THEN 1 ELSE ISNULL(SUM(A.TICKET_PRICE4),0) + SUM(CASE WHEN A.ROWNUMBER = 1 THEN A.CHG_PRICE ELSE 0 END) END)
		FROM LIST A 
		;
		
		WITH LIST AS (
			SELECT 
				A.ISSUE_DATE,
				A.TICKET,
				C.FARE_SEAT_TYPE,
				ISNULL(A.NET_PRICE,0) AS NET_PRICE,
				ISNULL(A.TAX_PRICE,0) AS TAX_PRICE,
				ROW_NUMBER() OVER (PARTITION BY A.RES_CODE, A.RES_SEQ_NO ORDER BY A.START_DATE) AS [ROWNUMBER],
				ISNULL(G.CHG_PRICE,0) AS CHG_PRICE
			FROM DSR_TICKET A WITH(NOLOCK) 
			JOIN RES_MASTER_damo B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE AND B.PROVIDER = ''33''
			JOIN RES_AIR_DETAIL C WITH(NOLOCK) ON A.RES_CODE = C.RES_CODE 
			JOIN COM_BIZTRIP_DETAIL D WITH(NOLOCK) ON B.RES_CODE = D.RES_CODE
			JOIN COM_BIZTRIP_MASTER E WITH(NOLOCK) ON D.AGT_CODE = E.AGT_CODE AND D.BT_CODE = E.BT_CODE
			LEFT JOIN COM_EMPLOYEE F WITH(NOLOCK) ON E.AGT_CODE = F.AGT_CODE AND E.NEW_SEQ = F.EMP_SEQ
			JOIN RES_CUSTOMER_damo G WITH(NOLOCK) ON A.RES_CODE = G.RES_CODE AND A.RES_SEQ_NO = G.SEQ_NO
			' + @WHERE + N'
		)
		SELECT
			CONVERT(VARCHAR(7),A.ISSUE_DATE,121) AS MONTH_DATE,
			--일등석
			SUM(CASE WHEN A.FARE_SEAT_TYPE = 4 THEN 1 ELSE 0 END) AS TICKET_COUNT_1,
			CONVERT(FLOAT,SUM(CASE WHEN A.FARE_SEAT_TYPE = 4 THEN 1 ELSE 0 END)) / CONVERT(FLOAT,@TOTAL_TICKET1) * 100 AS TICKET_SHARE_1,
			SUM(CASE WHEN A.FARE_SEAT_TYPE = 4 THEN A.NET_PRICE + A.TAX_PRICE ELSE 0 END) + SUM(CASE WHEN A.ROWNUMBER = 1 AND A.FARE_SEAT_TYPE = 4 THEN A.CHG_PRICE ELSE 0 END) AS PRICE_1,
			CONVERT(FLOAT,SUM(CASE WHEN A.FARE_SEAT_TYPE = 4 THEN A.NET_PRICE + A.TAX_PRICE ELSE 0 END) + SUM(CASE WHEN A.ROWNUMBER = 1 AND A.FARE_SEAT_TYPE = 4 THEN A.CHG_PRICE ELSE 0 END)) / CONVERT(FLOAT,@TOTAL_PRICE1) * 100 AS PRICE_SHARE_1,
			--비즈니스석
			SUM(CASE WHEN A.FARE_SEAT_TYPE = 3 THEN 1 ELSE 0 END) AS TICKET_COUNT_2,
			CONVERT(FLOAT,SUM(CASE WHEN A.FARE_SEAT_TYPE = 3 THEN 1 ELSE 0 END)) / CONVERT(FLOAT,@TOTAL_TICKET2) * 100 AS TICKET_SHARE_2,
			SUM(CASE WHEN A.FARE_SEAT_TYPE = 3 THEN A.NET_PRICE + A.TAX_PRICE ELSE 0 END) + SUM(CASE WHEN A.ROWNUMBER = 2 AND A.FARE_SEAT_TYPE = 3 THEN A.CHG_PRICE ELSE 0 END) AS PRICE_2,
			CONVERT(FLOAT,SUM(CASE WHEN A.FARE_SEAT_TYPE = 3 THEN A.NET_PRICE + A.TAX_PRICE ELSE 0 END) + SUM(CASE WHEN A.ROWNUMBER = 1 AND A.FARE_SEAT_TYPE = 3 THEN A.CHG_PRICE ELSE 0 END)) / CONVERT(FLOAT,@TOTAL_PRICE2) * 100 AS PRICE_SHARE_2,
			--일반석
			SUM(CASE WHEN A.FARE_SEAT_TYPE = 1 THEN 1 ELSE 0 END) AS TICKET_COUNT_3,
			CONVERT(FLOAT,SUM(CASE WHEN A.FARE_SEAT_TYPE = 1 THEN 1 ELSE 0 END)) / CONVERT(FLOAT,@TOTAL_TICKET3) * 100 AS TICKET_SHARE_3,
			SUM(CASE WHEN A.FARE_SEAT_TYPE = 1 THEN A.NET_PRICE + A.TAX_PRICE ELSE 0 END) + SUM(CASE WHEN A.ROWNUMBER = 1 AND A.FARE_SEAT_TYPE = 1 THEN A.CHG_PRICE ELSE 0 END) AS PRICE_3,
			CONVERT(FLOAT,SUM(CASE WHEN A.FARE_SEAT_TYPE = 1 THEN A.NET_PRICE + A.TAX_PRICE ELSE 0 END) + SUM(CASE WHEN A.ROWNUMBER = 1 AND A.FARE_SEAT_TYPE = 1 THEN A.CHG_PRICE ELSE 0 END)) / CONVERT(FLOAT,@TOTAL_PRICE3) * 100 AS PRICE_SHARE_3,
			--전체
			COUNT(A.TICKET) AS TICKET_COUNT_4,
			CONVERT(FLOAT,COUNT(A.TICKET)) / CONVERT(FLOAT,@TOTAL_TICKET4) * 100 AS TICKET_SHARE_4,
			SUM(A.NET_PRICE + A.TAX_PRICE) + SUM(CASE WHEN A.ROWNUMBER = 1 THEN A.CHG_PRICE ELSE 0 END) AS PRICE_4,
			CONVERT(FLOAT,SUM(A.NET_PRICE + A.TAX_PRICE) + SUM(CASE WHEN A.ROWNUMBER = 1 THEN A.CHG_PRICE ELSE 0 END)) / CONVERT(FLOAT,@TOTAL_PRICE4) * 100 AS PRICE_SHARE_4			
		FROM LIST A WITH(NOLOCK)
		GROUP BY CONVERT(VARCHAR(7),A.ISSUE_DATE,121) 
		ORDER BY MONTH_DATE DESC; '

	SET @PARMDEFINITION = N'	
		@AGT_CODE			VARCHAR(10),
		@START_DATE			DATE,
		@END_DATE			DATE,
		@TEAM_SEQ			INT,
		@EMP_SEQ			INT,
		@ROUTE_TYPE			VARCHAR(1)';

	PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, 		
		@AGT_CODE,
		@START_DATE,
		@END_DATE,
		@TEAM_SEQ,
		@EMP_SEQ,
		@ROUTE_TYPE;
END

GO
