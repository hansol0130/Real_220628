USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		이규식
-- Create date: 2010-9-25
-- Description:	
-- 기존 SP_SET_GET_RES_COMPLETE_LIST_4 함수에서는 예약이 없고 지상비만 있는 경우는 걸러주지 못하기 문에
-- 새로이 함수를 만들어서 지상비만 입력된 정산을 찾을수 있는 함수를 추가개발
-- 지상비의 경우 행사담당자나 행사담당팀에서만 해당 비용이 반영되도록 함
-- =============================================
CREATE PROCEDURE [dbo].[SP_SET_GET_RES_COMPLETE_LIST_4_ETC_PRICE_TEST]
(
@DATE_TYPE	INT,
@EMP_TYPE	INT,
@START_DATE	DATETIME,
@END_DATE	DATETIME,
@REGION	CHAR(1),
@NATION_CODE	VARCHAR(30),
@CITY_CODE	VARCHAR(30),
@ATTRIBUTE	CHAR(1),
@TEAM_CODE	 VARCHAR(3),
@EMP_CODE	VARCHAR(7),
@GROUP	INT,
@ORDER	INT
)
AS
BEGIN
SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
DECLARE @SQLSTRING NVARCHAR(MAX)
DECLARE @PARMDEFINITION NVARCHAR(1000)
DECLARE @PRO_CODE VARCHAR(20)
DECLARE @MASTER_CODE VARCHAR(20)
DECLARE @RES_CODE VARCHAR(20)
DECLARE @DEP_DATE DATETIME
DECLARE @REGION_NAME	VARCHAR(20)
DECLARE @BASE_TEAM_CODE CHAR(3)


SET @SQLSTRING = ''

-- DATE_TYPE(0 출발일, 1 - 도착일)
IF (@DATE_TYPE = 1) 
BEGIN
SET @SQLSTRING =  @SQLSTRING + ' AND A.ARR_DATE >= @START_DATE AND A.ARR_DATE < @END_DATE + 1 ' 
END
ELSE
BEGIN
SET @SQLSTRING =  @SQLSTRING + ' AND A.DEP_DATE >= @START_DATE AND A.DEP_DATE < @END_DATE + 1 ' 
END
-- 속성코드
IF (ISNULL(@ATTRIBUTE, '') <> '')
BEGIN
SET @SQLSTRING =  @SQLSTRING + ' AND E.ATT_CODE = @ATTRIBUTE ' 
END

-- 지역코드
IF (ISNULL(@REGION, '') <> '')
BEGIN
SET @SQLSTRING =  @SQLSTRING + ' AND E.SIGN_CODE = @REGION ' 
END

-- 국가코드
IF (ISNULL(@NATION_CODE, '') <> '')
BEGIN
SELECT @NATION_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@NATION_CODE, ',') FOR XML PATH('')), 1, 1, '')  

SET @SQLSTRING = @SQLSTRING + ' AND EXISTS (SELECT TOP 1 1 FROM PKG_DETAIL_SCH_CITY Z WHERE Z.PRO_CODE = A.PRO_CODE AND Z.CITY_CODE IN ( SELECT CITY_CODE FROM PUB_CITY WHERE NATION_CODE IN (' + @NATION_CODE + ')))'
END

-- 도시코드
IF (ISNULL(@CITY_CODE, '') <> '')
BEGIN
SELECT @CITY_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@CITY_CODE, ',') FOR XML PATH('')), 1, 1, '')  

SET @SQLSTRING = @SQLSTRING + ' AND EXISTS (SELECT TOP 1 1 FROM PKG_DETAIL_SCH_CITY Z WHERE Z.PRO_CODE = A.PRO_CODE AND CITY_CODE IN (' + @CITY_CODE + '))' 
END


-- 사원코드
IF (ISNULL(@EMP_CODE, '') <> '')
BEGIN
SET @SQLSTRING =  @SQLSTRING + ' AND (B.NEW_CODE = @EMP_CODE) '

END
-- 팀코드
ELSE IF (ISNULL(@TEAM_CODE, '') <> '')
BEGIN
	SET @SQLSTRING =  @SQLSTRING + ' AND (D.TEAM_CODE = @TEAM_CODE) '
END

SET @SQLSTRING = @SQLSTRING + ' AND DBO.FN_SET_GET_PRO_COUNT(A.PRO_CODE) = 0 AND ' + 
	' EXISTS (SELECT * FROM SET_LAND_AGENT Z WHERE Z.PRO_CODE = A.PRO_CODE AND DOC_YN = ''Y'' )' 

SET @SQLSTRING = N'SELECT 
	A.PRO_CODE,
	A.DEP_DATE,
	(CASE WHEN A.PROFIT_TYPE = ''2'' THEN 0 ELSE A.RES_COUNT END ) RES_COUNT,
	CONVERT(MONEY,A.RES_COUNT * A.PROFIT * A.PROFIT_RATE * 0.01)   PROFIT,
	CONVERT(MONEY,A.SALE_PRICE)   SALE_PRICE,
	A.PROFIT_TEAM_NAME  AS PROFIT_TEAM_NAME,
	(SELECT KOR_NAME FROM EMP_MASTER WHERE EMP_CODE = PROFIT_EMP_CODE) AS EMP_NAME
FROM ( SELECT 
				PRO_CODE,
				RES_CODE,
				PROFIT_TYPE,
				RES_COUNT,
				SALE_PRICE,
				PROFIT_RATE, 
				PROFIT_EMP_CODE,
				PROFIT_TEAM_CODE,
				PROFIT_TEAM_NAME,
				DEP_DATE,
				CONVERT(INT,DBO.FN_SET_GET_PRO_PERSON_PROFIT(A.PRO_CODE)) PROFIT
				FROM 
				(       
									-- PROFIT_TYPE_3
									SELECT
											''2'' AS PROFIT_TYPE , 
											1 AS RES_COUNT , 
											0 AS SALE_PRICE , 
											A.PRO_CODE ,  '''' as RES_CODE ,  100 AS PROFIT_RATE , 
											A.NEW_CODE as PROFIT_EMP_CODE, 
											A.PROFIT_TEAM_CODE , 
											A.PROFIT_TEAM_NAME , 
											A.DEP_DATE
									FROM SET_MASTER A
									INNER JOIN PKG_DETAIL B ON B.PRO_CODE = A.PRO_CODE
									INNER JOIN EMP_MASTER D ON D.EMP_CODE = B.NEW_CODE
									INNER JOIN PKG_MASTER E ON E.MASTER_CODE = B.MASTER_CODE
									WHERE 
									1 = 1
									' + @SQLSTRING + '
				)  A
		) A
'


-- 예약은 없고 행사의 지상비만 있는 행사의 정산비용을 구한다.


-- 0 - 행사, 1 - 마스터
IF @GROUP = 0
SET @SQLSTRING = 	N'SELECT
	A.PRO_CODE,
	B.PRO_NAME,
	B.DEP_DATE,
	(SELECT KOR_NAME FROM PUB_REGION Z WHERE Z.SIGN = C.SIGN_CODE) AS REGION_NAME,
	SUM(A.RES_COUNT) AS RES_COUNT,
	SUM(A.PROFIT) AS PROFIT,
	SUM(A.SALE_PRICE) AS SALE_PRICE,
	A.PROFIT_TEAM_NAME,
	EMP_NAME
FROM (' + @SQLSTRING + N') A
INNER JOIN PKG_DETAIL B ON B.PRO_CODE = A.PRO_CODE
INNER JOIN PKG_MASTER C ON C.MASTER_CODE = B.MASTER_CODE
GROUP BY A.PRO_CODE, B.PRO_NAME, B.DEP_DATE, C.SIGN_CODE, A.PROFIT_TEAM_NAME, A.EMP_NAME
ORDER BY 
CASE WHEN @ORDER = 0 THEN C.SIGN_CODE ELSE A.PROFIT_TEAM_NAME END , B.DEP_DATE, A.PRO_CODE '
ELSE
SET @SQLSTRING = 	N'SELECT
	C.MASTER_CODE AS PRO_CODE,
	C.MASTER_NAME AS PRO_NAME,
	NULL AS DEP_DATE,
	(SELECT KOR_NAME FROM PUB_REGION Z WHERE Z.SIGN = C.SIGN_CODE) AS REGION_NAME,
	SUM(A.RES_COUNT) AS RES_COUNT,
	SUM(A.PROFIT) AS PROFIT,
	SUM(A.SALE_PRICE) AS SALE_PRICE,
	A.PROFIT_TEAM_NAME,
	EMP_NAME
FROM (' + @SQLSTRING + N') A
INNER JOIN PKG_DETAIL B ON B.PRO_CODE = A.PRO_CODE
INNER JOIN PKG_MASTER C ON C.MASTER_CODE = B.MASTER_CODE
GROUP BY C.MASTER_CODE, C.MASTER_NAME, C.SIGN_CODE, A.PROFIT_TEAM_NAME, A.EMP_NAME
ORDER BY 
CASE WHEN @ORDER = 0 THEN C.SIGN_CODE ELSE A.PROFIT_TEAM_NAME END , C.MASTER_CODE'


SET @PARMDEFINITION = N'@DATE_TYPE	INT,	@EMP_TYPE	INT,	@START_DATE	DATETIME,	@END_DATE	DATETIME,	@REGION	CHAR(1),	@NATION_CODE	VARCHAR(30),	@CITY_CODE	VARCHAR(30),	@ATTRIBUTE	CHAR(1),	@TEAM_CODE	VARCHAR(3),	@EMP_CODE	VARCHAR(7),	@GROUP	INT,	@ORDER	INT';
EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, 	@DATE_TYPE,	@EMP_TYPE,	@START_DATE,	@END_DATE,	@REGION,	@NATION_CODE,	@CITY_CODE,	@ATTRIBUTE,	@TEAM_CODE,	@EMP_CODE,	@GROUP,	@ORDER;


SET NOCOUNT OFF

END
GO
