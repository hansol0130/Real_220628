USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================    
■ USP_Name			: SP_PKG_DETAIL_INSERT_COPY_MONTH
■ Description		: 행사마스터 시즌복사(특정일자별). MASTER->MASTER정보 & 입력된 정보로 LOOP를 돌며 DETAIL 복사
■ Input Parameter   : 
■ Output Parameter	:                      
■ Output Value		:                     
■ Exec				: 
■ Memo				:    
------------------------------------------------------------------------------------------------------------------    
■ Change History
------------------------------------------------------------------------------------------------------------------    
 Date   Author   Description               
------------------------------------------------------------------------------------------------------------------    
2010-04-29	박형만	최초생성      
2010-05-06	박형만	입력부분 오류 수정
2010-05-19	박형만	ARR_DEP_DATE -> ARR_ARR_DATE 로 수정
2011-09-02	박형만	PRO_TYPE 입력 추가(1:패키지)
2013-06-27	김성호	항공코드 중복으로 인해 검색 조건 강화
2014-06-25	김성호	총액표시제에 따른 스키마 수정 반영
2014-07-25	김성호	가이드 유무, 상품옵션 복사 항목 추가
2017-03-03	김성호	PKG_CODE, MASTER_CODE 생성 시 대문자 처리
2019-02-19	김성호	서버 문제시 일시 정지 기능 추가 -> UPDATE COD_PUBLIC SET PUB_VALUE = 'Y' WHERE PUB_TYPE = 'PKG.COPY.CHECK' AND PUB_CODE = '1'
2019-03-15	박형만	네이버 관련 행사 컬럼 추가 
2019-04-07	박형만	좌석복사시 좌석등급추가
2020-03-24	김성호	트리거 예외처리 추가 (트리거에 CONTEXT_INFO() 체크하여 트리거 무시하는 로직 추가 필요)
================================================================================================================*/  
CREATE PROCEDURE [dbo].[SP_PKG_DETAIL_INSERT_COPY_MONTH]
	@PRO_CODE	VARCHAR(20),	-- 기준 상품코드
	@PRO_NAME	PRO_NAME,
	@MASTER_CODE	MASTER_CODE,
	@TRANSFER_TYPE	INT,
	@SEAT_CODE	INT , --선택된 좌석코드(패턴)
	@TOUR_NIGHT	INT,
	@TOUR_DAY	INT,
	@TOUR_JOURNEY NVARCHAR(800),
	@SEAT_STATUS	CHAR(2),
	@FAKE_COUNT	INT,
	@MAX_COUNT	INT,
	@MIN_COUNT	INT,
	@LAST_PAY_DATE	DATETIME,
	@SENDING_YN	CHAR(1),
	@SENDING_DATE	DATETIME,
	@TC_YN	CHAR(1),
	@TC_CODE	VARCHAR(20),
	@TC_NAME	VARCHAR(20),
	@RES_ADD_YN	CHAR(1),
	@RES_EDT_YN	CHAR(1),
	@DEP_CFM_YN	CHAR(1),
	@CONFIRM_YN	CHAR(1),
	@VISA_YN	CHAR(1),
	@PASS_INFO	VARCHAR(200),
	@FIRST_MEET	VARCHAR(200),
	@SALE_TYPE	INT,
	@PRICE_TYPE	INT,
	@AIR_GDS	INT,
	@HOTEL_GDS	INT,
	@AIRLINE	VARCHAR(20),
	@SHOW_YN	CHAR(1),
	@GUIDE_YN	CHAR(1),
	
	@CHK_PRICE_SEQ VARCHAR(1000), -- 선택된 가격. 구분자=','
	@CHK_SCH_SEQ VARCHAR(1000),	-- 선택된 일정. 구분자=','
	
	@DAYS			VARCHAR(1000),	-- 일자들
	@EMP_CODE		CHAR(7)			-- 생성인코드
AS
BEGIN
	
	-- 트리거 동작 제외
	SET CONTEXT_INFO 0x21884680;	
	
	SET NOCOUNT ON;
	
	DECLARE @BIT_CODE VARCHAR(10), @DIFF_DAY1 INT, @DIFF_DAY2 INT, @DIFF_DAY3 INT
	DECLARE @NEW_PRO_CODE VARCHAR(20), @NEW_SEAT_CODE INT
	DECLARE @CHK_SEAT_CODE INT, @LAST_PAY_INTERVAL INT
	DECLARE @CONTINUE INT, @DAY VARCHAR(10), @STRIKE INT

	-- 결과저장 임시파일
	CREATE TABLE #MSG_TEMP (
		[ERROR_SEQ] INT IDENTITY,	[ERROR_DATE] DATETIME,
		[ERROR_TYPE] INT,			[ERROR_MESSAGE] NVARCHAR(2048))
	

-- 서버 부하 발생 시 동작 일시 중지용
IF ISNULL((SELECT PUB_VALUE FROM COD_PUBLIC A WITH(NOLOCK) WHERE A.PUB_TYPE = 'PKG.COPY.CHECK' AND A.PUB_CODE = '1'), 'Y') = 'Y'
BEGIN
	
	-- 출발일 대비 입금마감일
	SET @LAST_PAY_INTERVAL = -7
	SET @CONTINUE = 1
	
	--항공,선박일때만
	IF @TRANSFER_TYPE IN (1,2)
	BEGIN
		-- 좌석정보
		SELECT
			@DIFF_DAY1 = ISNULL(DATEDIFF(DAY, DEP_DEP_DATE, DEP_ARR_DATE), 0),
			@DIFF_DAY2 = ISNULL(DATEDIFF(DAY, DEP_DEP_DATE, ARR_DEP_DATE), 0),
			@DIFF_DAY3 = ISNULL(DATEDIFF(DAY, DEP_DEP_DATE, ARR_ARR_DATE), 0)
		FROM PRO_TRANS_SEAT WITH(NOLOCK)
		WHERE SEAT_CODE = @SEAT_CODE --IN (SELECT SEAT_CODE FROM PKG_DETAIL WITH(NOLOCK) WHERE PRO_CODE = @PRO_CODE)
	END 
	ELSE
	BEGIN
		SET @DIFF_DAY3 = @TOUR_DAY - 1
	END 
	
	-- 박 수 세팅
	IF @DIFF_DAY3 IS NULL
		SET @DIFF_DAY3 = 0
	
	-- 행사정보
--	SELECT @BIT_CODE = SUBSTRING(PRO_CODE, 14, 10), @NEW_MASTER_CODE = MASTER_CODE
	SET @BIT_CODE = SUBSTRING(@PRO_CODE, (CHARINDEX('-', @PRO_CODE) + 7), 10)

	WHILE @CONTINUE = 1
	BEGIN
		IF CHARINDEX('|', @DAYS) > 0
		BEGIN
			SET @DAY = SUBSTRING(@DAYS, 1, CHARINDEX('|', @DAYS) - 1)

			SET @NEW_SEAT_CODE = 0

			SELECT TOP 1 @NEW_SEAT_CODE = B.SEAT_CODE
			FROM PRO_TRANS_SEAT A WITH(NOLOCK)
			INNER JOIN PRO_TRANS_SEAT B WITH(NOLOCK) ON A.DEP_TRANS_CODE = B.DEP_TRANS_CODE AND A.DEP_TRANS_NUMBER = B.DEP_TRANS_NUMBER
				AND A.DEP_DEP_AIRPORT_CODE = B.DEP_DEP_AIRPORT_CODE AND A.DEP_ARR_AIRPORT_CODE = B.DEP_ARR_AIRPORT_CODE
				AND A.ARR_TRANS_CODE = B.ARR_TRANS_CODE AND A.ARR_TRANS_NUMBER = B.ARR_TRANS_NUMBER
				AND A.ARR_DEP_AIRPORT_CODE = B.ARR_DEP_AIRPORT_CODE AND A.ARR_ARR_AIRPORT_CODE = B.ARR_ARR_AIRPORT_CODE
				AND A.FARE_SEAT_TYPE = B.FARE_SEAT_TYPE -- 2019-04-09 좌석등급 추가 
			WHERE A.SEAT_CODE = @SEAT_CODE
				AND B.DEP_DEP_DATE = @DAY --AND B.ARR_ARR_DATE = DATEADD(DAY, @DIFF_DAY, @DAY)
				AND B.DEP_ARR_DATE = DATEADD(DAY, @DIFF_DAY1, @DAY)
				AND B.ARR_DEP_DATE = DATEADD(DAY, @DIFF_DAY2, @DAY)
				AND B.ARR_ARR_DATE = DATEADD(DAY, @DIFF_DAY3, @DAY)
			
			--항공,선박일때만 찾기
			--IF @TRANSFER_TYPE IN (1,2)
			--BEGIN
			--	SET @NEW_SEAT_CODE = ISNULL ( (SELECT TOP 1 SEAT_CODE FROM PRO_TRANS_SEAT WITH(NOLOCK) 
			--	WHERE DEP_TRANS_CODE = @DEP_TRANS_CODE AND DEP_TRANS_NUMBER = @DEP_TRANS_NUMBER
			--	AND ARR_TRANS_CODE = @ARR_TRANS_CODE AND ARR_TRANS_NUMBER = @ARR_TRANS_NUMBER
			--	AND DEP_DEP_DATE = @DAY AND ARR_ARR_DATE = DATEADD(DAY, @DIFF_DAY, @DAY))  , 0 ) 
			--END 
			--ELSE
			--BEGIN
			--	SET @NEW_SEAT_CODE = 0
			--END 
			
			--SELECT @CHK_SEAT_CODE = SEAT_CODE FROM PKG_DETAIL  WITH(NOLOCK) WHERE PRO_CODE = @PRO_CODE
			
			--IF @NEW_SEAT_CODE > 0 --OR @CHK_SEAT_CODE = 0
			BEGIN
				BEGIN TRY
					BEGIN TRAN

					--SET @NEW_PRO_CODE = (@NEW_MASTER_CODE + SUBSTRING(CONVERT(VARCHAR(10), GETDATE(), 112), 3, 10) + @BIT_CODE)
					SET @NEW_PRO_CODE = (@MASTER_CODE + '-' + SUBSTRING(ISNULL(REPLACE(@DAY, '-', ''), ''), 3, 10) + @BIT_CODE)

					IF NOT EXISTS(SELECT 1 FROM PKG_DETAIL  WITH(NOLOCK) WHERE PRO_CODE = @NEW_PRO_CODE)
					BEGIN
						---- 행사 복사 OLD 
						--INSERT INTO PKG_DETAIL (
						--	PRO_CODE, PRO_NAME, MASTER_CODE, TRANSFER_TYPE, SEAT_CODE, DEP_DATE, ARR_DATE
						--	, TOUR_NIGHT, TOUR_DAY, SEAT_STATUS, FAKE_COUNT, MAX_COUNT, MIN_COUNT, LAST_PAY_DATE
						--	, SENDING_YN, SENDING_DATE, TC_YN, TC_CODE, TC_NAME, RES_ADD_YN, RES_EDT_YN, DEP_CFM_YN, CONFIRM_YN, VISA_YN
						--	, PASS_INFO, FIRST_MEET, SALE_TYPE, PRICE_TYPE, AIR_GDS, HOTEL_GDS, AIRLINE, PKG_SUMMARY, PKG_INC_SPECIAL
						--	, PKG_REVIEW, PKG_CONTRACT, PKG_REMARK, RES_REMARK, SHOW_YN, NEW_DATE, NEW_CODE
						--	, TOUR_JOURNEY, PKG_SHOPPING_REMARK, HOTEL_REMARK, OPTION_REMARK, PKG_TOUR_REMARK, PKG_PASSPORT_REMARK)
						--SELECT
						--	@NEW_PRO_CODE, PRO_NAME, MASTER_CODE, TRANSFER_TYPE, @NEW_SEAT_CODE, @START_DATE, DATEADD(DAY, @DIFF_DAY, @START_DATE)
						--	, TOUR_NIGHT, TOUR_DAY, SEAT_STATUS, 0, MAX_COUNT, MIN_COUNT, DATEADD(DAY, @LAST_PAY_INTERVAL, @START_DATE)
						--	, SENDING_YN, NULL, TC_YN, NULL, NULL, 'Y', 'Y', 'N', 'N', VISA_YN
						--	, PASS_INFO, FIRST_MEET, SALE_TYPE, PRICE_TYPE, AIR_GDS, HOTEL_GDS, AIRLINE, PKG_SUMMARY, PKG_INC_SPECIAL
						--	, PKG_REVIEW, PKG_CONTRACT, PKG_REMARK, RES_REMARK, SHOW_YN, GETDATE(), NEW_CODE
						--	, TOUR_JOURNEY, PKG_SHOPPING_REMARK, HOTEL_REMARK, OPTION_REMARK, PKG_TOUR_REMARK, PKG_PASSPORT_REMARK
						--FROM PKG_DETAIL  WITH(NOLOCK) WHERE PRO_CODE = @PRO_CODE
						
						-- 행사 복사 NEW  기존최초 입력 
						INSERT INTO PKG_DETAIL (
							PRO_CODE, PRO_NAME, MASTER_CODE, TRANSFER_TYPE, SEAT_CODE, DEP_DATE, ARR_DATE
							, TOUR_NIGHT, TOUR_DAY, SEAT_STATUS, FAKE_COUNT, MAX_COUNT, MIN_COUNT, LAST_PAY_DATE
							, SENDING_YN, SENDING_DATE, TC_YN, TC_CODE, TC_NAME, RES_ADD_YN, RES_EDT_YN, DEP_CFM_YN, CONFIRM_YN, VISA_YN
							, PASS_INFO, FIRST_MEET, SALE_TYPE, PRICE_TYPE, AIR_GDS, HOTEL_GDS, AIRLINE, PKG_SUMMARY, PKG_INC_SPECIAL
							, PKG_REVIEW, PKG_CONTRACT, PKG_REMARK, RES_REMARK, SHOW_YN, NEW_DATE, NEW_CODE 
							, TOUR_JOURNEY, PKG_SHOPPING_REMARK, HOTEL_REMARK, OPTION_REMARK, PKG_TOUR_REMARK, PKG_PASSPORT_REMARK, PRO_TYPE
							, GUIDE_YN)
						SELECT
							UPPER(@NEW_PRO_CODE), @PRO_NAME, UPPER(@MASTER_CODE), @TRANSFER_TYPE, @NEW_SEAT_CODE, @DAY,  DATEADD(DAY, @DIFF_DAY3, @DAY)
							, @TOUR_NIGHT, @TOUR_DAY, @SEAT_STATUS, @FAKE_COUNT, @MAX_COUNT, @MIN_COUNT, DATEADD(DAY, @LAST_PAY_INTERVAL, @DAY)
							, @SENDING_YN, NULL/*@SENDING_DATE*/, @TC_YN, NULL/*@TC_CODE*/, NULL/*@TC_NAME*/,'Y'/*@RES_ADD_YN*/, 'Y'/*@RES_EDT_YN*/, 'N'/*@DEP_CFM_YN*/, 'N'/*@CONFIRM_YN*/, @VISA_YN
							, @PASS_INFO, @FIRST_MEET, @SALE_TYPE, @PRICE_TYPE, @AIR_GDS, @HOTEL_GDS, @AIRLINE, A.PKG_SUMMARY, A.PKG_INC_SPECIAL
							, A.PKG_REVIEW, A.PKG_CONTRACT, A.PKG_REMARK, A.RES_REMARK, @SHOW_YN ,GETDATE() , @EMP_CODE 
							, @TOUR_JOURNEY , A.PKG_SHOPPING_REMARK , A.HOTEL_REMARK ,A.OPTION_REMARK, A.PKG_TOUR_REMARK , A.PKG_PASSPORT_REMARK, 1 AS PRO_TYPE   --상품타입 패키지
							, @GUIDE_YN
						FROM PKG_MASTER A
						WHERE MASTER_CODE = @MASTER_CODE
	
						-- 파일 복사 NEW
						INSERT INTO PKG_DETAIL_FILE ( PRO_CODE, FILE_CODE, SHOW_ORDER )
						SELECT @NEW_PRO_CODE, A.FILE_CODE, A.SHOW_ORDER
						FROM PKG_FILE_MANAGER A
						WHERE MASTER_CODE = @MASTER_CODE

						-- 옵션정보 복사
						INSERT INTO PKG_DETAIL_OPTION (PRO_CODE, OPT_SEQ, OPT_NAME, OPT_CONTENT, OPT_PRICE, OPT_USETIME, OPT_REPLACE, OPT_PLACE, OPT_COMPANION)
						SELECT @NEW_PRO_CODE, A.OPT_SEQ, A.OPT_NAME, A.OPT_CONTENT, A.OPT_PRICE, A.OPT_USETIME, A.OPT_REPLACE, A.OPT_PLACE, A.OPT_COMPANION
						FROM PKG_MASTER_OPTION A WITH(NOLOCK)
						WHERE A.MASTER_CODE = @MASTER_CODE
						
						-- 상세일정 복사 NEW ( 마스터->디테일로 기본일정 복사SP사용 )
						EXEC SP_PKG_DETAIL_INSERT_NEW_SCHEDULE @NEW_PRO_CODE

						-- 쇼핑정보 복사
						INSERT INTO PKG_DETAIL_SHOPPING (PRO_CODE, SHOP_SEQ, SHOP_NAME, SHOP_PLACE, SHOP_TIME, SHOP_REMARK)
						SELECT @NEW_PRO_CODE, A.SHOP_SEQ, A.SHOP_NAME, A.SHOP_PLACE, A.SHOP_TIME, A.SHOP_REMARK
						FROM PKG_MASTER_SHOPPING A WITH(NOLOCK)
						WHERE A.MASTER_CODE = @MASTER_CODE
					
						-- 셀링포인트 복사 19.03 추가 
						INSERT INTO PKG_DETAIL_SELL_POINT 
						(PRO_CODE,TRAFFIC_POINT,STAY_POINT,TOUR_POINT,EAT_POINT,DISCOUNT_POINT,OTHER_POINT)
						SELECT @NEW_PRO_CODE , TRAFFIC_POINT,STAY_POINT,TOUR_POINT,EAT_POINT,DISCOUNT_POINT,OTHER_POINT
						FROM PKG_MASTER_SELL_POINT  WITH(NOLOCK)
						WHERE MASTER_CODE = @MASTER_CODE

						
						-- 가격정보 복사 NEW (선택된 가격정보를 LOOP 를 돌면서 복사)
						DECLARE @PRICE_SEQ INT
						DECLARE @SCH_SEQ INT
						DECLARE @TMP_CHK_PRICE_SEQ VARCHAR(1000)
						DECLARE @TMP_CHK_SCH_SEQ VARCHAR(1000)
						SET @TMP_CHK_PRICE_SEQ = @CHK_PRICE_SEQ
						SET @TMP_CHK_SCH_SEQ = @CHK_SCH_SEQ 
						
						WHILE CHARINDEX(',',@TMP_CHK_PRICE_SEQ) > 0
						BEGIN 
							DECLARE @P_IDX INT , @S_IDX INT 
							SET @P_IDX= CHARINDEX(',', @TMP_CHK_PRICE_SEQ)
							SET @S_IDX= CHARINDEX(',', @TMP_CHK_SCH_SEQ)
							SET @PRICE_SEQ = CONVERT(INT,SUBSTRING(@TMP_CHK_PRICE_SEQ, 1, @P_IDX-1))
							SET @SCH_SEQ = CONVERT(INT,SUBSTRING(@TMP_CHK_SCH_SEQ, 1, @S_IDX-1))
							SET @TMP_CHK_PRICE_SEQ = SUBSTRING(@TMP_CHK_PRICE_SEQ , @P_IDX+1 ,LEN(@TMP_CHK_PRICE_SEQ)) 
							SET @TMP_CHK_SCH_SEQ = SUBSTRING(@TMP_CHK_SCH_SEQ , @S_IDX+1 ,LEN(@TMP_CHK_SCH_SEQ)) 
							-- 기존 SP 사용 (공동경비 포함)
							EXEC SP_PKG_DETAIL_INSERT_NEW_PRICE_ONE   @MASTER_CODE, @NEW_PRO_CODE, @PRICE_SEQ,@SCH_SEQ
						END

						-- LOG INSERT
						INSERT INTO #MSG_TEMP 
						SELECT @DAY, 1, '복사 성공'
					END
					ELSE IF @PRO_CODE = @NEW_PRO_CODE
					BEGIN
						-- LOG INSERT
						INSERT INTO #MSG_TEMP 
						SELECT @DAY, 1, '기준 코드.'
					END
					ELSE
					BEGIN
						-- LOG INSERT
						INSERT INTO #MSG_TEMP 
						SELECT @DAY, 2, '중복 코드.'
					END

					COMMIT TRAN
				END TRY
				BEGIN CATCH

					ROLLBACK TRAN

					-- LOG INSERT
					INSERT INTO #MSG_TEMP 
					SELECT @DAY, 2, ERROR_MESSAGE()
					
				END CATCH
			END
			--ELSE
			--BEGIN
			--	INSERT INTO #MSG_TEMP 
			--	SELECT @DAY, 2, '좌석정보없음'
			--END

			-- 일자변경
			SET @STRIKE = LEN(@DAY) + 1
			SET @DAYS = LTRIM(RIGHT(@DAYS, LEN(@DAYS) - @STRIKE))
			
		END
		ELSE
		BEGIN
			SET @CONTINUE = 0
		END
	END
	
	-- 트리거 예외처리 후 마스터 업데이트
	EXEC DBO.SP_PKG_MASTER_RESETTING @MASTER_CODE;

END
ELSE
BEGIN
	INSERT INTO #MSG_TEMP 
	SELECT GETDATE(), 2, '일시동작중지(개발팀)'
END

	-- 결과리턴
	SELECT * FROM #MSG_TEMP;
	DROP TABLE #MSG_TEMP;
END


GO
