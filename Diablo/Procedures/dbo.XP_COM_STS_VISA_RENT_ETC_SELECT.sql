USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_COM_STS_VISA_RENT_ETC_SELECT
■ DESCRIPTION				: 비자,렌터카,기타 통계
■ INPUT PARAMETER			: 
	@KEY		VARCHAR(400): 검색 키
■ OUTPUT PARAMETER			: 
■ EXEC						: 

	EXEC DBO.XP_COM_STS_VISA_RENT_ETC_SELECT 'AgentCode=&TeamSeq=&EmpSeq=&StartDate=2016-09-01&EndDate=2016-10-30&SearchType=9&DateType=1&ResState=10'

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2016-06-15	    강태영	        최초생성
   2016-09-08	    이유라			판매금액 -> 입금금액으로 변경
   2016-12-07		이유라			예약기준 -> 출발자기준으로 변경
   2016-12-12		이유라			DateType = 0 : 결제일기준 / 1 : 출발일 기준 검색 추가
   2016-12-23		이유라			결제일 기준 삭제 도착일 기준 추가, 입금금액 주석처리
================================================================================================================*/ 
CREATE PROC [dbo].[XP_COM_STS_VISA_RENT_ETC_SELECT]

@KEY VARCHAR(400)

AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(1000);
	DECLARE @WHERE NVARCHAR(4000);
	DECLARE @GROUP1 NVARCHAR(100), @GROUP2 NVARCHAR(100), @GROUP3 NVARCHAR(100);
	DECLARE @AGT_CODE VARCHAR(10), @TEAM_SEQ INT, @EMP_SEQ INT, @START_DATE VARCHAR(10), @END_DATE VARCHAR(10), @SEARCH_TYPE INT, @DATE_TYPE INT, @RES_STATE INT;

	SELECT
		@AGT_CODE = DBO.FN_PARAM(@KEY, 'AgentCode'),
		@TEAM_SEQ = DBO.FN_PARAM(@KEY, 'TeamSeq'),
		@EMP_SEQ = DBO.FN_PARAM(@KEY, 'EmpSeq'),
		@START_DATE = DBO.FN_PARAM(@KEY, 'StartDate'),
		@END_DATE = DBO.FN_PARAM(@KEY, 'EndDate'),
		@SEARCH_TYPE = DBO.FN_PARAM(@KEY, 'SearchType'),
		@DATE_TYPE = DBO.FN_PARAM(@KEY, 'DateType'),
		@RES_STATE = DBO.FN_PARAM(@KEY, 'ResState')

	SELECT @WHERE = ' AND B.PRO_DETAIL_TYPE = @SEARCH_TYPE '
	
	IF LEN(@AGT_CODE) > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND B.AGT_CODE = @AGT_CODE '
		SET @GROUP1 = 'B.KOR_NAME, B.TEAM_NAME,'
		SET @GROUP2 = 'B.KOR_NAME, B.TEAM_NAME '
	END

	ELSE

	BEGIN
		SET @GROUP1 = 'B.KOR_NAME,'
		SET @GROUP2 = 'B.KOR_NAME '
	END

	IF @TEAM_SEQ > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND D.TEAM_SEQ = @TEAM_SEQ '
	END

	IF @EMP_SEQ > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND C.NEW_SEQ = @EMP_SEQ '
	END

	IF LEN(@START_DATE) > 0 AND LEN(@END_DATE) > 0
	BEGIN
		IF @DATE_TYPE = 1
		BEGIN 
			SET @WHERE = @WHERE + ' AND  CONVERT(DATETIME, A.DEP_DATE, 121) >= CONVERT(DATETIME, @START_DATE , 121) AND CONVERT(DATETIME, A.DEP_DATE, 121) < DATEADD(DAY, 1, CONVERT(DATETIME, @END_DATE, 121)) '
		END
		ELSE IF @DATE_TYPE = 2
		BEGIN
			SET @WHERE = @WHERE + ' AND  CONVERT(DATETIME, A.ARR_DATE, 121) >= CONVERT(DATETIME, @START_DATE , 121) AND CONVERT(DATETIME, A.ARR_DATE, 121) < DATEADD(DAY, 1, CONVERT(DATETIME, @END_DATE, 121)) '
		END
	END

	IF @DATE_TYPE = 1
	BEGIN
		SET @GROUP3 = 'A.DEP_DATE'
	END
	ELSE IF @DATE_TYPE = 2
	BEGIN
		SET @GROUP3 = 'A.ARR_DATE'
	END

	IF @RES_STATE IS NOT NULL AND @RES_STATE <> 10 
	BEGIN
		SET @WHERE = @WHERE + ' AND A.RES_STATE = @RES_STATE'
	END

	SET @SQLSTRING = N'
		WITH LIST AS (
			SELECT DISTINCT
				CONVERT(VARCHAR(7),' + @GROUP3 + N',121) AS MONTH_DATE,
				A.RES_CODE,
				(SELECT COUNT(1) FROM RES_CUSTOMER_damo Z WHERE A.RES_CODE = Z.RES_CODE AND Z.RES_STATE IN (0,3,4) AND B.PRO_DETAIL_TYPE = 4 ) AS CAR_COUNT,
				--(SELECT DBO.FN_RES_GET_PAY_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 4 ))) AS CAR_PAY_PRICE,
				(SELECT DBO.FN_RES_GET_TOTAL_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 4))) AS CAR_SALE_PRICE, 
				(SELECT COUNT(1) FROM RES_CUSTOMER_damo Z WHERE A.RES_CODE = Z.RES_CODE AND Z.RES_STATE IN (0,3,4) AND B.PRO_DETAIL_TYPE = 5 ) AS VISA_COUNT,
				--(SELECT DBO.FN_RES_GET_PAY_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 5 ))) AS VISA_PAY_PRICE,
				(SELECT DBO.FN_RES_GET_TOTAL_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 5))) AS VISA_SALE_PRICE, 
				(SELECT COUNT(1) FROM RES_CUSTOMER_damo Z WHERE A.RES_CODE = Z.RES_CODE AND Z.RES_STATE IN (0,3,4) AND B.PRO_DETAIL_TYPE = 9 ) AS ETC_COUNT,
				--(SELECT DBO.FN_RES_GET_PAY_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 9 ))) AS ETC_PAY_PRICE,
				(SELECT DBO.FN_RES_GET_TOTAL_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 9))) AS ETC_SALE_PRICE, 
				(SELECT COUNT(1) FROM RES_CUSTOMER_damo Z WHERE A.RES_CODE = Z.RES_CODE AND Z.RES_STATE IN (0,3,4) ) AS TOTAL_COUNT,
				--(SELECT DBO.FN_RES_GET_PAY_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE IN (4,5,9)))) AS TOTAL_PAY_PRICE,
				(SELECT DBO.FN_RES_GET_TOTAL_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE IN (4,5,9)))) AS TOTAL_SALE_PRICE
			FROM RES_MASTER_damo A WITH(NOLOCK) 
			JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
			JOIN COM_BIZTRIP_MASTER C WITH(NOLOCK) ON B.AGT_CODE = C.AGT_CODE AND B.BT_CODE = C.BT_CODE
			LEFT JOIN COM_EMPLOYEE D WITH(NOLOCK) ON C.AGT_CODE = D.AGT_CODE AND C.NEW_SEQ = D.EMP_SEQ
			LEFT JOIN AGT_MASTER E WITH(NOLOCK) ON C.AGT_CODE = E.AGT_CODE
			LEFT JOIN COM_TEAM F WITH(NOLOCK) ON F.AGT_CODE = E.AGT_CODE AND F.TEAM_SEQ = D.TEAM_SEQ
			LEFT JOIN PAY_MATCHING G WITH(NOLOCK) ON B.RES_CODE = G.RES_CODE AND G.CXL_YN = ''N''
			WHERE 1 = 1 ' + @WHERE + N'
		) 
		SELECT 
			B.MONTH_DATE, 
			ISNULL(SUM(B.CAR_COUNT),0) AS CAR_COUNT,
			--ISNULL(SUM(B.CAR_PAY_PRICE),0) AS CAR_PAY_PRICE,
			ISNULL(SUM(B.CAR_SALE_PRICE),0) AS CAR_SALE_PRICE,
			ISNULL(SUM(B.VISA_COUNT),0) AS VISA_COUNT,
			--ISNULL(SUM(B.VISA_PAY_PRICE),0) AS VISA_PAY_PRICE,
			ISNULL(SUM(B.VISA_SALE_PRICE),0) AS VISA_SALE_PRICE,
			ISNULL(SUM(B.ETC_COUNT),0) AS ETC_COUNT,
			--ISNULL(SUM(B.ETC_PAY_PRICE),0) AS ETC_PAY_PRICE,
			ISNULL(SUM(B.ETC_SALE_PRICE),0) AS ETC_SALE_PRICE,
			ISNULL(SUM(B.TOTAL_COUNT),0) AS TOTAL_COUNT,
			--ISNULL(SUM(B.TOTAL_PAY_PRICE),0) AS TOTAL_PAY_PRICE,
			ISNULL(SUM(B.TOTAL_SALE_PRICE),0) AS TOTAL_SALE_PRICE
		FROM LIST B
		GROUP BY B.MONTH_DATE
		ORDER BY B.MONTH_DATE DESC
		;'
		
		SET @SQLSTRING = @SQLSTRING + N'
		WITH LIST AS (
			SELECT DISTINCT
				 E.KOR_NAME,  F.TEAM_NAME, A.RES_CODE,
				(SELECT COUNT(1) FROM RES_CUSTOMER_damo Z WHERE A.RES_CODE = Z.RES_CODE AND Z.RES_STATE IN (0,3,4) AND B.PRO_DETAIL_TYPE = 4 ) AS CAR_COUNT,
				--(SELECT DBO.FN_RES_GET_PAY_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 4 ))) AS CAR_PAY_PRICE,
				(SELECT DBO.FN_RES_GET_TOTAL_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 4))) AS CAR_SALE_PRICE, 
				(SELECT COUNT(1) FROM RES_CUSTOMER_damo Z WHERE A.RES_CODE = Z.RES_CODE AND Z.RES_STATE IN (0,3,4) AND B.PRO_DETAIL_TYPE = 5 ) AS VISA_COUNT,
				--(SELECT DBO.FN_RES_GET_PAY_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 5 ))) AS VISA_PAY_PRICE,
				(SELECT DBO.FN_RES_GET_TOTAL_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 5))) AS VISA_SALE_PRICE, 
				(SELECT COUNT(1) FROM RES_CUSTOMER_damo Z WHERE A.RES_CODE = Z.RES_CODE AND Z.RES_STATE IN (0,3,4) AND B.PRO_DETAIL_TYPE = 9 ) AS ETC_COUNT,
				--(SELECT DBO.FN_RES_GET_PAY_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 9 ))) AS ETC_PAY_PRICE,
				(SELECT DBO.FN_RES_GET_TOTAL_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE = 9))) AS ETC_SALE_PRICE, 
				(SELECT COUNT(1) FROM RES_CUSTOMER_damo Z WHERE A.RES_CODE = Z.RES_CODE AND Z.RES_STATE IN (0,3,4)) AS TOTAL_COUNT,
				--(SELECT DBO.FN_RES_GET_PAY_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE IN (4,5,9)))) AS TOTAL_PAY_PRICE,
				(SELECT DBO.FN_RES_GET_TOTAL_PRICE((SELECT Z.RES_CODE FROM COM_BIZTRIP_DETAIL Z WHERE A.RES_CODE = Z.RES_CODE AND Z.PRO_DETAIL_TYPE IN (4,5,9)))) AS TOTAL_SALE_PRICE
			FROM RES_MASTER_damo A WITH(NOLOCK) 
			JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
			JOIN COM_BIZTRIP_MASTER C WITH(NOLOCK) ON B.AGT_CODE = C.AGT_CODE AND B.BT_CODE = C.BT_CODE
			LEFT JOIN COM_EMPLOYEE D WITH(NOLOCK) ON C.AGT_CODE = D.AGT_CODE AND C.NEW_SEQ = D.EMP_SEQ
			LEFT JOIN AGT_MASTER E WITH(NOLOCK) ON C.AGT_CODE = E.AGT_CODE
			LEFT JOIN COM_TEAM F WITH(NOLOCK) ON F.AGT_CODE = E.AGT_CODE AND F.TEAM_SEQ = D.TEAM_SEQ
			LEFT JOIN PAY_MATCHING G WITH(NOLOCK) ON B.RES_CODE = G.RES_CODE AND G.CXL_YN = ''N''
			WHERE 1 = 1 ' + @WHERE + N'
		) 
		SELECT '
			+ @GROUP1 + N'
			ISNULL(SUM(B.CAR_COUNT),0) AS CAR_COUNT,
			--ISNULL(SUM(B.CAR_PAY_PRICE),0) AS CAR_PAY_PRICE,
			ISNULL(SUM(B.CAR_SALE_PRICE),0) AS CAR_SALE_PRICE,
			ISNULL(SUM(B.VISA_COUNT),0) AS VISA_COUNT,
			--ISNULL(SUM(B.VISA_PAY_PRICE),0) AS VISA_PAY_PRICE,
			ISNULL(SUM(B.VISA_SALE_PRICE),0) AS VISA_SALE_PRICE,
			ISNULL(SUM(B.ETC_COUNT),0) AS ETC_COUNT,
			--ISNULL(SUM(B.ETC_PAY_PRICE),0) AS ETC_PAY_PRICE,
			ISNULL(SUM(B.ETC_SALE_PRICE),0) AS ETC_SALE_PRICE,
			ISNULL(SUM(B.TOTAL_COUNT),0) AS TOTAL_COUNT,
			--ISNULL(SUM(B.TOTAL_PAY_PRICE),0) AS TOTAL_PAY_PRICE,
			ISNULL(SUM(B.TOTAL_SALE_PRICE),0) AS TOTAL_SALE_PRICE
		FROM LIST B
		GROUP BY ' + @GROUP2 + N'
		ORDER BY SUM(B.TOTAL_SALE_PRICE) DESC '

	SET @PARMDEFINITION = N'
		@AGT_CODE VARCHAR(10),
		@TEAM_SEQ INT,
		@EMP_SEQ INT,
		@START_DATE VARCHAR(10),
		@END_DATE VARCHAR(10),
		@SEARCH_TYPE INT,
		@DATE_TYPE INT,
		@RES_STATE INT';

	PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@AGT_CODE,
		@TEAM_SEQ,
		@EMP_SEQ,
		@START_DATE,
		@END_DATE,
		@SEARCH_TYPE,
		@DATE_TYPE,
		@RES_STATE
END
GO
