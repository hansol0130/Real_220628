USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: SP_MOV2_RETURN_VISIT_SELECT
■ DESCRIPTION				: 검색_재방문_상품정보
■ INPUT PARAMETER			: @START_DATE, @END_DATE
■ EXEC						: 
    -- exec SP_MOV2_RETURN_VISIT_SELECT '2016-09-23', '2016-10-01'

■ MEMO						: 상품본적없는 재방문자를 위한 상품정보
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			        DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2017-08-19		오준욱(IBSOLUTION)		최초생성
   2017-10-17		김성호					키워드 테이블 및 범위 변경
   2017-11-05		김성호					인덱스 재성성 및 키워드 사용 테이블 변경
   2020-04-07		김성호					동반자별베스트 중복 상품 제거
   2021-01-06		김영민(EHD)				ATT_CODE = 1 온라인(단품)제외
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[SP_MOV2_RETURN_VISIT_SELECT]
	@START_DATE		VARCHAR(10),
	@END_DATE		VARCHAR(10)
AS
BEGIN

---------------------------------------------
--A. 재방문 - 상품없음
--1 인기상품 (예약상품 2개)
---------------------------------------------
	SELECT P1.*, B1.*
			, (SELECT COUNT(*) FROM VR_CONTENT V2 WITH(NOLOCK) INNER JOIN VR_MASTER VM WITH(NOLOCK) ON V2.VR_NO = VM.VR_NO WHERE P1.MASTER_CODE = V2.MASTER_CODE AND VM.VR_TYPE = 1) AS [VR_COUNT]
			, (SELECT COUNT(*) FROM PUB_EVENT_DATA A2 WITH(NOLOCK) INNER JOIN PUB_EVENT B2 WITH(NOLOCK) ON A2.EVT_SEQ = B2.EVT_SEQ WHERE B2.EVT_YN = 'Y' AND A2.SHOW_YN = 'Y' AND B2.SHOW_YN = 'Y' AND A2.MASTER_CODE = P1.MASTER_CODE AND B2.END_DATE >= GETDATE()) AS [EVENT_COUNT]
		FROM (
		SELECT TOP 2 A.MASTER_CODE, COUNT(*) NO FROM RES_MASTER_DAMO A WITH(NOLOCK)
			INNER JOIN PKG_MASTER B WITH(NOLOCK)
				ON A.MASTER_CODE = B.MASTER_CODE
			WHERE A.NEW_DATE >= @START_DATE
				AND A.NEW_DATE <= @END_DATE + ' 23:59:59'
				AND B.SHOW_YN ='Y' 
				AND B.ATT_CODE = 'P'
			GROUP BY A.MASTER_CODE
			ORDER BY NO DESC		
		) A1
		INNER JOIN PKG_MASTER P1 WITH(NOLOCK) 
			ON P1.MASTER_CODE = A1.MASTER_CODE
		LEFT JOIN INF_FILE_MASTER B1 WITH(NOLOCK) 
			ON P1.MAIN_FILE_CODE = B1.FILE_CODE
---------------------------------------------		
--2 동반자별 베스트 5 스와이프
---------------------------------------------
	DECLARE @BASIC_DATE NVARCHAR(20);
	DECLARE @MAX_FAMILY INT;
	DECLARE @MAX_FRIEND INT;
	DECLARE @MAX_COUPLE INT;
	DECLARE @MAX_MEETING INT;
	DECLARE @MAX_ALONE INT;
	
	SELECT TOP 1 @BASIC_DATE = A.NEW_DATE FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
	ORDER BY A.NEW_DATE DESC

	SELECT @MAX_FAMILY = MAX(A.FAMILY_PERCENT), @MAX_FRIEND = MAX(A.FRIEND_PERCENT), @MAX_COUPLE = MAX(A.COUPLE_PERCENT), @MAX_MEETING = MAX(A.MEETING_PERCENT), @MAX_ALONE = MAX(A.ALONE_PERCENT) FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
			INNER JOIN PKG_MASTER B WITH(NOLOCK)
				ON A.MASTER_CODE = B.MASTER_CODE			
		WHERE A.NEW_DATE = @BASIC_DATE
			AND B.SHOW_YN ='Y' AND B.ATT_CODE <> '1'

	SELECT P1.*, B1.*
			, (SELECT COUNT(*) FROM VR_CONTENT V2 WITH(NOLOCK) INNER JOIN VR_MASTER VM WITH(NOLOCK) ON V2.VR_NO = VM.VR_NO WHERE P1.MASTER_CODE = V2.MASTER_CODE AND VM.VR_TYPE = 1) AS [VR_COUNT]
			, (SELECT COUNT(*) FROM PUB_EVENT_DATA A2 WITH(NOLOCK) INNER JOIN PUB_EVENT B2 WITH(NOLOCK) ON A2.EVT_SEQ = B2.EVT_SEQ WHERE B2.EVT_YN = 'Y' AND A2.SHOW_YN = 'Y' AND B2.SHOW_YN = 'Y' AND A2.MASTER_CODE = P1.MASTER_CODE AND B2.END_DATE >= GETDATE()) AS [EVENT_COUNT]
		FROM (
			-- 중복제거
			SELECT A1.MASTER_CODE FROM (
				SELECT TOP 1 * FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
					WHERE A.NEW_DATE = @BASIC_DATE
						AND A.FAMILY_PERCENT = @MAX_FAMILY
			
				UNION ALL
				SELECT TOP 1 * FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
					WHERE A.NEW_DATE = @BASIC_DATE
						AND A.FRIEND_PERCENT = @MAX_FRIEND
	
				UNION ALL
				SELECT TOP 1 * FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
					WHERE A.NEW_DATE = @BASIC_DATE
						AND A.COUPLE_PERCENT = @MAX_COUPLE
		
				UNION ALL
				SELECT TOP 1 * FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
					WHERE A.NEW_DATE = @BASIC_DATE
						AND A.MEETING_PERCENT = @MAX_MEETING
	
				UNION ALL
				SELECT TOP 1 * FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
					WHERE A.NEW_DATE = @BASIC_DATE
						AND A.ALONE_PERCENT = @MAX_ALONE
			) A1
			GROUP BY A1.MASTER_CODE
		) A1
		INNER JOIN PKG_MASTER P1 WITH(NOLOCK) 
			ON P1.MASTER_CODE = A1.MASTER_CODE
		LEFT JOIN INF_FILE_MASTER B1 WITH(NOLOCK) 
			ON P1.MAIN_FILE_CODE = B1.FILE_CODE

/*	동반자 조건 별 중복 마스터 방지 쿼리 2020.04.07 김성호 단순 중복 제거보다 무거움, 
*	동반자 별 마스터 중복 될 일이 없을 경우 사용 사용할 필요 없음

	DECLARE @PREFER_DATA TABLE (
		COMPANION_TYPE INT NOT NULL			-- 1: FAMILY, 2: FRIEND, 3: COUPLE, 4: MEETING, 5: ALONE
		, MASTER_CODE VARCHAR(10) NOT NULL
	)
	
	INSERT INTO @PREFER_DATA (COMPANION_TYPE, MASTER_CODE)
	SELECT TOP 1 1, A.MASTER_CODE
	FROM DBO.PKG_MASTER_PARTNER A WITH(NOLOCK)
	INNER JOIN DBO.PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
	WHERE A.NEW_DATE = (SELECT TOP 1 A.NEW_DATE FROM PKG_MASTER_PARTNER A WITH(NOLOCK) ORDER BY A.NEW_DATE DESC)
		AND A.FAMILY > 0 AND B.LAST_DATE > GETDATE() AND B.SHOW_YN = 'Y'
		AND NOT EXISTS(SELECT 1 FROM @PREFER_DATA RD WHERE B.MASTER_CODE = RD.MASTER_CODE)
	ORDER BY A.FAMILY DESC, A.TOTAL_COUNT DESC;
	
	INSERT INTO @PREFER_DATA (COMPANION_TYPE, MASTER_CODE)
	SELECT TOP 1 2, A.MASTER_CODE
	FROM DBO.PKG_MASTER_PARTNER A WITH(NOLOCK)
	INNER JOIN DBO.PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
	WHERE A.NEW_DATE = (SELECT TOP 1 A.NEW_DATE FROM PKG_MASTER_PARTNER A WITH(NOLOCK) ORDER BY A.NEW_DATE DESC)
		AND A.FRIEND > 0 AND B.LAST_DATE > GETDATE() AND B.SHOW_YN = 'Y'
		AND NOT EXISTS(SELECT 1 FROM @PREFER_DATA RD WHERE B.MASTER_CODE = RD.MASTER_CODE)
	ORDER BY A.FRIEND DESC, A.TOTAL_COUNT DESC;
	
	INSERT INTO @PREFER_DATA (COMPANION_TYPE, MASTER_CODE)
	SELECT TOP 1 3, A.MASTER_CODE
	FROM DBO.PKG_MASTER_PARTNER A WITH(NOLOCK)
	INNER JOIN DBO.PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
	WHERE A.NEW_DATE = (SELECT TOP 1 A.NEW_DATE FROM PKG_MASTER_PARTNER A WITH(NOLOCK) ORDER BY A.NEW_DATE DESC)
		AND A.COUPLE > 0 AND B.LAST_DATE > GETDATE() AND B.SHOW_YN = 'Y'
		AND NOT EXISTS(SELECT 1 FROM @PREFER_DATA RD WHERE B.MASTER_CODE = RD.MASTER_CODE)
	ORDER BY A.COUPLE DESC, A.TOTAL_COUNT DESC;
	
	INSERT INTO @PREFER_DATA (COMPANION_TYPE, MASTER_CODE)
	SELECT TOP 1 4, A.MASTER_CODE
	FROM DBO.PKG_MASTER_PARTNER A WITH(NOLOCK)
	INNER JOIN DBO.PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
	WHERE A.NEW_DATE = (SELECT TOP 1 A.NEW_DATE FROM PKG_MASTER_PARTNER A WITH(NOLOCK) ORDER BY A.NEW_DATE DESC)
		AND A.MEETING > 0 AND B.LAST_DATE > GETDATE() AND B.SHOW_YN = 'Y'
		AND NOT EXISTS(SELECT 1 FROM @PREFER_DATA RD WHERE B.MASTER_CODE = RD.MASTER_CODE)
	ORDER BY A.MEETING DESC, A.TOTAL_COUNT DESC;

	INSERT INTO @PREFER_DATA (COMPANION_TYPE, MASTER_CODE)
	SELECT TOP 1 5, A.MASTER_CODE
	FROM DBO.PKG_MASTER_PARTNER A WITH(NOLOCK)
	INNER JOIN DBO.PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
	WHERE A.NEW_DATE = (SELECT TOP 1 A.NEW_DATE FROM PKG_MASTER_PARTNER A WITH(NOLOCK) ORDER BY A.NEW_DATE DESC)
		AND A.ALONE > 0 AND B.LAST_DATE > GETDATE() AND B.SHOW_YN = 'Y'
		AND NOT EXISTS(SELECT 1 FROM @PREFER_DATA RD WHERE B.MASTER_CODE = RD.MASTER_CODE)
	ORDER BY A.ALONE DESC, A.TOTAL_COUNT DESC;	  
	
	SELECT A1.COMPANION_TYPE, P1.*, B1.*
			, (SELECT COUNT(*) FROM VR_CONTENT V2 WITH(NOLOCK) INNER JOIN VR_MASTER VM WITH(NOLOCK) ON V2.VR_NO = VM.VR_NO WHERE P1.MASTER_CODE = V2.MASTER_CODE AND VM.VR_TYPE = 1) AS [VR_COUNT]
			, (SELECT COUNT(*) FROM PUB_EVENT_DATA A2 WITH(NOLOCK) INNER JOIN PUB_EVENT B2 WITH(NOLOCK) ON A2.EVT_SEQ = B2.EVT_SEQ WHERE B2.EVT_YN = 'Y' AND A2.SHOW_YN = 'Y' AND B2.SHOW_YN = 'Y' AND A2.MASTER_CODE = P1.MASTER_CODE AND B2.END_DATE >= GETDATE()) AS [EVENT_COUNT]
		FROM @PREFER_DATA A1
		INNER JOIN PKG_MASTER P1 WITH(NOLOCK) 
			ON P1.MASTER_CODE = A1.MASTER_CODE
		LEFT JOIN INF_FILE_MASTER B1 WITH(NOLOCK) 
			ON P1.MAIN_FILE_CODE = B1.FILE_CODE
*/
---------------------------------------------		
--3 화제의 키워드 5
---------------------------------------------
	-- 격일로 베스트 상품 등록 하여 사용 (SQL 에이전트)
	SELECT TOP 5 KEYWORD, SEARCH_COUNT AS [NO]
	FROM VGLOG.DBO.KEYWORD_BEST_LOG A WITH(NOLOCK)
	ORDER BY SEARCH_COUNT DESC

	--SELECT TOP 5 KEYWORD, COUNT(*) AS [NO]
	--FROM VGLOG.DBO.KEYWORD_LOG A WITH(NOLOCK)
	--WHERE A.NEW_DATE > DATEADD(MONTH, -3, GETDATE())
	--GROUP BY KEYWORD
	--ORDER BY NO DESC
---------------------------------------------		
--4 이벤트 할인
---------------------------------------------
	SELECT TOP 3 * FROM PUB_EVENT A WITH(NOLOCK)
	WHERE A.EVT_YN = 'Y'
		AND A.END_DATE > GETDATE()
	ORDER BY NEW_DATE DESC	-- BEST_YN DESC
---------------------------------------------	
--5 다른고객이 보고 있는 상품 3
---------------------------------------------
	SELECT P1.*, B1.*
			, (SELECT COUNT(*) FROM VR_CONTENT V2 WITH(NOLOCK) INNER JOIN VR_MASTER VM WITH(NOLOCK) ON V2.VR_NO = VM.VR_NO WHERE P1.MASTER_CODE = V2.MASTER_CODE AND VM.VR_TYPE = 1) AS [VR_COUNT]
			, (SELECT COUNT(*) FROM PUB_EVENT_DATA A2 WITH(NOLOCK) INNER JOIN PUB_EVENT B2 WITH(NOLOCK) ON A2.EVT_SEQ = B2.EVT_SEQ WHERE B2.EVT_YN = 'Y' AND A2.SHOW_YN = 'Y' AND B2.SHOW_YN = 'Y' AND A2.MASTER_CODE = P1.MASTER_CODE AND B2.END_DATE >= GETDATE()) AS [EVENT_COUNT]
		FROM (

		SELECT TOP 5 A.MASTER_CODE, COUNT(*) NO FROM VIEW_MASTER A WITH(NOLOCK)
			INNER JOIN PKG_MASTER B WITH(NOLOCK)
				ON A.MASTER_CODE = B.MASTER_CODE	
			WHERE B.SHOW_YN ='Y' AND ATT_CODE <> '1'
			GROUP BY A.MASTER_CODE
			ORDER BY NO DESC		
			
		) A1
		INNER JOIN PKG_MASTER P1 WITH(NOLOCK) 
			ON P1.MASTER_CODE = A1.MASTER_CODE
		LEFT JOIN INF_FILE_MASTER B1 WITH(NOLOCK) 
			ON P1.MAIN_FILE_CODE = B1.FILE_CODE			

END           



GO
