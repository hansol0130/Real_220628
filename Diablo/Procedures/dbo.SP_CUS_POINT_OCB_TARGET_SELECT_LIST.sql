USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* ==========================================================================================
-- DESCRIPTION:	<포인트 적립된 사람중에 OCB 전환 안된 내역 조회 OKCashBagSavePoint.exe >
--		도착 7일째 포인트가 있는 예약출발자 조회 
-- CREATE DATE: <2010-05-13>
-- AUTHOR:		<박형만>
SP_CUS_POINT_OCB_TARGET_SELECT_LIST '2017-06-21'

-- 수정내역 

-- 2017-06-21 박형만	 OCB 적립이 안되었을때 적립이 안된건만 조회 
-- =========================================================================================*/
CREATE  PROC [dbo].[SP_CUS_POINT_OCB_TARGET_SELECT_LIST]
	@EXE_DATE VARCHAR(10)
AS 
SET NOCOUNT ON 
BEGIN
	--포인트 적립 대상자 조회 old  
	--DECLARE @EXE_DATE VARCHAR(10)
	--SET @EXE_DATE = '2016-09-09'
	/*
	--좌석도착일에 해당하는 포인트 적립 대상 정보
	SELECT RC.CUS_NO,RC.POINT_PRICE,
	RM.RES_CODE,RM.PRO_NAME,CC.CUS_NAME,CC.EMAIL,CC.RCV_EMAIL_YN,
	PTS.ARR_ARR_DATE AS ARR_DATE, ISNULL(CP.POINT_PRICE,0) AS TOTAL_PRICE  --기적립 포인트
	FROM PKG_DETAIL AS PD WITH(NOLOCK)
		INNER JOIN RES_MASTER_damo AS RM WITH(NOLOCK) 
			ON PD.PRO_CODE = RM.PRO_CODE 
		INNER JOIN RES_CUSTOMER_damo AS RC WITH(NOLOCK) 
			ON RM.RES_CODE = RC.RES_CODE 
		INNER JOIN CUS_CUSTOMER_DAMO AS CC WITH(NOLOCK)
			ON RC.CUS_NO = CC.CUS_NO 
			AND CC.CUS_ID IS NOT NULL
		INNER JOIN PRO_TRANS_SEAT AS PTS WITH(NOLOCK) --좌석있음
			ON PD.SEAT_CODE = PTS.SEAT_CODE
		LEFT JOIN CUS_POINT AS CP WITH(NOLOCK)
			ON CP.RES_CODE = RC.RES_CODE 
			AND CP.CUS_NO = RC.CUS_NO 
			AND POINT_TYPE = 1 --적립만 
	WHERE PTS.ARR_ARR_DATE = DATEADD(DD,-7,CONVERT(DATETIME, @EXE_DATE)) --도착후7일
	AND RC.POINT_PRICE > 0
	AND (CP.POINT_PRICE IS NULL OR CP.POINT_PRICE = 0) --중복적립 방지.적립안된것만
	AND POINT_CONSENT ='Y' --포인트 동의
	AND CC.CUS_STATE = 'Y' --정회원 상태Y 인것
	AND ISNULL(RC.DC_PRICE,0) = 0  --DC 적용된 회원은 적립 안함
	AND RM.RES_STATE IN(3,4,5,6) -- 예약상태 결제중,결제완료,출발완료,해피콜 - 2010.07.12 결제중도 적립
	AND RC.RES_STATE IN (0) -- 출발고객상태 예약인것만
	--AND PD.DEP_DATE > CONVERT(DATETIME, '2010-05-31') --6월1일 출발자 부터
	AND PD.DEP_DATE >  DATEADD(M,-1,GETDATE())  -- 
	AND CC.POINT_CONSENT_DATE < DATEADD(DD,7,CONVERT(DATETIME,  PTS.ARR_ARR_DATE ))  -- 포인트 적립 기준일 이전에 동의 했을경우만
	UNION ALL 
	--좌석이 없을경우 상품 도착일에 해당하는 포인트 적립 대상 정보
	*/

	--DECLARE @EXE_DATE VARCHAR(10)
	--SET @EXE_DATE = '2017-06-21'
	DECLARE @START_DATE DATETIME 
	SET @START_DATE = DATEADD(DD,-7,CONVERT(DATETIME, @EXE_DATE))  -- 출발일시
	DECLARE @END_DATE DATETIME 
	SET @END_DATE = DATEADD(S,-1,DATEADD(DD,1,@START_DATE))  --도착일시 

	--SELECT @START_DATE , @END_DATE 
	--포인트 적립 대상자 조회 2016-09-08  , 
	SELECT RC.CUS_NO,/*RC.POINT_PRICE,*/  
		ISNULL(CC.CUS_ID,CMS.CUS_ID) AS CUS_ID ,
		DBO.FN_RES_GET_TOTAL_PRICE_ONE(RC.RES_CODE,RC.SEQ_NO)  AS TOTAL_PRICE ,
		CONVERT(INT,DBO.FN_RES_GET_TOTAL_PRICE_ONE(RC.RES_CODE,RC.SEQ_NO) * 0.01) AS POINT_PRICE ,
		RM.RES_CODE,RM.PRO_NAME,
		CASE WHEN ISNULL(CC.CUS_NAME,'') = '' THEN CMS.CUS_NAME ELSE CC.CUS_NAME END AS CUS_NAME ,
		ISNULL(CC.EMAIL,CMS.EMAIL) AS EMAIL,
		ISNULL(CC.RCV_EMAIL_YN,CMS.RCV_EMAIL_YN) AS RCV_EMAIL_YN,
		PD.ARR_DATE AS ARR_DATE, ISNULL(CP.POINT_PRICE,0) AS SAVE_POINT , --기적립 포인트
		ISNULL(CPOCB.POINT_PRICE,0)  AS OCB_TRANS_POINT,
		--CC.SOC_NUM1 , damo.dbo.dec_varchar('DIABLO', 'dbo.CUS_CUSTOMER', 'SOC_NUM2', CC.sec_SOC_NUM2) AS SOC_NUM2,
		ISNULL(CC.BIRTH_DATE,CMS.BIRTH_DATE) AS BIRTH_DATE,
		ISNULL(CC.GENDER,CMS.GENDER) AS GENDER,
		ISNULL(CC.OCB_AGREE_YN,CMS.OCB_AGREE_YN) AS OCB_AGREE_YN,
		ISNULL(CC.OCB_CARD_NUM,CMS.OCB_CARD_NUM) AS OCB_CARD_NUM,
		ISNULL(CC.IPIN_CONN_INFO,CMS.IPIN_CONN_INFO) AS IPIN_CONN_INFO,
		ISNULL(CC.IPIN_DUP_INFO,CMS.IPIN_DUP_INFO) AS BIRTH_DATE
	FROM PKG_DETAIL AS PD WITH(NOLOCK)
		INNER JOIN RES_MASTER_damo AS RM WITH(NOLOCK) 
			ON PD.PRO_CODE = RM.PRO_CODE 
		INNER JOIN RES_CUSTOMER_damo AS RC WITH(NOLOCK) 
			ON RM.RES_CODE = RC.RES_CODE 
			AND RC.SEQ_NO = ( SELECT TOP 1 SEQ_NO FROM RES_CUSTOMER_damo WITH(NOLOCK) WHERE RES_CODE = RC.RES_CODE AND CUS_NO = RC.CUS_NO  AND RES_STATE = 0 ORDER BY SEQ_NO ) 
			-- 중복 매핑된 고객 있을경우 한명만 
		INNER JOIN CUS_MEMBER AS CC WITH(NOLOCK)
			ON RC.CUS_NO = CC.CUS_NO 
			--AND CC.CUS_ID IS NOT NULL
		LEFT JOIN CUS_MEMBER_SLEEP AS CMS WITH(NOLOCK)
			ON RC.CUS_NO = CMS.CUS_NO 
		--LEFT OUTER JOIN PRO_TRANS_SEAT AS PTS WITH(NOLOCK)
		--	ON PD.SEAT_CODE = PTS.SEAT_CODE
		LEFT JOIN CUS_POINT AS CP WITH(NOLOCK)
			ON CP.RES_CODE = RC.RES_CODE 
			AND CP.CUS_NO = RC.CUS_NO 
			AND CP.POINT_TYPE = 1 --적립만 
			AND CP.ACC_USE_TYPE = 1 --여행상품적립만
		LEFT JOIN CUS_POINT AS CPOCB WITH(NOLOCK)
			ON CPOCB.CUS_NO = RC.CUS_NO 
			AND CPOCB.POINT_TYPE = 2 --사용만 
			AND CPOCB.ACC_USE_TYPE = 7 -- OCB 전환만 
			AND CPOCB.POINT_NO = ( SELECT MAX(POINT_NO) FROM CUS_POINT WHERE CUS_NO = CPOCB.CUS_NO AND POINT_TYPE = 2 AND ACC_USE_TYPE = 7  AND NEW_DATE > RM.DEP_DATE )  

	--WHERE ISNULL(PTS.ARR_ARR_DATE,PD.ARR_DATE)  = DATEADD(DD,-7,CONVERT(DATETIME, @EXE_DATE)) --도착후7일
	--WHERE PD.ARR_DATE = DATEADD(DD,-7,CONVERT(DATETIME, @EXE_DATE)) --도착후7일
	WHERE PD.ARR_DATE BETWEEN @START_DATE AND @END_DATE  --도착후 7일 
	AND PD.DEP_DATE > CONVERT(DATETIME,DATEADD(M,-3,CONVERT(DATETIME,@EXE_DATE)) ) --  실행일 한달전 출발 만
	AND RM.ARR_DATE BETWEEN DATEADD(D,-1,@START_DATE) AND DATEADD(D,1,@END_DATE) --[20160908추가] 예약테이블의 도착일은 +- 1일 오차 있음 
	AND RM.DEP_DATE > CONVERT(DATETIME,DATEADD(M,-3,CONVERT(DATETIME,@EXE_DATE)) ) -- [20160908추가] 실행일 한달전 출발 만
	--AND PTS.ARR_ARR_DATE IS NULL  
	AND RC.POINT_PRICE > 0
	--AND (CP.POINT_PRICE IS NULL OR CP.POINT_PRICE = 0) --중복적립 방지.적립안된것만
	AND (CC.POINT_CONSENT ='Y' OR CMS.POINT_CONSENT ='Y') --포인트 동의
	AND CC.CUS_STATE = 'Y' --정회원 상태Y 인것
	AND (RC.DC_PRICE IS NULL OR RC.DC_PRICE = 0)  --DC 적용된 회원은 적립 안함
	AND RM.RES_STATE IN (3,4,5,6) -- 예약상태 결제중,결제완료,출발완료,해피콜 - 2010.07.12 결제중도 적립
	AND RC.RES_STATE IN (0) -- 출발고객상태 예약인것만
	AND (CC.POINT_CONSENT_DATE <  CONVERT(DATETIME,DATEADD(DD,7,CONVERT(DATETIME,  PD.ARR_DATE )) ) 
		OR CMS.POINT_CONSENT_DATE <  CONVERT(DATETIME,DATEADD(DD,7,CONVERT(DATETIME,  PD.ARR_DATE )) ) )

	AND ISNULL(CC.OCB_AGREE_YN,CMS.OCB_AGREE_YN)  = 'Y'  -- OCB 동의하고 
	AND ISNULL(CP.POINT_PRICE,0) > 0  -- 해당예약 포인트 적립회원 
	AND ISNULL(CPOCB.POINT_PRICE,0)  = 0  -- 포인트 전환이 안된 회원 
	-- 포인트 적립 기준일 이전에 동의 했을경우만 , 휴면회원 CUS_STATE ='Y' CUS_ID = NULL 일경우에 휴면회원 테이블의 동의날짜 가져옴 가정

	--UNION ALL 
	--호텔포인트 사용안함   2014-04-15 
	--SELECT 
	--RM.CUS_NO, CC.CUS_ID , 
	--DBO.FN_RES_HTL_GET_TOTAL_PRICE(RM.RES_CODE ) AS TOTAL_PRICE,RHRM.POINT_PRICE, 
	--RM.RES_CODE,RM.PRO_NAME,CC.CUS_NAME,CC.EMAIL,CC.RCV_EMAIL_YN,
	--PD.ARR_DATE AS ARR_DATE, ISNULL(CP.POINT_PRICE,0) AS SAVE_POINT , --기적립 포인트
	--CC.SOC_NUM1 , damo.dbo.dec_varchar('DIABLO', 'dbo.CUS_CUSTOMER', 'SOC_NUM2', CC.sec_SOC_NUM2) AS SOC_NUM2,
	--CC.OCB_AGREE_YN , CC.OCB_CARD_NUM , 
	--CC.IPIN_CONN_INFO , CC.IPIN_DUP_INFO 
	--FROM PKG_DETAIL AS PD WITH(NOLOCK)
	--INNER JOIN RES_MASTER_damo AS RM WITH(NOLOCK) 
	--		ON PD.PRO_CODE = RM.PRO_CODE 
	--	INNER JOIN RES_HTL_ROOM_MASTER AS RHRM WITH(NOLOCK)  --호텔 룸 마스터 
	--		ON RM.RES_CODE = RHRM.RES_CODE 
	--	INNER JOIN CUS_MEMBER AS CC WITH(NOLOCK)
	--		ON RM.CUS_NO = CC.CUS_NO 
	--		--AND CC.CUS_ID IS NOT NULL
	--	LEFT JOIN CUS_POINT AS CP WITH(NOLOCK)
	--		ON CP.RES_CODE = RM.RES_CODE 
	--		AND CP.CUS_NO = RM.CUS_NO 
	--		AND POINT_TYPE = 1 --적립만 
	----WHERE PD.ARR_DATE = DATEADD(DD,-7,CONVERT(DATETIME, @EXE_DATE)) --체크아웃후 7일
	--WHERE PD.ARR_DATE BETWEEN @START_DATE AND @END_DATE  --도착후 7일 
	--AND RHRM.POINT_PRICE > 0
	--AND (CP.POINT_PRICE IS NULL OR CP.POINT_PRICE = 0) --중복적립 방지.적립안된것만
	--AND POINT_CONSENT ='Y' --포인트 동의
	--AND CC.CUS_STATE = 'Y' --정회원 상태Y 인것
	--AND RM.RES_STATE IN(3,4,5,6) -- 예약상태 결제중,결제완료,출발완료,해피콜 - 2010.07.12 결제중도 적립
	--AND CC.POINT_CONSENT_DATE < CONVERT(DATETIME,DATEADD(DD,7,CONVERT(DATETIME,  PD.ARR_DATE )) )  -- 포인트 적립 기준일 이전에 동의 했을경우만

END 
GO
