USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: SP_APP_ANALISYS_AGE_MASTER
■ DESCRIPTION				: 마스터 행사 대상 구매 연령대 분석하여 PKG_MASTER_AGE 에 입력
■ INPUT PARAMETER			: 시작일자, 종료일자
■ OUTPUT PARAMETER			: 마스터 상품 수
■ EXEC						: 

-- EXEC SP_APP_ANALISYS_AGE_MASTER '2017-05-02', '2017-05-09'

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2017-05-10		오준욱(IBS)		최초생성
   2018-04-02		정지용			커서 제거
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[SP_APP_ANALISYS_AGE_MASTER]
	@START_DATE		VARCHAR(12),
	@END_DATE		VARCHAR(20)
AS
BEGIN

	DECLARE	@NO INTEGER
	DECLARE	@MASTER_CODE VARCHAR(10)
	DECLARE	@TODAY VARCHAR(10)
	SELECT @TODAY = CONVERT(VARCHAR, GETDATE(), 23)
	SELECT @NO = 0

	INSERT INTO PKG_MASTER_AGE
	SELECT A.MASTER_CODE
		, @TODAY
		, COUNT(CASE WHEN A.AGE_NUM < 10 THEN 1 END) AS [초딩]
		, COUNT(CASE WHEN A.AGE_NUM >= 10 AND A.AGE_NUM < 20 THEN 1 END)
		, COUNT(CASE WHEN A.AGE_NUM >= 20 AND A.AGE_NUM < 30 THEN 1 END)
		, COUNT(CASE WHEN A.AGE_NUM >= 30 AND A.AGE_NUM < 40 THEN 1 END)
		, COUNT(CASE WHEN A.AGE_NUM >= 40 AND A.AGE_NUM < 50 THEN 1 END)
		, COUNT(CASE WHEN A.AGE_NUM >= 50 AND A.AGE_NUM < 60 THEN 1 END)
		, COUNT(CASE WHEN A.AGE_NUM >= 60 AND A.AGE_NUM < 70 THEN 1 END)
		, COUNT(CASE WHEN A.AGE_NUM >= 70 AND A.AGE_NUM < 80 THEN 1 END)
		, COUNT(CASE WHEN A.AGE_NUM >= 80 THEN 1 END)

		, 100 * COUNT(CASE WHEN A.AGE_NUM < 10 THEN 1 END) / COUNT(*)
		, 100 * COUNT(CASE WHEN A.AGE_NUM >= 10 AND A.AGE_NUM < 20 THEN 1 END) / COUNT(*)
		, 100 * COUNT(CASE WHEN A.AGE_NUM >= 20 AND A.AGE_NUM < 30 THEN 1 END) / COUNT(*)
		, 100 * COUNT(CASE WHEN A.AGE_NUM >= 30 AND A.AGE_NUM < 40 THEN 1 END) / COUNT(*)
		, 100 * COUNT(CASE WHEN A.AGE_NUM >= 40 AND A.AGE_NUM < 50 THEN 1 END) / COUNT(*)
		, 100 * COUNT(CASE WHEN A.AGE_NUM >= 50 AND A.AGE_NUM < 60 THEN 1 END) / COUNT(*)
		, 100 * COUNT(CASE WHEN A.AGE_NUM >= 60 AND A.AGE_NUM < 70 THEN 1 END) / COUNT(*)
		, 100 * COUNT(CASE WHEN A.AGE_NUM >= 70 AND A.AGE_NUM < 80 THEN 1 END) / COUNT(*)
		, 100 * COUNT(CASE WHEN A.AGE_NUM >= 80 THEN 1 END) / COUNT(*)

		, COUNT(*)
	FROM (
		SELECT C.MASTER_CODE--, A.RES_CODE, A.CUS_NAME
			, IIF ( A.SOC_NUM2 IS NOT NULL AND (CONVERT(INT, SUBSTRING(A.SOC_NUM2, 1, 1)) = 3 OR CONVERT(INT, SUBSTRING(A.SOC_NUM2, 1, 1)) = 4), 
				DATEPART(YYYY, GETDATE()) - (CONVERT(INT, SUBSTRING(A.SOC_NUM1, 1, 2)) + 2000) ,
				(DATEPART(YYYY, GETDATE()) - IIF(CONVERT(INT, SUBSTRING(A.SOC_NUM1, 1, 2)) < (DATEPART(YYYY, GETDATE()) % 100), CONVERT(INT, SUBSTRING(A.SOC_NUM1, 1, 2)) + 2000, CONVERT(INT, SUBSTRING(A.SOC_NUM1, 1, 2)) + 1900 ) ) ) AS [AGE_NUM] 
				-- RIGHT((109 - CONVERT(INT, SUBSTRING(A.SOC_NUM1, 1, 2))), 2) AS [AGE_NUM]
		FROM RES_CUSTOMER A WITH(NOLOCK)
		INNER JOIN RES_MASTER B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
		INNER JOIN PKG_DETAIL C WITH(NOLOCK) ON B.PRO_CODE = C.PRO_CODE
		INNER JOIN PKG_MASTER D WITH(NOLOCK) ON C.MASTER_CODE = D.MASTER_CODE AND D.LAST_DATE >= GETDATE() and D.SHOW_YN = 'Y'
		WHERE B.NEW_DATE >= @START_DATE + ' 00:00:00' 
			AND B.NEW_DATE <= @END_DATE + ' 23:59:59' 
			AND B.RES_STATE < 7 
			AND A.RES_STATE IN (0, 3, 4)
			AND A.SOC_NUM1 IS NOT NULL  AND A.SOC_NUM1 <> ''
	) A
	GROUP BY A.MASTER_CODE
	/*
	-- 전체 마스터 상품에 대해서
	DECLARE CUR CURSOR FOR
		SELECT A.MASTER_CODE FROM PKG_MASTER A
			WHERE A.LAST_DATE >= getdate() and A.SHOW_YN = 'Y'
	OPEN CUR

	FETCH NEXT FROM CUR INTO @MASTER_CODE	

	WHILE @@FETCH_STATUS = 0
	BEGIN

		-- 연령별 예약정보 저장
		INSERT INTO PKG_MASTER_AGE
		SELECT A.MASTER_CODE
			, @TODAY
			, COUNT(CASE WHEN A.AGE_NUM < 10 THEN 1 END)
			, COUNT(CASE WHEN A.AGE_NUM >= 10 AND A.AGE_NUM < 20 THEN 1 END)
			, COUNT(CASE WHEN A.AGE_NUM >= 20 AND A.AGE_NUM < 30 THEN 1 END)
			, COUNT(CASE WHEN A.AGE_NUM >= 30 AND A.AGE_NUM < 40 THEN 1 END)
			, COUNT(CASE WHEN A.AGE_NUM >= 40 AND A.AGE_NUM < 50 THEN 1 END)
			, COUNT(CASE WHEN A.AGE_NUM >= 50 AND A.AGE_NUM < 60 THEN 1 END)
			, COUNT(CASE WHEN A.AGE_NUM >= 60 AND A.AGE_NUM < 70 THEN 1 END)
			, COUNT(CASE WHEN A.AGE_NUM >= 70 AND A.AGE_NUM < 80 THEN 1 END)
			, COUNT(CASE WHEN A.AGE_NUM >= 80 THEN 1 END)

			, 100 * COUNT(CASE WHEN A.AGE_NUM < 10 THEN 1 END) / COUNT(*)
			, 100 * COUNT(CASE WHEN A.AGE_NUM >= 10 AND A.AGE_NUM < 20 THEN 1 END) / COUNT(*)
			, 100 * COUNT(CASE WHEN A.AGE_NUM >= 20 AND A.AGE_NUM < 30 THEN 1 END) / COUNT(*)
			, 100 * COUNT(CASE WHEN A.AGE_NUM >= 30 AND A.AGE_NUM < 40 THEN 1 END) / COUNT(*)
			, 100 * COUNT(CASE WHEN A.AGE_NUM >= 40 AND A.AGE_NUM < 50 THEN 1 END) / COUNT(*)
			, 100 * COUNT(CASE WHEN A.AGE_NUM >= 50 AND A.AGE_NUM < 60 THEN 1 END) / COUNT(*)
			, 100 * COUNT(CASE WHEN A.AGE_NUM >= 60 AND A.AGE_NUM < 70 THEN 1 END) / COUNT(*)
			, 100 * COUNT(CASE WHEN A.AGE_NUM >= 70 AND A.AGE_NUM < 80 THEN 1 END) / COUNT(*)
			, 100 * COUNT(CASE WHEN A.AGE_NUM >= 80 THEN 1 END) / COUNT(*)

			, COUNT(*)
		FROM (
			SELECT C.MASTER_CODE--, A.RES_CODE, A.CUS_NAME
				, IIF ( A.SOC_NUM2 IS NOT NULL AND (CONVERT(INT, SUBSTRING(A.SOC_NUM2, 1, 1)) = 3 OR CONVERT(INT, SUBSTRING(A.SOC_NUM2, 1, 1)) = 4), 
					DATEPART(YYYY, GETDATE()) - (CONVERT(INT, SUBSTRING(A.SOC_NUM1, 1, 2)) + 2000) ,
					(DATEPART(YYYY, GETDATE()) - IIF(CONVERT(INT, SUBSTRING(A.SOC_NUM1, 1, 2)) < (DATEPART(YYYY, GETDATE()) % 100), CONVERT(INT, SUBSTRING(A.SOC_NUM1, 1, 2)) + 2000, CONVERT(INT, SUBSTRING(A.SOC_NUM1, 1, 2)) + 1900 ) ) ) AS [AGE_NUM] 
					-- RIGHT((109 - CONVERT(INT, SUBSTRING(A.SOC_NUM1, 1, 2))), 2) AS [AGE_NUM]
			FROM RES_CUSTOMER A
			INNER JOIN RES_MASTER B ON A.RES_CODE = B.RES_CODE
			INNER JOIN PKG_DETAIL C ON B.PRO_CODE = C.PRO_CODE
			WHERE B.NEW_DATE >= @START_DATE + ' 00:00:00' 
				AND B.NEW_DATE <= @END_DATE + ' 23:59:59' 
				AND B.RES_STATE < 7 
				AND A.RES_STATE IN (0, 3, 4)
				AND A.SOC_NUM1 IS NOT NULL  AND A.SOC_NUM1 <> ''
				AND C.MASTER_CODE =	@MASTER_CODE

		) A
		GROUP BY A.MASTER_CODE

		PRINT 'NO=' + CONVERT(varchar(10), @NO) + ' / MASTER_CODE=' + @MASTER_CODE
		SELECT @NO = @NO + 1

		FETCH NEXT FROM CUR INTO @MASTER_CODE	

	END
	CLOSE CUR
	DEALLOCATE CUR
	*/
	SELECT COUNT(*) AS COUNT FROM PKG_MASTER_AGE WHERE NEW_DATE = @TODAY

END

GO
