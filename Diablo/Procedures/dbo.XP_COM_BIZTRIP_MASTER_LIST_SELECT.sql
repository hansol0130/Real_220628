USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: XP_COM_BIZTRIP_MASTER_LIST_SELECT
■ DESCRIPTION				: BTMS 출장관리자 예약현황 리스트 검색
■ INPUT PARAMETER			: 
   @PAGE_INDEX  INT			: 현재 페이지
   @PAGE_SIZE  INT			: 한 페이지 표시 게시물 수
   @KEY      VARCHAR(400)	: 검색 키
   @ORDER_BY   INT			: 정렬 순서
■ OUTPUT PARAMETER			: 
   @TOTAL_COUNT INT OUTPUT	: 총 항목 수
■ EXEC						: 

   DECLARE @TOTAL INT
   EXEC DBO.XP_COM_BIZTRIP_MASTER_LIST_SELECT 1, 10, @TOTAL OUTPUT, 'AgentCode=92756&CancelYn=Y', 1
   SELECT @TOTAL

■ MEMO                  : 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY
------------------------------------------------------------------------------------------------------------------
	DATE			AUTHOR		DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
	2016-02-29		이유라		최초생성
	2016-03-07		이유라		관리자페이지 검색조건추가
	2016-03-21		김성호		기획 변경으로 인한 리뉴얼
	2016-03-28		김성호		출장코드, 예약코드 검색 시 다른 조건 적용안되도록 수정
	2016-03-31		이유라		예약일 -> 최근예약일로 조회되도록 수정
	2016-05-09		김성호		출장상태 예약 상태 기준 실시간 상태값 검색으로 변경
================================================================================================================*/ 
CREATE PROC [dbo].[XP_COM_BIZTRIP_MASTER_LIST_SELECT]
	@PAGE_INDEX		INT,
	@PAGE_SIZE		INT,
	@TOTAL_COUNT	INT OUTPUT,
	@KEY			VARCHAR(400),
	@ORDER_BY		INT
AS 
BEGIN

	DECLARE @SQLSTRING NVARCHAR(MAX) = '', @PARMDEFINITION NVARCHAR(1000);
	DECLARE @WHERE NVARCHAR(MAX), @SORT_STRING NVARCHAR(MAX);
	DECLARE @AGT_CODE VARCHAR(10), @SEARCH_TYPE VARCHAR(1), @SEARCH_TEXT VARCHAR(50);
	DECLARE @TERM_TYPE VARCHAR(1), @START_DATE VARCHAR(20), @END_DATE VARCHAR(20);
	DECLARE @CITY_NAME VARCHAR(50), @EMP_SEQ INT, @TEAM_SEQ INT
	DECLARE @APPROVAL_CODE VARCHAR(10), @CANCEL_RESERVE_YN VARCHAR(1)--, @STATE_CODE VARCHAR(10)
	DECLARE @WHERE_RES_CANCEL NVARCHAR(100) = ''

	--DECLARE @RESV_STATUS VARCHAR(100), 
	
	SELECT
		@AGT_CODE = DBO.FN_PARAM(@KEY, 'AgentCode'),
		@SEARCH_TYPE = DBO.FN_PARAM(@KEY, 'SearchType'),
		@SEARCH_TEXT = DBO.FN_PARAM(@KEY, 'SearchText'),
		@TERM_TYPE = DBO.FN_PARAM(@KEY, 'TermType'),
		@START_DATE = DBO.FN_PARAM(@KEY, 'StartDate'),
		@END_DATE = DBO.FN_PARAM(@KEY, 'EndDate'),
		@CITY_NAME = DBO.FN_PARAM(@KEY, 'CityName'),
		@EMP_SEQ = DBO.FN_PARAM(@KEY, 'EmpSeq'),
		@TEAM_SEQ = DBO.FN_PARAM(@KEY, 'TeamSeq'),
		@APPROVAL_CODE = DBO.FN_PARAM(@KEY, 'AppCode'),
		@CANCEL_RESERVE_YN = DBO.FN_PARAM(@KEY, 'CancelYn');
		--@STATE_CODE = DBO.FN_PARAM(@KEY, 'StateCode');

	SELECT @WHERE = 'WHERE A.AGT_CODE = @AGT_CODE'
	IF @SEARCH_TEXT LIKE 'BT__________'
	BEGIN
		SELECT @WHERE = @WHERE + ' AND A.BT_CODE = @SEARCH_TEXT';
	END
	ELSE IF @SEARCH_TEXT LIKE 'R[PTH]__________'
	BEGIN
		SELECT @WHERE = @WHERE + ' AND B.RES_CODE = @SEARCH_TEXT';
	END
	ELSE
	BEGIN

		IF LEN(@SEARCH_TEXT) > 0
		BEGIN
			SELECT @WHERE = @WHERE + ' AND (C.KOR_NAME LIKE ''%'' + @SEARCH_TEXT + ''%'' OR E.CUS_NAME LIKE ''%'' + @SEARCH_TEXT + ''%'')'
		END

		IF LEN(@START_DATE) > 0
		BEGIN
			SELECT @WHERE = @WHERE + (  
				CASE @TERM_TYPE
					WHEN 1 THEN ' AND A.NEW_DATE>=@START_DATE '
					WHEN 2 THEN ' AND A.BT_START_DATE >= @START_DATE'
					WHEN 3 THEN ' AND A.BT_END_DATE >= @START_DATE'
					WHEN 4 THEN ' AND A.BT_TIME_LIMIT >= @START_DATE'
				END
			)
		END

		IF LEN(@END_DATE) > 0
		BEGIN
			SELECT @WHERE = @WHERE + (  
				CASE @TERM_TYPE
					WHEN 1 THEN ' AND A.NEW_DATE <= DATEADD(DAY, 1, @END_DATE) '
					WHEN 2 THEN ' AND A.BT_START_DATE <= DATEADD(DAY, 1, @END_DATE)' 
					WHEN 3 THEN ' AND A.BT_END_DATE <= DATEADD(DAY, 1, @END_DATE)'
					WHEN 4 THEN ' AND A.BT_TIME_LIMIT <= DATEADD(DAY, 1, @END_DATE)'
				END
			)
		END

		IF LEN(@CITY_NAME) > 0
		BEGIN
			SET @WHERE = @WHERE + ' AND (F.KOR_NAME LIKE ''%'' + @CITY_NAME + ''%'' OR G.KOR_NAME LIKE ''%'' + @CITY_NAME + ''%'')'
		END

		IF @EMP_SEQ > 0
		BEGIN
			SET @WHERE = @WHERE + ' AND A.NEW_SEQ = @EMP_SEQ'
		END
		ELSE IF @TEAM_SEQ > 0
		BEGIN
			SET @WHERE = @WHERE + ' AND C.TEAM_SEQ = @TEAM_SEQ'
		END

		IF LEN(@APPROVAL_CODE) > 0
		BEGIN
			SET @WHERE = @WHERE + ' AND A.APPROVAL_STATE IN (SELECT DATA FROM DBO.FN_SPLIT(@APPROVAL_CODE, '','') WHERE Data <> '''')'
		END
		
		-- 취소예약만 보기
		IF @CANCEL_RESERVE_YN = 'Y'
		BEGIN
			SET @WHERE_RES_CANCEL = N'WHERE Z.BT_STATE >= 7'
		END
		-- 취소예약 제외하고 보기
		ELSE IF @CANCEL_RESERVE_YN = 'N'
		BEGIN
			SET @WHERE_RES_CANCEL = N'WHERE Z.BT_STATE < 7'
		END

	END

	-- SORT 조건 만들기
	SELECT @SORT_STRING = (  
		CASE @TERM_TYPE
			WHEN 1 THEN ' Z.BT_STATE, Z.LAST_NEW_DATE DESC '
			WHEN 2 THEN ' Z.BT_STATE, (CASE WHEN A.BT_START_DATE <= GETDATE() THEN ''9999'' ELSE A.BT_START_DATE END), Z.LAST_NEW_DATE DESC '
			WHEN 3 THEN ' Z.BT_STATE, (CASE WHEN A.BT_END_DATE <= GETDATE() THEN ''9999'' ELSE A.BT_END_DATE END), Z.LAST_NEW_DATE DESC '
			WHEN 4 THEN ' Z.BT_STATE, (CASE WHEN A.BT_TIME_LIMIT <= GETDATE() THEN ''9999'' ELSE A.BT_TIME_LIMIT END), Z.LAST_NEW_DATE DESC '
			ELSE ' Z.BT_STATE, Z.LAST_NEW_DATE DESC '
		END
	)
		  

    SET @SQLSTRING = @SQLSTRING + CONVERT(NVARCHAR(MAX), N'
		-- 전체 조회 갯수
		SELECT @TOTAL_COUNT = COUNT(*)
		FROM (
				SELECT A.AGT_CODE, A.BT_CODE, (
					CASE
						WHEN MIN(A.RES_STATE) < 7 THEN 0
						WHEN MIN(A.RES_STATE) = 7 THEN 7
						ELSE 9
					END) AS [BT_STATE]
				FROM (
					SELECT A.AGT_CODE, A.BT_CODE, B.RES_CODE, D.NEW_DATE, D.RES_STATE
					FROM COM_BIZTRIP_MASTER A WITH(NOLOCK)
					INNER JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE AND A.BT_CODE = B.BT_CODE
					LEFT JOIN COM_EMPLOYEE C WITH(NOLOCK) ON A.AGT_CODE = C.AGT_CODE AND A.NEW_SEQ = C.EMP_SEQ
					LEFT JOIN RES_MASTER_damo D WITH(NOLOCK) ON B.RES_CODE = D.RES_CODE
					LEFT JOIN RES_CUSTOMER_damo E WITH(NOLOCK) ON B.RES_CODE = E.RES_CODE
					LEFT JOIN PUB_CITY F WITH(NOLOCK) ON A.BT_CITY_CODE = F.CITY_CODE
					LEFT JOIN PUB_NATION G WITH(NOLOCK) ON F.NATION_CODE = G.NATION_CODE
					' + @WHERE + N'
					GROUP BY A.AGT_CODE, A.BT_CODE, B.RES_CODE, D.NEW_DATE, D.RES_STATE
				) A
				LEFT JOIN RES_MASTER_damo B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
				GROUP BY A.AGT_CODE, A.BT_CODE
		) Z
		' + @WHERE_RES_CANCEL + N';
		')

	SET @SQLSTRING = @SQLSTRING + N'
		-- 리스트 조회
		WITH LIST AS
		(
			SELECT Z.AGT_CODE, Z.BT_CODE, Z.LAST_NEW_DATE, Z.BT_STATE, (
				CASE WHEN Z.AIR_COUNT > 0 THEN ''+항공('' + CONVERT(VARCHAR(3), Z.AIR_COUNT) + '')'' ELSE '''' END +
				CASE WHEN Z.HOTEL_COUNT > 0 THEN ''+호텔('' + CONVERT(VARCHAR(3), Z.HOTEL_COUNT) + '')'' ELSE '''' END +
				CASE WHEN Z.RENT_COUNT > 0 THEN ''+렌트카('' + CONVERT(VARCHAR(3), Z.RENT_COUNT) + '')'' ELSE '''' END +
				CASE WHEN Z.VISA_COUNT > 0 THEN ''+비자('' + CONVERT(VARCHAR(3), Z.VISA_COUNT) + '')'' ELSE '''' END +
				CASE WHEN Z.ETC_COUNT > 0 THEN ''+기타('' + CONVERT(VARCHAR(3), Z.ETC_COUNT) + '')'' ELSE '''' END
			) AS [RES_COUNT_STRING]
			FROM (
				SELECT A.AGT_CODE, A.BT_CODE, MAX(A.NEW_DATE) AS [LAST_NEW_DATE]
					, (CASE
							WHEN MIN(A.RES_STATE) < 7 THEN 0
							WHEN MIN(A.RES_STATE) = 7 THEN 7
							ELSE 9
						END) AS [BT_STATE]
					, SUM(CASE WHEN B.RES_STATE <= 7 AND B.PRO_TYPE = 2 THEN 1 END) AS [AIR_COUNT]
					, SUM(CASE WHEN B.RES_STATE <= 7 AND B.PRO_TYPE = 3 THEN 1 END) AS [HOTEL_COUNT]
					, SUM(CASE WHEN B.RES_STATE <= 7 AND B.PRO_TYPE = 1 AND A.PRO_DETAIL_TYPE = 4 THEN 1 END) AS [RENT_COUNT]
					, SUM(CASE WHEN B.RES_STATE <= 7 AND B.PRO_TYPE = 1 AND A.PRO_DETAIL_TYPE = 5 THEN 1 END) AS [VISA_COUNT]
					, SUM(CASE WHEN B.RES_STATE <= 7 AND B.PRO_TYPE = 1 AND A.PRO_DETAIL_TYPE = 9 THEN 1 END) AS [ETC_COUNT]
				FROM (
					SELECT A.AGT_CODE, A.BT_CODE, B.RES_CODE, D.NEW_DATE, B.PRO_DETAIL_TYPE, D.RES_STATE
					FROM COM_BIZTRIP_MASTER A WITH(NOLOCK)
					INNER JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE AND A.BT_CODE = B.BT_CODE
					LEFT JOIN COM_EMPLOYEE C WITH(NOLOCK) ON A.AGT_CODE = C.AGT_CODE AND A.NEW_SEQ = C.EMP_SEQ
					LEFT JOIN RES_MASTER_damo D WITH(NOLOCK) ON B.RES_CODE = D.RES_CODE
					LEFT JOIN RES_CUSTOMER_damo E WITH(NOLOCK) ON B.RES_CODE = E.RES_CODE
					LEFT JOIN PUB_CITY F WITH(NOLOCK) ON A.BT_CITY_CODE = F.CITY_CODE
					LEFT JOIN PUB_NATION G WITH(NOLOCK) ON F.NATION_CODE = G.NATION_CODE
					' + @WHERE + N'
					GROUP BY A.AGT_CODE, A.BT_CODE, B.RES_CODE, D.NEW_DATE, B.PRO_DETAIL_TYPE, D.RES_STATE
				) A
				LEFT JOIN RES_MASTER_damo B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
				GROUP BY A.AGT_CODE, A.BT_CODE
			) Z
			INNER JOIN COM_BIZTRIP_MASTER A WITH(NOLOCK) ON Z.AGT_CODE = A.AGT_CODE AND Z.BT_CODE = A.BT_CODE
			' + @WHERE_RES_CANCEL + N'
			ORDER BY ' + @SORT_STRING + N'
			OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
			ROWS ONLY
      )
      SELECT
			-- BT_STATE 0:온라인, 7:환불, 9:취소
			-- APPROVAL_STATE 0:출장대기, 1:출장요청, 2:출장확정, 3:출장반려
			A.AGT_CODE, A.BT_CODE, A.APPROVAL_STATE, Z.LAST_NEW_DATE,--, A.NEW_DATE, 
			A.BT_START_DATE, A.BT_END_DATE, 
			DATEDIFF(DAY, A.BT_START_DATE, A.BT_END_DATE) AS [PRO_DAY], 
			A.BT_TIME_LIMIT,
			(CASE WHEN Z.BT_STATE = 0 THEN DATEDIFF(DAY, GETDATE(), A.BT_TIME_LIMIT) ELSE -999 END) AS [LIMIT_DAY],
			(
				CASE
					WHEN Z.BT_STATE = 7 THEN ''환불''
					WHEN Z.BT_STATE = 9 THEN ''취소''
					WHEN Z.BT_STATE = 0 AND EXISTS(
						SELECT 1 FROM COM_BIZTRIP_RULE_REMARK AA WITH(NOLOCK)
						WHERE AA.RES_CODE IN (
							SELECT RES_CODE FROM COM_BIZTRIP_DETAIL BB WITH(NOLOCK) 
							WHERE BB.AGT_CODE = Z.AGT_CODE AND BB.BT_CODE = Z.BT_CODE
						)
					) THEN ''규정위반''
				END) AS [BT_STATE_NAME],
			B.KOR_NAME AS [CITY_NAME],
			C.KOR_NAME AS [NATION_NAME],
			D.KOR_NAME AS [EMP_NAME],
			E.TEAM_NAME,
			F.POS_NAME,
			SUBSTRING(Z.RES_COUNT_STRING, 2, 100) AS [RES_COUNT_STRING],
			DBO.FN_PRO_GET_TOTAL_PRICE(A.PRO_CODE) AS [TOTAL_SALE_PRICE]
      FROM LIST Z
	  INNER JOIN COM_BIZTRIP_MASTER A WITH(NOLOCK) ON Z.AGT_CODE = A.AGT_CODE AND Z.BT_CODE = A.BT_CODE
	  LEFT JOIN PUB_CITY B WITH(NOLOCK) ON A.BT_CITY_CODE = B.CITY_CODE
	  LEFT JOIN PUB_NATION C WITH(NOLOCK) ON B.NATION_CODE = C.NATION_CODE
	  LEFT JOIN COM_EMPLOYEE D WITH(NOLOCK) ON A.AGT_CODE = D.AGT_CODE AND A.NEW_SEQ = D.EMP_SEQ
	  LEFT JOIN COM_TEAM E WITH(NOLOCK) ON A.AGT_CODE = E.AGT_CODE AND D.TEAM_SEQ = E.TEAM_SEQ
	  LEFT JOIN COM_POSITION F WITH(NOLOCK) ON A.AGT_CODE = F.AGT_CODE AND D.POS_SEQ = F.POS_SEQ
      ORDER BY ' + @SORT_STRING

	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@TOTAL_COUNT INT OUTPUT,
		@AGT_CODE VARCHAR(10),
		@SEARCH_TYPE VARCHAR(1),
		@SEARCH_TEXT VARCHAR(50),
		@START_DATE VARCHAR(20),
		@END_DATE VARCHAR(20),
		@CITY_NAME VARCHAR(50),
		@EMP_SEQ INT,
		@TEAM_SEQ INT,
		@APPROVAL_CODE VARCHAR(10)';
--		@STATE_CODE VARCHAR(10)';
	  
--	PRINT @SQLSTRING
      
   EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@PAGE_INDEX,
		@PAGE_SIZE,
		@TOTAL_COUNT OUTPUT,
		@AGT_CODE,
		@SEARCH_TYPE,
		@SEARCH_TEXT,
		@START_DATE,
		@END_DATE,
		@CITY_NAME,
		@EMP_SEQ,
		@TEAM_SEQ,
		@APPROVAL_CODE;
--		@STATE_CODE;

END 

GO
