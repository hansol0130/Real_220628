USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
-- 2012-03-02 WITH(NOLOCK) 추가 	
*/
CREATE PROCEDURE [dbo].[SP_DOC_APPROVAL_LINE_SELECT]
	@DOC_TYPE	VARCHAR(10),	-- 문서종류
	@APP_TYPE	CHAR(1),		-- 결재라인
	@EMP_CODE	VARCHAR(20),	-- 사원코드 사원기준일때는 [다음결재자코드|현재결재자코드]
	@EDI_CODE	VARCHAR(10),	-- 문서코드
	@FLAG		VARCHAR(1)		-- 1: 문서기준, 2: 사원기준
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	
	SET NOCOUNT ON;

	-- 최종결재직책코드 가져오기

	DECLARE @FINAL_DUTY_TYPE VARCHAR(10)
	DECLARE @DUTY_CODE VARCHAR(10)

	IF EXISTS(SELECT 1 FROM EDI_MASTER_DAMO WITH(NOLOCK) WHERE EDI_CODE = @EDI_CODE AND @FLAG = '1')
	BEGIN
		SELECT @DUTY_CODE = ISNULL((
			SELECT B.DUTY_TYPE FROM EDI_MASTER_DAMO A WITH(NOLOCK)
			INNER JOIN EMP_MASTER_damo B WITH(NOLOCK) ON A.NEW_CODE = B.EMP_CODE
			WHERE A.EDI_CODE = @EDI_CODE
		), 1)
		--SELECT @DUTY_CODE = B.DUTY_TYPE FROM EDI_MASTER_DAMO A
		--INNER JOIN EMP_MASTER_damo B ON A.NEW_CODE = B.EMP_CODE
		--WHERE A.EDI_CODE = @EDI_CODE
	END
	ELSE
	BEGIN
		-- 문서작성자코드 선언
		DECLARE @NEW_CODE VARCHAR(10)
		SELECT @NEW_CODE = SUBSTRING(@EMP_CODE, PATINDEX('%|%', @EMP_CODE)+1, 20)
			, @EMP_CODE = CASE WHEN LEN(@EMP_CODE) > 7 THEN SUBSTRING(@EMP_CODE, 1, PATINDEX('%|%', @EMP_CODE)-1) ELSE @EMP_CODE END
		SELECT @DUTY_CODE = DUTY_TYPE FROM EMP_MASTER_damo WITH(NOLOCK) WHERE EMP_CODE = @NEW_CODE
	END

	IF @DUTY_CODE > 2
		SET @DUTY_CODE = 2
	ELSE IF @DUTY_CODE < 1
		SET @DUTY_CODE = 1

	SELECT @FINAL_DUTY_TYPE = FINAL_DUTY_TYPE FROM EDI_APPROVAL_TEMPLATE WITH(NOLOCK)
	WHERE DOC_TYPE = @DOC_TYPE AND DUTY_CODE = @DUTY_CODE AND APP_TYPE = @APP_TYPE

	-- 상위결재자 가져오기

	-- 실행 쿼리를 담을 변수
	DECLARE @QUERY VARCHAR(8000)
	-- 사원 코드를 담을 변수
	DECLARE @CODES VARCHAR(100), @TEAM VARCHAR(100)

	-- 임시 변수 선언
	DECLARE @TMP_TEAM_CODE VARCHAR(10)
	DECLARE @TMP_EMP_CODE VARCHAR(10)
	DECLARE @TMP_DUTY_TYPE VARCHAR(10)
	DECLARE @PARENT_CODE VARCHAR(10)
	DECLARE @COUNT INT
	SET @COUNT = 0

	-- 자신의 직책에 따라 첫 결재자의 정보를 가져온다

	-- 결재중이면
	IF EXISTS(SELECT TOP 1 1 FROM EDI_APPROVAL WITH(NOLOCK) WHERE EDI_CODE = @EDI_CODE AND APP_TYPE = @APP_TYPE AND @FLAG = '1')
	BEGIN
		-- 팀장이면
		IF EXISTS(SELECT 1 FROM EMP_TEAM WITH(NOLOCK) WHERE TEAM_EMP_CODE IN
		(
			SELECT APP_CODE FROM EDI_APPROVAL WITH(NOLOCK) WHERE EDI_CODE = @EDI_CODE AND APP_TYPE = @APP_TYPE AND APP_STATUS = 'N'
		) AND USE_YN = 'Y')
		BEGIN
			SELECT TOP 1
				@TMP_TEAM_CODE = D.TEAM_CODE,
				@TMP_EMP_CODE = D.EMP_CODE,
				@TMP_DUTY_TYPE = D.DUTY_TYPE
			FROM EDI_APPROVAL A WITH(NOLOCK)
			INNER JOIN EMP_TEAM B WITH(NOLOCK) ON A.APP_CODE = B.TEAM_EMP_CODE AND B.USE_YN = 'Y'
			INNER JOIN EMP_TEAM C WITH(NOLOCK) ON B.PARENT_CODE = C.TEAM_CODE AND B.USE_YN = 'Y'
			INNER JOIN EMP_MASTER_damo D WITH(NOLOCK) ON C.TEAM_EMP_CODE = D.EMP_CODE
			WHERE A.EDI_CODE = @EDI_CODE AND A.APP_TYPE = @APP_TYPE AND A.APP_STATUS = 'N'
		END
		ELSE	-- 팀장아니면
		BEGIN
			SELECT TOP 1
				@TMP_TEAM_CODE = D.TEAM_CODE,
				@TMP_EMP_CODE = D.EMP_CODE,
				@TMP_DUTY_TYPE = D.DUTY_TYPE
			FROM EDI_APPROVAL A WITH(NOLOCK)
			INNER JOIN EMP_MASTER_damo B WITH(NOLOCK) ON A.APP_CODE = B.EMP_CODE
			INNER JOIN EMP_TEAM C WITH(NOLOCK) ON B.TEAM_CODE = C.TEAM_CODE
			INNER JOIN EMP_MASTER_damo D WITH(NOLOCK) ON C.TEAM_EMP_CODE = D.EMP_CODE
			WHERE A.EDI_CODE = @EDI_CODE AND A.APP_TYPE = @APP_TYPE AND A.APP_STATUS = 'N'
		END
	END
	ELSE
	BEGIN
		-- 결재자 수정시 선택한 결재자도 포함한다.
		IF @FLAG = '2'
		BEGIN
			SET @CODES = (ISNULL(@CODES, '') + ', ''' + @EMP_CODE + '''')
			SELECT @TEAM = (', ''' + TEAM_CODE + '''') FROM EMP_MASTER_damo WITH(NOLOCK) WHERE EMP_CODE = @EMP_CODE
		END

		-- 팀장이면
		IF EXISTS(SELECT 1 FROM EMP_TEAM WITH(NOLOCK) WHERE TEAM_EMP_CODE = @EMP_CODE AND USE_YN = 'Y')
		BEGIN
			SELECT TOP 1
				@TMP_TEAM_CODE = B.TEAM_CODE,
				@TMP_EMP_CODE = B.TEAM_EMP_CODE,
				@TMP_DUTY_TYPE = C.DUTY_TYPE
			FROM EMP_TEAM A WITH(NOLOCK)
			INNER JOIN EMP_TEAM B WITH(NOLOCK) ON A.PARENT_CODE = B.TEAM_CODE AND B.USE_YN = 'Y'
			INNER JOIN EMP_MASTER_damo C WITH(NOLOCK) ON B.TEAM_EMP_CODE = C.EMP_CODE
			WHERE A.TEAM_EMP_CODE = @EMP_CODE
		END
		ELSE	-- 팀장아니면
		BEGIN
			SELECT TOP 1
				@TMP_TEAM_CODE = A.TEAM_CODE,
				@TMP_EMP_CODE = B.TEAM_EMP_CODE,
				@TMP_DUTY_TYPE = A.DUTY_TYPE
			FROM EMP_MASTER_damo A WITH(NOLOCK)
			INNER JOIN EMP_TEAM B WITH(NOLOCK) ON A.TEAM_CODE = B.TEAM_CODE AND B.USE_YN = 'Y'
			WHERE A.EMP_CODE = @EMP_CODE
		END
	END

	-- 상위 결재자코드를 변수에 담는다
	-- 상위자가 있고 최종직책코드를 넘지않고 최대 10단계를 넘지 않는다
	WHILE @TMP_TEAM_CODE IS NOT NULL AND @TMP_TEAM_CODE <> ''  AND CONVERT(INT, @TMP_DUTY_TYPE) <= CONVERT(INT, @FINAL_DUTY_TYPE) AND @COUNT < 10
	BEGIN
		IF @TMP_EMP_CODE IS NOT NULL AND @TMP_EMP_CODE <> ''
		BEGIN
			SET @CODES = (ISNULL(@CODES, '') + ', ''' + @TMP_EMP_CODE + '''')
			SET @TEAM = (ISNULL(@TEAM, '') + ', ''' + @TMP_TEAM_CODE + '''')
		END

		IF (SELECT ISNULL(PARENT_CODE, '') FROM EMP_TEAM WITH(NOLOCK) WHERE TEAM_CODE = @TMP_TEAM_CODE) = ''
		BEGIN
			SELECT @TMP_TEAM_CODE = ''
		END
		ELSE
		BEGIN
			SELECT @TMP_TEAM_CODE = C.TEAM_CODE, @TMP_EMP_CODE = C.EMP_CODE, @TMP_DUTY_TYPE = C.DUTY_TYPE
			FROM EMP_TEAM A WITH(NOLOCK)
			LEFT JOIN EMP_TEAM B WITH(NOLOCK) ON A.PARENT_CODE = B.TEAM_CODE
			LEFT JOIN EMP_MASTER_damo C WITH(NOLOCK) ON B.TEAM_EMP_CODE = C.EMP_CODE
			WHERE A.TEAM_CODE = @TMP_TEAM_CODE
		END

		SET @COUNT = @COUNT + 1
	END
--PRINT @CODES
	-- 상위결재자가 존재하면 상하구조로 출력
	IF (LEN(@CODES) > 7)
	BEGIN
		SET @QUERY = 'WITH DOCLIST (TEAM_CODE, TEAM_NAME, PARENT_CODE, APP_CODE, APP_NAME, DUTY_TYPE, DEPTH)
AS
(
	SELECT A.TEAM_CODE, A.TEAM_NAME, A.PARENT_CODE, A.TEAM_EMP_CODE, B.KOR_NAME, B.DUTY_TYPE, 0 FROM EMP_TEAM A WITH(NOLOCK)
	INNER JOIN EMP_MASTER_damo B WITH(NOLOCK) ON A.TEAM_EMP_CODE = B.EMP_CODE
	WHERE A.TEAM_EMP_CODE = ' + SUBSTRING(@CODES, LEN(@CODES)- 8, 9) + ' AND A.TEAM_CODE = ' + SUBSTRING(@TEAM, LEN(@TEAM)- 4, 5) + ' AND USE_YN = ''Y''
	UNION ALL
	SELECT A.TEAM_CODE, A.TEAM_NAME, A.PARENT_CODE, A.TEAM_EMP_CODE, B.KOR_NAME, B.DUTY_TYPE, C.DEPTH + 1 FROM EMP_TEAM A WITH(NOLOCK)
	INNER JOIN EMP_MASTER_damo B WITH(NOLOCK) ON A.TEAM_EMP_CODE = B.EMP_CODE
	INNER JOIN DOCLIST C WITH(NOLOCK) ON A.PARENT_CODE = C.TEAM_CODE
	WHERE B.EMP_CODE IN (' + SUBSTRING(@CODES, 3, 100) + ') AND A.TEAM_CODE IN (' + SUBSTRING(@TEAM, 3, 100) + ')
		AND USE_YN = ''Y''
)
SELECT
	A.TEAM_CODE, A.TEAM_NAME, A.PARENT_CODE, A.APP_CODE, A.APP_NAME, A.DUTY_TYPE, C.PUB_VALUE AS [DUTY_NAME],
	A.DEPTH, B.APP_DATE
FROM DOCLIST A
LEFT JOIN EDI_APPROVAL B WITH(NOLOCK) ON B.EDI_CODE = ''' + @EDI_CODE + ''' AND A.APP_CODE = B.APP_CODE AND B.APP_TYPE = ''' + @APP_TYPE + '''
LEFT JOIN COD_PUBLIC C WITH(NOLOCK) ON C.PUB_TYPE = ''EMP.DUTYTYPE'' AND A.DUTY_TYPE = C.PUB_CODE
ORDER BY DEPTH DESC'
		--PRINT @QUERY
		EXEC (@QUERY)
	END
END


--[SP_DOC_APPROVAL_LINE_SELECT] '3', '1', '2006004', '0804010001', '2'


GO
