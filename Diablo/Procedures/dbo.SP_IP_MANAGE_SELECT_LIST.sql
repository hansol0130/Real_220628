USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: SP_IP_MANAGE_SELECT_LIST
■ DESCRIPTION				: 사내 IP관리
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			: 
■ EXEC						: 
declare @p5 int
set @p5=339
exec SP_IP_MANAGE_SELECT_LIST @PAGE_INDEX=2,@PAGE_SIZE=20,@KEY=N'SearchType=1&IPType=0&IPCode=0',@ORDER_BY=0,@TOTAL_COUNT=@p5 output
select @p5
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------  
   2014-04-11		정지용			최초생성
   2014-12-04		정지용			CTI 사용유무 추가
   2016-09-07		정지용			관리번호 / 비고 추가
   2017-04-27		정지용			오피스 버젼 / 한글 버젼 추가
================================================================================================================*/ 
CREATE PROC [dbo].[SP_IP_MANAGE_SELECT_LIST]
 	@PAGE_INDEX  INT,
	@PAGE_SIZE  INT,
	@TOTAL_COUNT INT OUTPUT,
	@KEY	varchar(200),
	@ORDER_BY	int
AS 
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED	

	DECLARE @SQLSTRING NVARCHAR(4000), @WHERE NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000), @SORT_STRING VARCHAR(100);
	DECLARE @TEAM_CODE CHAR(3)
	DECLARE @IS_IPCODE CHAR(1)
	DECLARE @IS_RECORD CHAR(1)
	DECLARE @IS_CTI CHAR(1)
	DECLARE @EMP_CODE CHAR(7)
	DECLARE @EMP_NAME VARCHAR(20)
	DECLARE @INNER_NUMBER VARCHAR(12)
	DECLARE @SEARCH_TYPE CHAR(1)
	DECLARE @IPADDRESS VARCHAR(15)
	DECLARE @COM_NUMBER VARCHAR(10)
	DECLARE @COM_OFFICE_VER VARCHAR(10)
	DECLARE @COM_HANGLE_VER VARCHAR(10)
	

	SELECT
		@TEAM_CODE = DBO.FN_PARAM(@KEY, 'TeamCode'),
		@IS_IPCODE = DBO.FN_PARAM(@KEY, 'IsIP'),
		@IS_RECORD = DBO.FN_PARAM(@KEY, 'IsRecord'),
		@IS_CTI = DBO.FN_PARAM(@KEY, 'IsCti'),
		@EMP_CODE = DBO.FN_PARAM(@KEY, 'EmpCode'),
		@EMP_NAME = DBO.FN_PARAM(@KEY, 'EmpName'),
		@INNER_NUMBER = DBO.FN_PARAM(@KEY, 'InnerNumber'),
		@SEARCH_TYPE = DBO.FN_PARAM(@KEY, 'SearchType'),
		@IPADDRESS = DBO.FN_PARAM(@KEY, 'IPAddress'),
		@COM_NUMBER = DBO.FN_PARAM(@KEY, 'ComNumber'),
		@COM_OFFICE_VER = DBO.FN_PARAM(@KEY, 'ComOfficeVer'),
		@COM_HANGLE_VER = DBO.FN_PARAM(@KEY, 'ComHangleVer')

	SET @WHERE = 'WORK_TYPE = 1'

	IF ISNULL(@TEAM_CODE, '') <> ''
		SET @WHERE = @WHERE + ' AND A.TEAM_CODE = @TEAM_CODE'

	IF ISNULL(@IS_IPCODE, '') <> ''
		SET @WHERE = @WHERE + ' AND A.IS_IPCODE = @IS_IPCODE'

	IF ISNULL(@IS_RECORD, '') <> ''
		SET @WHERE = @WHERE + ' AND A.RECORD_YN = @IS_RECORD'
	
	IF ISNULL(@IS_CTI, '') <> ''
		SET @WHERE = @WHERE + ' AND A.CTI_USE_YN = @IS_CTI'

	IF ISNULL(@COM_OFFICE_VER, '') = 'N'
		SET @WHERE = @WHERE + ' AND A.COM_OFFICE_VER IS NULL'
	ELSE IF ISNULL(@COM_OFFICE_VER, '') <> ''
		SET @WHERE = @WHERE + ' AND A.COM_OFFICE_VER = @COM_OFFICE_VER'

	IF ISNULL(@COM_HANGLE_VER, '') = 'N'
		SET @WHERE = @WHERE + ' AND A.COM_HANGLE_VER IS NULL'
	ELSE IF ISNULL(@COM_HANGLE_VER, '') <> ''
		SET @WHERE = @WHERE + ' AND A.COM_HANGLE_VER = @COM_HANGLE_VER'

	IF ISNULL(@EMP_CODE, '') <> ''
		SET @WHERE = @WHERE + ' AND A.EMP_CODE = @EMP_CODE'

	IF ISNULL(@EMP_NAME, '') <> ''
		SET @WHERE = @WHERE + ' AND A.KOR_NAME LIKE ''%'' + @EMP_NAME + ''%'''

	IF ISNULL(@INNER_NUMBER, '') <> ''
		SET @WHERE = @WHERE + ' AND A.INNER_NUMBER LIKE ''%'' + @INNER_NUMBER + ''%'''

	IF ISNULL(@COM_NUMBER, '') <> ''
		SET @WHERE = @WHERE + ' AND A.COM_NUMBER LIKE ''%'' + @COM_NUMBER + ''%'''

	IF @SEARCH_TYPE = '1'
	BEGIN
		IF ISNULL(@IPADDRESS, '') <> ''
			SET @WHERE = @WHERE + ' AND A.PC_IP LIKE ''%'' + @IPADDRESS+ ''%'''
	END
	ELSE IF @SEARCH_TYPE = '2'
	BEGIN
		IF ISNULL(@IPADDRESS, '') <> ''
			SET @WHERE = @WHERE + ' AND A.PHONE_IP LIKE''%'' + @IPADDRESS + ''%'''
	END
	ELSE IF @SEARCH_TYPE = '3'
	BEGIN
		IF ISNULL(@IPADDRESS, '') <> ''
			SET @WHERE = @WHERE + ' AND A.CH_NUM = @IPADDRESS'
	END 

	SELECT @SORT_STRING = (  
		CASE @ORDER_BY  
			WHEN 1 THEN ' A.NEW_DATE DESC'
			WHEN 2 THEN ' A.NEW_DATE ASC'
			WHEN 3 THEN ' A.EMP_CODE DESC'
			WHEN 4 THEN ' A.EMP_CODE ASC'
			ELSE ' A.NEW_DATE DESC'
		END
	)
	SET @SQLSTRING = N'
	WITH LIST AS 
	(
		SELECT
			 EMP_CODE
			, KOR_NAME 
			, TEAM_CODE
			, A.INNER_NUMBER1
			, A.INNER_NUMBER2
			, A.INNER_NUMBER3
			, A.INNER_NUMBER1 + ''-'' + A.INNER_NUMBER2 + ''-'' + A.INNER_NUMBER3 AS [INNER_NUMBER]
			, DBO.XN_CUS_GET_IP_NUMBER(1, A.EMP_CODE) AS [PC_IP]
			, DBO.XN_CUS_GET_IP_NUMBER(2, A.EMP_CODE) AS [PHONE_IP]
			, B.COM_NUMBER
			, B.COM_REMARK
			, CASE WHEN IP_CODE IS NOT NULL THEN ''Y'' ELSE ''N'' END AS IS_IPCODE
			, A.CH_NUM
			, A.RECORD_YN
			, WORK_TYPE
			, CTI_USE_YN
			, B.COM_OFFICE_VER
			, B.COM_HANGLE_VER
		FROM EMP_MASTER A WITH(NOLOCK)
		LEFT JOIN IP_MASTER B WITH(NOLOCK) ON A.EMP_CODE = B.CONNECT_CODE AND B.IP_TYPE = 1		
	)
	SELECT 
		@TOTAL_COUNT = COUNT(*)
	FROM LIST A
	INNER JOIN EMP_TEAM B ON A.TEAM_CODE = B.TEAM_CODE
	WHERE ' + @WHERE + ';

	WITH LIST AS
	(
		SELECT 
			A.EMP_CODE
			, A.KOR_NAME
			, A.INNER_NUMBER1
			, A.INNER_NUMBER2
			, A.INNER_NUMBER3
			, A.INNER_NUMBER1 + ''-'' + A.INNER_NUMBER2 + ''-'' + A.INNER_NUMBER3 AS [INNER_NUMBER]
			, DBO.XN_CUS_GET_IP_NUMBER(1, A.EMP_CODE) AS [PC_IP]
			, DBO.XN_CUS_GET_IP_NUMBER(2, A.EMP_CODE) AS [PHONE_IP]
			, B.COM_NUMBER
			, B.COM_REMARK
			, A.CH_NUM
			, A.TEAM_CODE
			, A.RECORD_YN
			, A.WORK_TYPE
			, A.NEW_DATE
			, CASE WHEN IP_CODE IS NOT NULL THEN ''Y'' ELSE ''N'' END AS IS_IPCODE
			, CTI_USE_YN
			, B.COM_OFFICE_VER
			, B.COM_HANGLE_VER
		FROM EMP_MASTER A
		LEFT JOIN IP_MASTER B WITH(NOLOCK) ON A.EMP_CODE = B.CONNECT_CODE AND B.IP_TYPE = 1	
	) 

	SELECT 
		A.EMP_CODE
		, A.KOR_NAME
		, B.TEAM_NAME
		, A.INNER_NUMBER1
		, A.INNER_NUMBER2
		, A.INNER_NUMBER3
		, A.INNER_NUMBER
		, PC_IP
		, PHONE_IP
		, COM_NUMBER
		, COM_REMARK
		, A.CH_NUM
		, A.RECORD_YN
		, A.IS_IPCODE
		, A.CTI_USE_YN
		, CASE WHEN ISNULL(A.COM_OFFICE_VER, '''') = '''' THEN ''N'' ELSE A.COM_OFFICE_VER END COM_OFFICE_VER
		, CASE WHEN ISNULL(A.COM_HANGLE_VER, '''') = '''' THEN ''N'' ELSE A.COM_HANGLE_VER END COM_HANGLE_VER
	FROM LIST A
	INNER JOIN EMP_TEAM B ON A.TEAM_CODE = B.TEAM_CODE
	WHERE ' + @WHERE + '
	ORDER BY ' + @SORT_STRING + '
	OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
	ROWS ONLY';
	 

	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@TOTAL_COUNT INT OUTPUT,
		@TEAM_CODE CHAR(3),
		@IS_IPCODE CHAR(1),
		@IS_RECORD CHAR(1),
		@IS_CTI CHAR(1),
		@COM_OFFICE_VER VARCHAR(10),
		@COM_HANGLE_VER VARCHAR(10),
		@EMP_CODE CHAR(7),
		@EMP_NAME VARCHAR(20),
		@INNER_NUMBER VARCHAR(12),
		@SEARCH_TYPE CHAR(1),
		@COM_NUMBER VARCHAR(10),
		@IPADDRESS VARCHAR(15)';

	--PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, 
		@PAGE_INDEX,
		@PAGE_SIZE,
		@TOTAL_COUNT OUTPUT,
		@TEAM_CODE,
		@IS_IPCODE,
		@IS_RECORD,
		@IS_CTI,
		@COM_OFFICE_VER,
		@COM_HANGLE_VER,
		@EMP_CODE,
		@EMP_NAME,
		@INNER_NUMBER,
		@SEARCH_TYPE,
		@COM_NUMBER,
		@IPADDRESS
END
GO
