USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_WEB_MENU_ITEM_PACKGAGE_PAGING_LIST_SELECT
■ DESCRIPTION				: 베스트 상품 상품 검색 페이징처리
■ INPUT PARAMETER			: 
	@SITE_CODE				: 사이트 코드
	@MENU_CODE				: 메뉴 코드
	@SEC_CODE				: 섹션코드
	@PAGE_INDEX  INT		: 현재 페이지
	@PAGE_SIZE  INT			: 한 페이지 표시 게시물 수
■ OUTPUT PARAMETER			: 
	@TOTAL_COUNT INT OUTPUT	: 총 상품 수
■ EXEC						: 

	DECLARE @PAGE_INDEX INT,
	@PAGE_SIZE  INT,
	@TOTAL_COUNT INT, 
	@KEY		VARCHAR(400),
	@ORDER_BY	INT

	SELECT @PAGE_INDEX=1,@PAGE_SIZE=40,@KEY=N'MenuCode=10209&Provider=5&GroupCode=UPFG0001,UPFG0020,UPFG0003,UPF1,UPFG600&SectionCode=1&SiteCode=VGT',@ORDER_BY=1

	exec XP_WEB_MENU_ITEM_PACKGAGE_PAGING_LIST_SELECT @page_index, @page_size, @total_count output, @key, @order_by
	SELECT @TOTAL_COUNT

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2013-08-30		김성호			최초생성
   2013-10-04		김성호			중복 상품 제거
   2014-10-20		김성호			상품별 GROUP BY 오류 수정 (ROW_NUMBER 이용)
   2016-05-02		박형만			PKG_MASTER  SHOW_YN = Y 조건 추가 (숨김처리된 마스터 나옴현상 해결 ) 
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[XP_WEB_MENU_ITEM_PACKGAGE_PAGING_LIST_SELECT]
(
	@PAGE_INDEX		INT,
	@PAGE_SIZE		INT,
	@TOTAL_COUNT	INT OUTPUT,
	@KEY			VARCHAR(400),
	@ORDER_BY		INT
)
AS  
BEGIN

	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

	DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(1000), @WHERE_1 NVARCHAR(100), @WHERE_2 NVARCHAR(100), @SORT_STRING NVARCHAR(50), @MENU_STRING NVARCHAR(1000);
	DECLARE @SITE_CODE	VARCHAR(3), @MENU_CODE VARCHAR(20), @ITEM_LEVEL VARCHAR(20), @SEC_CODE	VARCHAR(4)

	SELECT
		@SITE_CODE = DBO.FN_PARAM(@KEY, 'SiteCode'),
		@MENU_CODE = DBO.FN_PARAM(@KEY, 'MenuCode'),
		@ITEM_LEVEL = DBO.FN_PARAM(@KEY, 'Level'),
		@SEC_CODE = DBO.FN_PARAM(@KEY, 'SectionCode')

	IF ISNULL(@ITEM_LEVEL, '') = ''
	BEGIN
		SET @WHERE_1 = ''
	END
	ELSE
	BEGIN
		SET @WHERE_1 = 'WHERE Z.ITEM_LEVEL IN (' + @ITEM_LEVEL + ')'
	END

	IF ISNULL(@SEC_CODE, '') <> ''
	BEGIN
		SET @WHERE_2 = ''
	END
	BEGIN
		SET @WHERE_2 = ' AND A.SEC_CODE = @SEC_CODE'
	END

	-- SORT 조건 만들기  
	SELECT @SORT_STRING = (  
		CASE @ORDER_BY
			WHEN 1 THEN 'Z.REGION_ORDER'
			WHEN 2 THEN 'Z.THEME_ORDER'
			WHEN 3 THEN 'Z.GROUP_ORDER'
			WHEN 4 THEN 'Z.LOW_PRICE'
			WHEN 5 THEN 'Z.HIGH_PRICE DESC'
			WHEN 6 THEN 'Z.MASTER_NAME'
			ELSE 'Z.REGION_ORDER'
		END
	)

	SET @SQLSTRING = N'
	WITH LIST AS
	(
		SELECT Z.*, 0 AS [ITEM_LEVEL]
		FROM MNU_MASTER_REL Z WITH(NOLOCK)
		WHERE Z.SITE_CODE = @SITE_CODE AND Z.MENU_CODE = @MENU_CODE
		UNION ALL
		SELECT A.*, B.[ITEM_LEVEL] + 1
		FROM MNU_MASTER_REL A WITH(NOLOCK)
		INNER JOIN LIST B ON A.SITE_CODE = B.SITE_CODE AND A.PARENT_CODE = B.MENU_CODE
	)
	SELECT @MENU_STRING =  (
		SELECT ('','' + Z.MENU_CODE) AS [text()]
		FROM LIST Z
		' + @WHERE_1 + N'
		FOR XML PATH(''''));'

	SET @SQLSTRING = @SQLSTRING + N'
	SELECT @TOTAL_COUNT = COUNT(*)
	FROM (
		SELECT B.MASTER_CODE, '''' AS [PRO_CODE]
		FROM DBO.FN_SPLIT(@MENU_STRING, '','') Z
		INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = @SITE_CODE AND A.MENU_CODE = Z.Data' + @WHERE_2 + N'
		INNER JOIN PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE AND B.SHOW_YN =''Y'' 
		UNION
		SELECT C.MASTER_CODE, B.PRO_CODE
		FROM DBO.FN_SPLIT(@MENU_STRING, '','') Z
		INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = @SITE_CODE AND A.MENU_CODE = Z.Data' + @WHERE_2 + N'
		INNER JOIN PKG_DETAIL B WITH(NOLOCK) ON A.PRO_CODE = B.PRO_CODE
		INNER JOIN PKG_MASTER C WITH(NOLOCK) ON B.MASTER_CODE = C.MASTER_CODE AND C.SHOW_YN =''Y'' 
	) Z;'

	SET @SQLSTRING = @SQLSTRING + N'
	WITH LIST AS (
		SELECT Z.FLAG, Z.SITE_CODE, Z.MENU_CODE, Z.SEC_CODE, Z.GRP_SEQ, Z.ITEM_SEQ, Z.FILE_CODE, Z.MASTER_CODE, Z.PRICE
			, (CASE
				WHEN Z.PRO_CODE = '''' THEN (
						SELECT TOP 1 PRO_CODE FROM PKG_DETAIL AA WITH(NOLOCK)
						WHERE AA.MASTER_CODE = Z.MASTER_CODE AND AA.DEP_DATE > DATEADD(DAY, 7, GETDATE()) AND AA.SHOW_YN = ''Y''
							AND AA.RES_ADD_YN = ''Y'' AND (AA.MAX_COUNT = 0 OR (AA.MAX_COUNT - DBO.FN_PRO_GET_RES_COUNT(AA.PRO_CODE) > 0)))
				ELSE Z.PRO_CODE
			END) AS [PRO_CODE]
			, Z.REGION_ORDER, Z.THEME_ORDER, Z.GROUP_ORDER, Z.LOW_PRICE, Z.HIGH_PRICE
		FROM (

			SELECT ''M'' AS [FLAG], B.MASTER_CODE, '''' AS [PRO_CODE]
				, A.SITE_CODE, A.MENU_CODE, A.SEC_CODE, A.GRP_SEQ, A.ITEM_SEQ, B.LOW_PRICE AS [PRICE]
				, B.MAIN_FILE_CODE AS [FILE_CODE]
				, B.REGION_ORDER, B.THEME_ORDER, B.GROUP_ORDER, B.LOW_PRICE, B.HIGH_PRICE
			FROM (
				SELECT ROW_NUMBER() OVER(PARTITION BY A.MASTER_CODE ORDER BY A.SITE_CODE, A.MENU_CODE, A.SEC_CODE, A.GRP_SEQ, A.ITEM_SEQ) AS [ROWNUMBER], A.*
				FROM DBO.FN_SPLIT(@MENU_STRING, '','') Z
				INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = @SITE_CODE AND A.MENU_CODE = Z.Data' + @WHERE_2 + N'
			) A
			INNER JOIN PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
			WHERE A.ROWNUMBER = 1
			UNION ALL
			SELECT ''P'' AS [FALG], C.MASTER_CODE, B.PRO_CODE
				, A.SITE_CODE, A.MENU_CODE, A.SEC_CODE, A.GRP_SEQ, A.ITEM_SEQ, C.LOW_PRICE AS [PRICE]
				, C.MAIN_FILE_CODE AS [FILE_CODE]
				, C.REGION_ORDER, C.THEME_ORDER, C.GROUP_ORDER, C.LOW_PRICE, C.HIGH_PRICE
			FROM (
				SELECT ROW_NUMBER() OVER(PARTITION BY A.PRO_CODE ORDER BY A.SITE_CODE, A.MENU_CODE, A.SEC_CODE, A.GRP_SEQ, A.ITEM_SEQ) AS [ROWNUMBER], A.*
				FROM DBO.FN_SPLIT(@MENU_STRING, '','') Z
				INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = @SITE_CODE AND A.MENU_CODE = Z.Data' + @WHERE_2 + N'
			) A
			INNER JOIN PKG_DETAIL B WITH(NOLOCK) ON A.PRO_CODE = B.PRO_CODE
			INNER JOIN PKG_MASTER C WITH(NOLOCK) ON B.MASTER_CODE = C.MASTER_CODE
			WHERE A.ROWNUMBER = 1
		) Z
		ORDER BY ' + @SORT_STRING + N'
		OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
		ROWS ONLY
	)
	SELECT Z.*
		, A.IMG_URL, A.PRO_NAME, A.PKG_COMMENT, A.DTI_ITEM1, A.DTI_ITEM2, A.DTI_ITEM3, A.DTI_ITEM4--, A.IMG_URL, A.LINK_URL
		, (SELECT TOP 1 PRICE_SEQ FROM PKG_DETAIL_PRICE AA WITH(NOLOCK) WHERE AA.PRO_CODE = Z.PRO_CODE ORDER BY ADT_PRICE) AS [PRICE_SEQ]
		, B.GRP_TITLE, B.GRP_CODE, B.GRP_DESC
		, C.DEP_DATE, C.TOUR_NIGHT, C.TOUR_DAY, C.TOUR_JOURNEY
		, D.*
	FROM LIST Z
	INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = Z.SITE_CODE AND A.MENU_CODE = Z.MENU_CODE AND A.SEC_CODE = Z.SEC_CODE AND A.GRP_SEQ = Z.GRP_SEQ AND A.ITEM_SEQ = Z.ITEM_SEQ
	INNER JOIN MNU_MNG_GROUP B WITH(NOLOCK) ON A.SITE_CODE = B.SITE_CODE AND A.MENU_CODE = B.MENU_CODE AND A.SEC_CODE = B.SEC_CODE AND A.GRP_SEQ = B.GRP_SEQ
	INNER JOIN PKG_DETAIL C WITH(NOLOCK) ON C.PRO_CODE = Z.PRO_CODE
	LEFT JOIN INF_FILE_MASTER D WITH(NOLOCK) ON D.FILE_CODE = Z.FILE_CODE
	ORDER BY ' + @SORT_STRING + N';'

	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@TOTAL_COUNT INT OUTPUT,
		@MENU_STRING NVARCHAR(1000),
		@SITE_CODE	VARCHAR(3),
		@MENU_CODE	VARCHAR(20),
		@SEC_CODE	VARCHAR(4)';

	--PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@PAGE_INDEX,
		@PAGE_SIZE,
		@TOTAL_COUNT OUTPUT,
		@MENU_STRING,
		@SITE_CODE,
		@MENU_CODE,
		@SEC_CODE;

END



GO
