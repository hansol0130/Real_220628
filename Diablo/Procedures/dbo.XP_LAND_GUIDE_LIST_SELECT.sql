USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*================================================================================================================
■ USP_NAME					: XP_LAND_GUIDE_LIST_SELECT
■ DESCRIPTION				: 랜드사 가이드 행사진행정보 리스트 검색
■ INPUT PARAMETER			: 
	@PAGE_INDEX  INT		: 현재 페이지
	@PAGE_SIZE  INT			: 한 페이지 표시 게시물 수
	@KEY		VARCHAR(400): 검색 키
	@ORDER_BY	INT			: 정렬 순서
■ OUTPUT PARAMETER			: 
	@TOTAL_COUNT INT OUTPUT	: 총 검색된 수       
■ EXEC						: 
	DECLARE @PAGE_INDEX INT,
	@PAGE_SIZE  INT,
	@TOTAL_COUNT INT,
	@KEY		VARCHAR(400),
	@ORDER_BY	INT

	SELECT @PAGE_INDEX=1,@PAGE_SIZE=10,@KEY=N'GuideName=가이드김&AgtCode=93001',@ORDER_BY=1

	exec XP_LAND_GUIDE_LIST_SELECT @page_index, @page_size, @total_count output , @key, @order_by
	SELECT @TOTAL_COUNT
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2013-05-09		오인규			최초생성    
   2013-01-13		정지용			ACR_SEQ_NO 추가 / GROUP BY 잘못된거 수정
   2013-01-14		정지용			TOTAL AVG 수정 / GROUP BY X.CNT 추가 / @TOTAL_COUNT AS CNT 추가
   2014-01-15		김성호			쿼리 전면 수정
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[XP_LAND_GUIDE_LIST_SELECT] 
 ( 
    @PAGE_INDEX  INT,
	@PAGE_SIZE  INT,
	@TOTAL_COUNT INT OUTPUT,
	@KEY		VARCHAR(400),
	@ORDER_BY	INT
) 
AS 
BEGIN 

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

	DECLARE @SQLSTRING NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000), @TOTAL_AVG DECIMAL(4,1);

	DECLARE 
		@GUIDE_NAME	VARCHAR(50), -- 가이드 코드 
		@AGT_CODE	VARCHAR(10) -- 랜드사코드

	SELECT
		@GUIDE_NAME = DBO.FN_PARAM(@KEY, 'GuideName'),
		@AGT_CODE = DBO.FN_PARAM(@KEY, 'AgtCode')


	SET @SQLSTRING = N'
	WITH LIST AS
	(
		SELECT A.OTR_POL_MASTER_SEQ, COUNT(*) AS [QUS_COUNT], SUM(CONVERT(decimal, D.EXAMPLE_DESC)) AS [POINT], AVG(CONVERT(decimal, D.EXAMPLE_DESC)) AS [AVG]
		FROM OTR_POL_MASTER A WITH(NOLOCK)
		INNER JOIN OTR_POL_QUESTION B WITH(NOLOCK) ON A.OTR_POL_MASTER_SEQ = B.OTR_POL_MASTER_SEQ
		INNER JOIN OTR_POL_ANSWER C WITH(NOLOCK) ON B.OTR_POL_MASTER_SEQ = C.OTR_POL_MASTER_SEQ AND B.OTR_POL_QUESTION_SEQ = C.OTR_POL_QUESTION_SEQ
		INNER JOIN OTR_POL_DETAIL D WITH(NOLOCK) ON C.OTR_POL_MASTER_SEQ = D.OTR_POL_MASTER_SEQ AND C.OTR_POL_QUESTION_SEQ = D.OTR_POL_QUESTION_SEQ AND C.OTR_POL_EXAMPLE_SEQ = D.OTR_POL_EXAMPLE_SEQ
		WHERE A.AGT_CODE = @AGT_CODE AND A.GUIDE_NAME = @GUIDE_NAME AND B.QUS_TYPE = ''1''
		GROUP BY A.OTR_POL_MASTER_SEQ
	)
	SELECT @TOTAL_COUNT = COUNT(*), @TOTAL_AVG = (SUM(A.AVG) / COUNT(*))
	FROM LIST A;

	WITH LIST AS
	(
		SELECT A.OTR_POL_MASTER_SEQ, COUNT(*) AS [QUS_COUNT], SUM(CONVERT(decimal, D.EXAMPLE_DESC)) AS [POINT]
		FROM OTR_POL_MASTER A WITH(NOLOCK)
		INNER JOIN OTR_POL_QUESTION B WITH(NOLOCK) ON A.OTR_POL_MASTER_SEQ = B.OTR_POL_MASTER_SEQ
		INNER JOIN OTR_POL_ANSWER C WITH(NOLOCK) ON B.OTR_POL_MASTER_SEQ = C.OTR_POL_MASTER_SEQ AND B.OTR_POL_QUESTION_SEQ = C.OTR_POL_QUESTION_SEQ
		INNER JOIN OTR_POL_DETAIL D WITH(NOLOCK) ON C.OTR_POL_MASTER_SEQ = D.OTR_POL_MASTER_SEQ AND C.OTR_POL_QUESTION_SEQ = D.OTR_POL_QUESTION_SEQ AND C.OTR_POL_EXAMPLE_SEQ = D.OTR_POL_EXAMPLE_SEQ
		INNER JOIN OTR_MASTER E WITH(NOLOCK) ON A.OTR_SEQ = E.OTR_SEQ
		INNER JOIN PKG_DETAIL F WITH(NOLOCK) ON E.PRO_CODE = F.PRO_CODE
		WHERE A.AGT_CODE = @AGT_CODE AND A.GUIDE_NAME = @GUIDE_NAME AND B.QUS_TYPE = ''1''
		GROUP BY A.OTR_POL_MASTER_SEQ
		ORDER BY MIN(F.DEP_DATE) DESC
		OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
		ROWS ONLY
	)
	SELECT Z.OTR_POL_MASTER_SEQ, B.OTR_SEQ, B.PRO_CODE, C.PRO_NAME, A.OTR_CITY, CONVERT(DECIMAL(4,1), (Z.POINT / Z.QUS_COUNT)) AS [AVG], C.DEP_DATE
		, (SELECT TOP 1 AM.ACR_SEQ_NO FROM ACR_MASTER AM WHERE AM.PRO_CODE = B.PRO_CODE) AS ACR_SEQ_NO, @TOTAL_AVG AS [TOTAL_AVG]
	FROM LIST Z
	INNER JOIN OTR_POL_MASTER A WITH(NOLOCK) ON Z.OTR_POL_MASTER_SEQ = A.OTR_POL_MASTER_SEQ
	INNER JOIN OTR_MASTER B WITH(NOLOCK) ON A.OTR_SEQ = B.OTR_SEQ
	INNER JOIN PKG_DETAIL C WITH(NOLOCK) ON B.PRO_CODE = C.PRO_CODE
	ORDER BY C.DEP_DATE DESC;
	'

	SET @PARMDEFINITION = N'@PAGE_INDEX INT, @PAGE_SIZE INT, @TOTAL_COUNT INT OUTPUT,  @GUIDE_NAME VARCHAR(20), @AGT_CODE VARCHAR(10), @TOTAL_AVG DECIMAL(4,1)';

	--PRINT @SQLSTRING
		
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @PAGE_INDEX, @PAGE_SIZE, @TOTAL_COUNT OUTPUT, @GUIDE_NAME, @AGT_CODE, @TOTAL_AVG;

/*
	SELECT
		@GUIDE_NAME = DBO.FN_PARAM(@KEY, 'GuideName'),
		@AGT_CODE = DBO.FN_PARAM(@KEY, 'AgtCode'),
		@WHERE = '',
		@ORDER = ' X.DEP_DATE DESC'

		SET @SQLSTRING = N'
		DECLARE @TOTAL_AVG FLOAT ;
			SELECT  @TOTAL_COUNT = COUNT(*)
			FROM
				(
				SELECT A.OTR_SEQ,A.OTR_CITY,C.PRO_CODE,C.PRO_NAME,C.DEP_DATE
				FROM dbo.OTR_POL_MASTER A
				INNER JOIN dbo.OTR_MASTER B ON A.OTR_SEQ = B.OTR_SEQ
				INNER JOIN dbo.PKG_DETAIL C ON B.PRO_CODE = C.PRO_CODE
				WHERE A.GUIDE_NAME = ''' + @GUIDE_NAME + ''' 
				AND    A.AGT_CODE = ''' + @AGT_CODE + '''
				GROUP BY A.OTR_POL_MASTER_SEQ,A.OTR_SEQ,A.OTR_CITY,C.PRO_CODE,C.PRO_NAME,C.DEP_DATE
				) X;

		SELECT  
				--@TOTAL_AVG = SUM(dbo.XN_ASG_EVT_GUIDE_REPORT_TOTALAVG(X.PRO_CODE,''' + @AGT_CODE + ''',''' + @GUIDE_NAME + ''' ,X.OTR_CITY)) 이전꺼
				@TOTAL_AVG = ROUND(CONVERT(FLOAT, SUM(dbo.XN_ASG_EVT_GUIDE_REPORT_TOTALAVG(X.PRO_CODE,''' + @AGT_CODE + ''',''' + @GUIDE_NAME + ''',X.OTR_CITY))) / x.CNT, 1)
			FROM
				(
				SELECT A.OTR_SEQ,A.OTR_CITY,C.PRO_CODE,C.PRO_NAME,C.DEP_DATE, @TOTAL_COUNT AS CNT
				FROM dbo.OTR_POL_MASTER A
				INNER JOIN dbo.OTR_MASTER B ON A.OTR_SEQ = B.OTR_SEQ
				INNER JOIN dbo.PKG_DETAIL C ON B.PRO_CODE = C.PRO_CODE
				WHERE A.GUIDE_NAME = ''' + @GUIDE_NAME + ''' 
				AND    A.AGT_CODE = ''' + @AGT_CODE + '''
				GROUP BY A.OTR_POL_MASTER_SEQ,A.OTR_SEQ,A.OTR_CITY,C.PRO_CODE,C.PRO_NAME,C.DEP_DATE
				) X GROUP BY X.CNT;


			WITH LIST AS
			(
			SELECT X.OTR_POL_MASTER_SEQ
					FROM
					(
					SELECT A.OTR_POL_MASTER_SEQ,A.OTR_SEQ,A.OTR_CITY,C.PRO_CODE,C.PRO_NAME,C.DEP_DATE
					FROM dbo.OTR_POL_MASTER A
					INNER JOIN dbo.OTR_MASTER B ON A.OTR_SEQ = B.OTR_SEQ
					INNER JOIN dbo.PKG_DETAIL C ON B.PRO_CODE = C.PRO_CODE
					WHERE A.GUIDE_NAME =''' + @GUIDE_NAME + ''' 
					AND    A.AGT_CODE = ''' + @AGT_CODE + '''
					GROUP BY A.OTR_POL_MASTER_SEQ,A.OTR_SEQ,A.OTR_CITY,C.PRO_CODE,C.PRO_NAME,C.DEP_DATE
					) X
			ORDER BY X.DEP_DATE DESC
				OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
				ROWS ONLY
			)
			SELECT X.*
					, dbo.XN_ASG_EVT_GUIDE_REPORT_TOTALAVG(X.PRO_CODE,''' + @AGT_CODE + ''',''' + @GUIDE_NAME + ''' ,X.OTR_CITY) AS AVG
					,'''' AS ETC
					,@TOTAL_AVG AS TOTAL_AVG,
					(SELECT TOP 1 AM.ACR_SEQ_NO FROM ACR_MASTER AM WHERE AM.PRO_CODE = X.PRO_CODE) AS ACR_SEQ_NO
			FROM LIST Z
			INNER JOIN 
			(
			SELECT A.OTR_POL_MASTER_SEQ,A.OTR_SEQ,A.OTR_CITY,C.PRO_CODE,C.PRO_NAME,C.DEP_DATE
			FROM dbo.OTR_POL_MASTER A
			INNER JOIN dbo.OTR_MASTER B ON A.OTR_SEQ = B.OTR_SEQ
			INNER JOIN dbo.PKG_DETAIL C ON B.PRO_CODE = C.PRO_CODE
			WHERE A.GUIDE_NAME =''' + @GUIDE_NAME + ''' 
			AND    A.AGT_CODE = ''' + @AGT_CODE + '''
			GROUP BY A.OTR_POL_MASTER_SEQ,A.OTR_SEQ,A.OTR_CITY,C.PRO_CODE,C.PRO_NAME,C.DEP_DATE
			) X ON Z.OTR_POL_MASTER_SEQ = X.OTR_POL_MASTER_SEQ
			ORDER BY X.DEP_DATE DESC'

	
	SET @PARMDEFINITION = N'@PAGE_INDEX  INT, @PAGE_SIZE  INT, @TOTAL_COUNT INT OUTPUT,  @GUIDE_NAME VARCHAR(20), @AGT_CODE VARCHAR(10) ';
	PRINT @SQLSTRING
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @PAGE_INDEX, @PAGE_SIZE, @TOTAL_COUNT OUTPUT , @GUIDE_NAME,@AGT_CODE ;			 
*/

END 


GO
