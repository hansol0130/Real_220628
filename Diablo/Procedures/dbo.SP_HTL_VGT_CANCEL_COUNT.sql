USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*-------------------------------------------------------------------------------------------------
■ USP_NAME					: SP_HTL_VGT_CANCEL_COUNT
■ DESCRIPTION				: VGT 취소 시 좌석 카운트
■ INPUT PARAMETER			:                     
		@RES_CODE			: 예약 코드
		@ERRORCODE			: 에러 코드
		@ERRORMSG			: 에러 메세지
■ EXEC						: 

declare @p2 int
set @p2=100
declare @p3 nvarchar(100)
set @p3=N'좌석이 부족합니다.'
exec SP_HTL_VGT_CANCEL_COUNT @RES_CODE=N'RH1109230759',@ERRORCODE=@p2 output,@ERRORMSG=@p3 output
select @p2, @p3


■ AUTHOR					: 
■ DATE						:  
---------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
---------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
---------------------------------------------------------------------------------------------------
2011-09-22			김성호			최초생성
-------------------------------------------------------------------------------------------------*/ 

CREATE PROCEDURE [dbo].[SP_HTL_VGT_CANCEL_COUNT]
(
	@RES_CODE			VARCHAR(20),
	@ERRORCODE			INTEGER OUTPUT,
	@ERRORMSG			VARCHAR(100) OUTPUT
)
AS
BEGIN

	BEGIN TRY
	
	BEGIN TRAN
	
	DECLARE @MASTER_CODE VARCHAR(20), @PRICE_SEQ_LIST VARCHAR(30), @CHECK_IN DATETIME, @CHECK_OUT DATETIME
	
	-- 잔여좌석 체크
	IF NOT EXISTS(
		SELECT 1 FROM HTL_PRICE_DETAIL A
		INNER JOIN (
			SELECT A.MASTER_CODE, C.PRICE_SEQ, D.DATE AS [BOOKING_DATE], SUM(C.ROOM_COUNT) AS [RES_ROOM_COUNT]
			FROM RES_MASTER A
			INNER JOIN RES_HTL_ROOM_MASTER B ON A.RES_CODE = B.RES_CODE
			INNER JOIN RES_HTL_ROOM_DETAIL C ON B.RES_CODE = C.RES_CODE
			INNER JOIN PUB_TMP_DATE D ON B.CHECK_IN <= D.DATE AND B.CHECK_OUT > D.DATE
			WHERE A.RES_CODE = @RES_CODE
			GROUP BY A.MASTER_CODE, C.PRICE_SEQ, D.DATE
		) B ON A.MASTER_CODE = B.MASTER_CODE AND A.PRICE_SEQ = B.PRICE_SEQ AND A.BOOKING_DATE = B.BOOKING_DATE
		WHERE (A.RES_COUNT - B.RES_ROOM_COUNT) < 0
	)
	BEGIN
		WITH LIST AS
		(
			SELECT A.MASTER_CODE, C.PRICE_SEQ, D.DATE AS [BOOKING_DATE], SUM(C.ROOM_COUNT) AS [RES_ROOM_COUNT]
			FROM RES_MASTER A
			INNER JOIN RES_HTL_ROOM_MASTER B ON A.RES_CODE = B.RES_CODE
			INNER JOIN RES_HTL_ROOM_DETAIL C ON B.RES_CODE = C.RES_CODE
			INNER JOIN PUB_TMP_DATE D ON B.CHECK_IN <= D.DATE AND B.CHECK_OUT > D.DATE
			WHERE A.RES_CODE = @RES_CODE
			GROUP BY A.MASTER_CODE, C.PRICE_SEQ, D.DATE
		)
		--SELECT A.MASTER_CODE, A.PRICE_SEQ, A.BOOKING_DATE, A.RES_COUNT, C.TOTAL_ROOM_COUNT, B.RES_ROOM_COUNT
		UPDATE A SET A.RES_COUNT = C.TOTAL_ROOM_COUNT - B.RES_ROOM_COUNT
		FROM HTL_PRICE_DETAIL A
		INNER JOIN LIST B ON A.MASTER_CODE = B.MASTER_CODE AND A.PRICE_SEQ = B.PRICE_SEQ AND A.BOOKING_DATE = B.BOOKING_DATE
		LEFT JOIN (
			-- 해당 가격 예약자 수
			SELECT A.MASTER_CODE, D.PRICE_SEQ, E.DATE AS [BOOKING_DATE], SUM(D.ROOM_COUNT) AS [TOTAL_ROOM_COUNT]
			FROM LIST A
			INNER JOIN RES_MASTER B ON A.MASTER_CODE = B.MASTER_CODE AND B.RES_STATE <= 7
			INNER JOIN RES_HTL_ROOM_MASTER C ON B.RES_CODE = C.RES_CODE
			INNER JOIN RES_HTL_ROOM_DETAIL D ON C.RES_CODE = D.RES_CODE AND D.PRICE_SEQ = A.PRICE_SEQ
			INNER JOIN PUB_TMP_DATE E ON C.CHECK_IN <= E.DATE AND C.CHECK_OUT > E.DATE
			WHERE A.BOOKING_DATE = E.DATE
			GROUP BY A.MASTER_CODE, D.PRICE_SEQ, E.DATE
		) C ON B.MASTER_CODE = C.MASTER_CODE AND B.PRICE_SEQ = C.PRICE_SEQ AND B.BOOKING_DATE = C.BOOKING_DATE

	
		--UPDATE A SET A.RES_COUNT = A.RES_COUNT - B.RES_ROOM_COUNT
		--FROM HTL_PRICE_DETAIL A
		--INNER JOIN (
		--	SELECT A.MASTER_CODE, C.PRICE_SEQ, D.DATE AS [BOOKING_DATE], SUM(C.ROOM_COUNT) AS [RES_ROOM_COUNT]
		--	FROM RES_MASTER A
		--	INNER JOIN RES_HTL_ROOM_MASTER B ON A.RES_CODE = B.RES_CODE
		--	INNER JOIN RES_HTL_ROOM_DETAIL C ON B.RES_CODE = C.RES_CODE
		--	INNER JOIN PUB_TMP_DATE D ON B.CHECK_IN <= D.DATE AND B.CHECK_OUT > D.DATE
		--	WHERE A.RES_CODE = @RES_CODE
		--	GROUP BY A.MASTER_CODE, C.PRICE_SEQ, D.DATE
		--) B ON A.MASTER_CODE = B.MASTER_CODE AND A.PRICE_SEQ = B.PRICE_SEQ AND A.BOOKING_DATE = B.BOOKING_DATE
		
		SET @ERRORCODE = 0
		SET @ERRORMSG = '취소완료'
	END
	ELSE
	BEGIN
		SET @ERRORCODE = 100
		SET @ERRORMSG = '좌석이 부족합니다.'
	END
	
	COMMIT TRAN

	END TRY
	BEGIN CATCH 
		SET @ERRORCODE = 999
		SET @ERRORMSG = ERROR_MESSAGE()

		ROLLBACK TRAN
	END CATCH
END

GO
