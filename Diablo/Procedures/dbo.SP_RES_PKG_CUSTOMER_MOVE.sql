USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*-------------------------------------------------------------------------------------------------
■ USP_Name					: SP_RES_PKG_CUSTOMER_MOVE  
■ Description				: 출발자 예약 이동 프로시저
■ Input Parameter			:                     
		@FROM_RES_CODE		:
		@TO_RES_CODE		:
		@TO_PRO_CODE		:
		@TO_PRICE_SEQ		:
		@SEQ_LIST			:
		@EMP_CODE			:
■ Output Parameter			:                
■ Output Value				:                 
■ Exec						: EXEC SP_RES_PKG_CUSTOMER_MOVE  
■ Author					: 
■ Date						:  
---------------------------------------------------------------------------------------------------
■ Change History                   
---------------------------------------------------------------------------------------------------
   Date				Author			Description           
---------------------------------------------------------------------------------------------------
									최초생성
2013-01-21							IPIN_CONN_INFO 추가   
2013-11-11			김성호			@SEQ_LIST VARCHAR(100) -> VARCHAR(4000) 변환
2014-07-01							예약출발자 이동시 , 유류할증료 기록 복사
2015-03-03			김성호			주민번호 삭제, 생년월일 추가
2015-08-12			박형만			행사 이동시 QCHARGE(TAX) 추가
2016-06-02			김성호			환불, 페널티도 이동되도록 수정 
2018-06-22			박형만			FAX 인증도 넣기 
2019-02-15			김남훈			여권정보 이동 추가
-------------------------------------------------------------------------------------------------*/ 
CREATE  PROCEDURE [dbo].[SP_RES_PKG_CUSTOMER_MOVE]
	@FROM_RES_CODE		CHAR(12),
	@TO_RES_CODE		CHAR(12),
	@TO_PRO_CODE		VARCHAR(20),
	@TO_PRICE_SEQ		INT,
	@SEQ_LIST			VARCHAR(4000),
	@EMP_CODE			CHAR(7)
AS

	SET NOCOUNT ON 

	BEGIN
		DECLARE @QUERY NVARCHAR(4000)
		DECLARE @ADT_PRICE INT, @CHD_PRICE INT, @INF_PRICE INT
		DECLARE @ADT_QCHARGE INT, @CHD_QCHARGE INT, @INF_QCHARGE INT , @QCHAREGE_DATE DATETIME  
		DECLARE @POINT_YN CHAR(1), @POINT_PRICE INT, @POINT_RATE NUMERIC(4, 2)
		
		---- 이동할 행사 가격 정보 검색
		--SELECT
		--	@ADT_PRICE = ISNULL(ADT_PRICE, 0)
		--	, @CHD_PRICE = ISNULL(CHD_PRICE, 0)
		--	, @INF_PRICE = ISNULL(INF_PRICE, 0)
		--FROM PKG_DETAIL_PRICE
		--WHERE PRO_CODE = @TO_PRO_CODE AND PRICE_SEQ = @TO_PRICE_SEQ

		-- 이동할 행사의 가격& 유류할증료 정보 
		SELECT
			@ADT_PRICE = ISNULL(ADT_PRICE, 0)
			, @CHD_PRICE = ISNULL(CHD_PRICE, 0)
			, @INF_PRICE = ISNULL(INF_PRICE, 0)
			, @ADT_QCHARGE = ISNULL(ADT_SALE_QCHARGE, 0)
			, @CHD_QCHARGE = ISNULL(CHD_SALE_QCHARGE, 0)
			, @INF_QCHARGE = ISNULL(INF_SALE_QCHARGE, 0)
			, @QCHAREGE_DATE = SALE_QCHARGE_DATE 
		FROM DBO.XN_PKG_DETAIL_PRICE(@TO_PRO_CODE, @TO_PRICE_SEQ)

		-- 이동할 행사의 포인트 정보 검색
		SELECT @POINT_YN = ISNULL(POINT_YN, 'Y'),
			   @POINT_PRICE = ISNULL(POINT_PRICE, 0),
			   @POINT_RATE = ISNULL(POINT_RATE, 0.00)
		FROM DBO.PKG_DETAIL_PRICE WITH(NOLOCK)
		WHERE PRO_CODE = @TO_PRO_CODE
		  AND PRICE_SEQ = @TO_PRICE_SEQ

		IF ISNULL(@SEQ_LIST, '') = ''
		BEGIN
			SET @QUERY = N'SELECT SEQ_NO FROM RES_CUSTOMER_damo WITH(NOLOCK)
			WHERE RES_CODE = ''' + @FROM_RES_CODE + N''' AND RES_STATE IN (0, 3, 4)'
			--PRINT '1'
		END
		ELSE
		BEGIN
			SET @QUERY = N'SELECT SEQ_NO FROM RES_CUSTOMER_damo WITH(NOLOCK)
			WHERE RES_CODE = ''' + @FROM_RES_CODE + N''' AND SEQ_NO IN (' + @SEQ_LIST + N') AND RES_STATE IN (0, 3, 4)'
			--PRINT '2'
		END

		SET @QUERY = 'DECLARE ARROW CURSOR
		FOR ' + @QUERY

		--PRINT @QUERY
		EXEC (@QUERY)

		DECLARE @FROM_SEQ_NO INT, @TO_SEQ_NO INT, @PRO_PRICE INT, @PRO_QCHARGE INT 

		OPEN ARROW

		FETCH NEXT FROM ARROW INTO @FROM_SEQ_NO

		WHILE @@FETCH_STATUS = 0
		BEGIN
			--DECLARE 
			SELECT @TO_SEQ_NO = (ISNULL(MAX(SEQ_NO), 0) + 1) FROM RES_CUSTOMER_damo WHERE RES_CODE = @TO_RES_CODE
			
			SELECT @PRO_PRICE = (
				CASE AGE_TYPE
					WHEN 0 THEN @ADT_PRICE
					WHEN 1 THEN @CHD_PRICE
					WHEN 2 THEN @INF_PRICE
					ELSE 0
				END) ,
				@PRO_QCHARGE  = 
				(CASE AGE_TYPE
					WHEN 0 THEN @ADT_QCHARGE
					WHEN 1 THEN @CHD_QCHARGE
					WHEN 2 THEN @INF_QCHARGE
					ELSE 0
				END) 
			FROM RES_CUSTOMER_damo WITH(NOLOCK)
			WHERE RES_CODE = @FROM_RES_CODE AND SEQ_NO = @FROM_SEQ_NO

			SET @QUERY = N'
			INSERT INTO RES_CUSTOMER_damo (
				RES_CODE, SEQ_NO
				, RES_STATE, SEAT_YN, CUS_TYPE, CUS_GRADE, CUS_NO, CUS_NAME, LAST_NAME, FIRST_NAME
				, AGE_TYPE, GENDER, BIRTH_DATE, NOR_TEL1, NOR_TEL2, NOR_TEL3, EMAIL, VISA_YN, APIS_YN
				, PASS_YN, SEC_PASS_NUM, PASS_ISSUE, PASS_EXPIRE, [NATIONAL], ROOMING
				, IPIN_DUP_INFO, IPIN_CONN_INFO, SENDING_REMARK, ETC_REMARK, RETURN_YN
				, SALE_PRICE, CHG_PRICE, DC_PRICE
				, TAX_PRICE, PENALTY_PRICE, PENALTY_YN, CHG_REMARK
				, POINT_YN, POINT_PRICE, POINT_RATE
				, FIRST_QCHARGE
				, FIRST_QCHARGE_DATE 
				, NEW_CODE, NEW_DATE
				, MOV_RES_CODE 
				, FAX_SEQ
				, PPT_NO 
			)
			SELECT A.*
			FROM (
				SELECT
					''' + @TO_RES_CODE + N''' AS [RES_CODE], ' + CONVERT(VARCHAR(10), @TO_SEQ_NO) + N' AS [SEQ_NO]
					, 0 AS [RES_STATE], ''N'' AS [SEAT_YN], CUS_TYPE, CUS_GRADE, CUS_NO, CUS_NAME, LAST_NAME, FIRST_NAME
					, AGE_TYPE, GENDER, BIRTH_DATE, NOR_TEL1, NOR_TEL2, NOR_TEL3, EMAIL, VISA_YN, APIS_YN
					, PASS_YN, SEC_PASS_NUM, PASS_ISSUE, PASS_EXPIRE, [NATIONAL], '''' AS [ROOMING]
					, IPIN_DUP_INFO , IPIN_CONN_INFO, SENDING_REMARK, ETC_REMARK, RETURN_YN
					, SALE_PRICE, CHG_PRICE, DC_PRICE
					, TAX_PRICE, PENALTY_PRICE, PENALTY_YN, CHG_REMARK
					, POINT_YN, POINT_PRICE, POINT_RATE
					, FIRST_QCHARGE
					, FIRST_QCHARGE_DATE
					, ''' + @EMP_CODE + ''' AS [NEW_CODE], NEW_DATE
					, ''' + @FROM_RES_CODE + ''' AS [MOV_RES_CODE]
					, FAX_SEQ
					, PPT_NO
				FROM RES_CUSTOMER_damo WITH(NOLOCK)
				WHERE RES_CODE = ''' + @FROM_RES_CODE + ''' AND SEQ_NO = ' + CONVERT(VARCHAR(10), @FROM_SEQ_NO) + ' AND RES_STATE <> 0
				UNION
				SELECT
					''' + @TO_RES_CODE + N''' AS [RES_CODE], ' + CONVERT(VARCHAR(10), @TO_SEQ_NO) + N' AS [SEQ_NO]
					, 0 AS [RES_STATE], ''N'' AS [SEAT_YN], CUS_TYPE, CUS_GRADE, CUS_NO, CUS_NAME, LAST_NAME, FIRST_NAME
					, AGE_TYPE, GENDER, BIRTH_DATE, NOR_TEL1, NOR_TEL2, NOR_TEL3, EMAIL, VISA_YN, APIS_YN
					, PASS_YN, SEC_PASS_NUM, PASS_ISSUE, PASS_EXPIRE, [NATIONAL], '''' AS [ROOMING]
					, IPIN_DUP_INFO , IPIN_CONN_INFO, SENDING_REMARK, ETC_REMARK, RETURN_YN
					, ' + CONVERT(VARCHAR(10), @PRO_PRICE) + N' AS [SALE_PRICE], 0 AS [CHG_PRICE], 0 AS [DC_PRICE]
					, ' + CONVERT(VARCHAR(10), @PRO_QCHARGE) + N' AS [TAX_PRICE], 0 AS [PENALTY_PRICE], ''N'' AS [PENALTY_YN], '''' AS [CHG_REMARK]
					, ''' + @POINT_YN + N''' AS [POINT_YN], ' + CONVERT(VARCHAR(10), @POINT_PRICE) + N' AS [POINT_PRICE], ' + CONVERT(VARCHAR(10), @POINT_RATE) + N' AS [POINT_RATE]
					, ' + CONVERT(VARCHAR(10), @PRO_QCHARGE) + ' AS [FIRST_QCHARGE]
					, ' + ISNULL('''' + CONVERT(VARCHAR(10), @QCHAREGE_DATE, 121) + '''', 'NULL') + ' AS [FIRST_QCHARGE_DATE]
					, ''' + @EMP_CODE + ''' AS [NEW_CODE], NEW_DATE
					, ''' + @FROM_RES_CODE + ''' AS [MOV_RES_CODE]
					, FAX_SEQ
					, PPT_NO
				FROM RES_CUSTOMER_damo WITH(NOLOCK)
				WHERE RES_CODE = ''' + @FROM_RES_CODE + ''' AND SEQ_NO = ' + CONVERT(VARCHAR(10), @FROM_SEQ_NO) + ' AND RES_STATE = 0
			) A'

			--PRINT @QUERY
			EXEC (@QUERY)
		
		--여권 정보 이동
		DECLARE @PPT_LIST TABLE (PPT_NO int)
		INSERT INTO @PPT_LIST
		SELECT PPT_NO FROM PPT_MASTER WHERE RES_CODE = @FROM_RES_CODE AND RES_NO = @FROM_SEQ_NO
			
		UPDATE PPT_MASTER SET RES_CODE = @TO_RES_CODE , RES_NO = @TO_SEQ_NO WHERE RES_CODE = @FROM_RES_CODE AND RES_NO = @FROM_SEQ_NO
		UPDATE PPT_MASTER_LOG SET RES_CODE = @TO_RES_CODE  WHERE PPT_NO IN (SELECT PPT_NO FROM @PPT_LIST) AND RES_CODE = @FROM_RES_CODE
		UPDATE PPT_DETAIL SET RES_CODE = @TO_RES_CODE WHERE PPT_NO IN (SELECT PPT_NO FROM @PPT_LIST) AND RES_CODE = @FROM_RES_CODE


		FETCH NEXT FROM ARROW INTO @FROM_SEQ_NO
		END

		CLOSE ARROW

		DEALLOCATE ARROW
	END



GO
