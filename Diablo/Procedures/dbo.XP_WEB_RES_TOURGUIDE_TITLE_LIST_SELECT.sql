USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_WEB_RES_TOURGUIDE_TITLE_LIST_SELECT
■ DESCRIPTION				: 예약코드별 여행가이드 메뉴 리스트 검색
■ INPUT PARAMETER			: 
	@RES_CODE VARCHAR(20)	: 예약코드
■ OUTPUT PARAMETER			: 
■ EXEC						: 

	exec XP_WEB_RES_TOURGUIDE_TITLE_LIST_SELECT 'RP1306173703', 1, '6'

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2013-07-01		김성호			최초생성
   2013-07-04		김성호			관리정보 검색 추가
   2013-07-09		김성호			공항코드를 도시코드로 수정
   2013-07-10		김성호			여권번호 복호화 처리, 출입국 신고서 상품 타입별 조건 수정
   2013-07-11		김성호			여행자계약서, E-ticket, Voucher 조건 수정
   2013-07-15		김성호			호텔명, 호텔주소 추가, 여행 일정 수정, 괌(GU), 사이판(MP) 미국 출입국 신고서 나오게 수정
   2013-07-30		김성호			귀국편 항공 정보 출력, 출입국신고서 -> 출입국신고서 대체로 인해 항상 출력으로 수정
   2013-09-23		김성호			모바일을 위해 스텝번호 추가 입력
   2015-03-13		정지용			생년월일 추가
   2015-08-18		정지용			도착편 현지 출국일자 / 여권 발급일자 / 호텔 전화번호 추가
   2016-03-29		정지용			라오스 출입국 신고서 추가
   2016-06-08		정지용			FJ,NZ 피지, 뉴질랜드 추가
   2016-09-06		정지용			GU,MP 괌 / 사이판 추가
================================================================================================================*/ 

CREATE  PROCEDURE [dbo].[XP_WEB_RES_TOURGUIDE_TITLE_LIST_SELECT]
(
	@RES_CODE	VARCHAR(20),
	@SEQ_NO		INT,
	@STEP_NO	VARCHAR(3)
)

AS  
BEGIN

	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	DECLARE @TG_TYPE VARCHAR(1), @PRO_CODE VARCHAR(20), @PRICE_SEQ INT, @SCH_SEQ INT, @DEP_ARR_NATION_CODE VARCHAR(2), @HTL_MASTER_CODE VARCHAR(10), @TOUR_DAY INT
		, @DEP_DEP_CITY_CODE VARCHAR(3), @DEP_ARR_CITY_CODE VARCHAR(3), @DEP_DEP_DATE DATETIME, @DEP_TRANS_CODE VARCHAR(2), @DEP_TRANS_NUMBER VARCHAR(4)
		, @ARR_DEP_DATE DATETIME, @ARR_TRANS_CODE VARCHAR(2), @ARR_TRANS_NUMBER VARCHAR(4);

	-- 예약타입
	SELECT @TG_TYPE = (
			CASE
				WHEN A.PRO_TYPE = 1 AND A.NEW_TEAM_CODE = 514 THEN 'B'
				WHEN A.PRO_TYPE = 1 AND B.ATT_CODE = 'F' THEN 'F'
				WHEN A.PRO_TYPE = 2 THEN 'A'
				WHEN A.PRO_TYPE = 3 THEN 'H'
				ELSE 'P'
			END
		)
	FROM RES_MASTER_damo A WITH(NOLOCK)
	LEFT JOIN PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
	WHERE A.RES_CODE = @RES_CODE;

	-- 행사정보 검색
	SELECT @PRO_CODE = A.PRO_CODE, @PRICE_SEQ = A.PRICE_SEQ, @SCH_SEQ = A.SCH_SEQ, @DEP_ARR_NATION_CODE = (CASE WHEN A.NATION_CODE IN ('GU', 'MP') THEN 'US' ELSE A.NATION_CODE END)
		, @DEP_DEP_CITY_CODE = A.DEP_DEP_CITY_CODE, @DEP_ARR_CITY_CODE = A.DEP_ARR_CITY_CODE
		, @DEP_DEP_DATE = A.DEP_ARR_DATE, @DEP_TRANS_CODE = A.DEP_TRANS_CODE, @DEP_TRANS_NUMBER = A.DEP_TRANS_NUMBER, @ARR_DEP_DATE = A.ARR_DEP_DATE, @ARR_TRANS_CODE = A.ARR_TRANS_CODE, @ARR_TRANS_NUMBER = A.ARR_TRANS_NUMBER
		, @TOUR_DAY = A.TOUR_DAY, @HTL_MASTER_CODE = A.HTL_MASTER_CODE
	FROM (
		-- 패키지, 자유여행, 부산출발
		SELECT A.PRO_CODE, A.PRICE_SEQ, F.SCH_SEQ, E.NATION_CODE, E.CITY_CODE AS [DEP_ARR_CITY_CODE]
			, (SELECT CITY_CODE FROM PUB_AIRPORT WHERE AIRPORT_CODE = C.DEP_DEP_AIRPORT_CODE) AS [DEP_DEP_CITY_CODE]
			, C.DEP_ARR_DATE, C.DEP_TRANS_CODE, C.DEP_TRANS_NUMBER, C.ARR_DEP_DATE, C.ARR_TRANS_CODE, C.ARR_TRANS_NUMBER
			, DATEDIFF(dd, C.DEP_ARR_DATE, C.ARR_DEP_DATE) AS [TOUR_DAY]
			, (SELECT TOP 1 HTL_MASTER_CODE FROM PKG_DETAIL_PRICE_HOTEL AA WITH(NOLOCK) WHERE AA.PRO_CODE = F.PRO_CODE AND AA.PRICE_SEQ = F.PRICE_SEQ AND HTL_MASTER_CODE IS NOT NULL) AS [HTL_MASTER_CODE]
		FROM RES_MASTER_damo A WITH(NOLOCK)
		LEFT JOIN PKG_DETAIL B WITH(NOLOCK) ON A.PRO_CODE = B.PRO_CODE
		LEFT JOIN PRO_TRANS_SEAT C WITH(NOLOCK) ON B.SEAT_CODE = C.SEAT_CODE
		LEFT JOIN PUB_AIRPORT D WITH(NOLOCK) ON C.DEP_ARR_AIRPORT_CODE = D.AIRPORT_CODE
		LEFT JOIN PUB_CITY E WITH(NOLOCK) ON D.CITY_CODE = E.CITY_CODE
		LEFT JOIN PKG_DETAIL_PRICE F WITH(NOLOCK) ON A.PRO_CODE = F.PRO_CODE AND A.PRICE_SEQ = F.PRICE_SEQ
		WHERE A.RES_CODE = @RES_CODE AND @TG_TYPE IN ('P', 'F', 'B')
		UNION
		-- 항공
		SELECT A.PRO_CODE, A.PRICE_SEQ, 0, D.NATION_CODE, D.CITY_CODE AS [DEP_ARR_CITY_CODE]
			, (SELECT CITY_CODE FROM PUB_AIRPORT WHERE AIRPORT_CODE = B.DEP_DEP_AIRPORT_CODE) AS [DEP_DEP_CITY_CODE]
			, B.DEP_ARR_DATE
			, (SELECT TOP 1 AIRLINE_CODE FROM RES_SEGMENT WITH(NOLOCK) WHERE RES_CODE = B.RES_CODE AND ARR_AIRPORT_CODE = B.DEP_ARR_AIRPORT_CODE) AS [DEP_TRANS_CODE]
			, (SELECT TOP 1 FLIGHT FROM RES_SEGMENT WITH(NOLOCK) WHERE RES_CODE = B.RES_CODE AND ARR_AIRPORT_CODE = B.DEP_ARR_AIRPORT_CODE) AS [DEP_TRANS_NUMBER]
			, NULL
			, (SELECT TOP 1 AIRLINE_CODE FROM RES_SEGMENT WITH(NOLOCK) WHERE RES_CODE = B.RES_CODE AND DEP_AIRPORT_CODE = B.ARR_DEP_AIRPORT_CODE) AS [ARR_TRANS_CODE]
			, (SELECT TOP 1 FLIGHT FROM RES_SEGMENT WITH(NOLOCK) WHERE RES_CODE = B.RES_CODE AND DEP_AIRPORT_CODE = B.ARR_DEP_AIRPORT_CODE) AS [ARR_TRANS_NUMBER]
			, DATEDIFF(dd, B.DEP_ARR_DATE, B.ARR_DEP_DATE) AS [TOUR_DAY], NULL AS [HTL_MASTER_CODE]
		FROM RES_MASTER_damo A WITH(NOLOCK)
		LEFT JOIN RES_AIR_DETAIL B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
		LEFT JOIN PUB_AIRPORT C WITH(NOLOCK) ON B.DEP_ARR_AIRPORT_CODE = C.AIRPORT_CODE
		LEFT JOIN PUB_CITY D WITH(NOLOCK) ON C.CITY_CODE = D.CITY_CODE
		WHERE A.RES_CODE = @RES_CODE AND @TG_TYPE = 'A'
		UNION
		-- 호텔
		SELECT A.PRO_CODE, A.PRICE_SEQ, 0, C.NATION_CODE, C.CITY_CODE, ''
			, D.CHECK_IN, '', '', NULL, '', ''
			, DATEDIFF(dd, D.CHECK_IN, D.CHECK_OUT) AS [TOUR_DAY], B.MASTER_CODE
		FROM RES_MASTER_damo A WITH(NOLOCK)
		LEFT JOIN HTL_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
		LEFT JOIN PUB_CITY C WITH(NOLOCK) ON B.CITY_CODE = C.CITY_CODE
		LEFT JOIN RES_HTL_ROOM_MASTER D WITH(NOLOCK) ON A.RES_CODE = D.RES_CODE
		WHERE A.RES_CODE = @RES_CODE AND @TG_TYPE = 'H'
	) A;

	-- 관리정보
	SELECT B.CUS_NAME, B.LAST_NAME, B.FIRST_NAME, B.GENDER, B.PASS_NUM, B.PASS_ISSUE, B.PASS_EXPIRE, B.BIRTH_DATE
		--, DBO.FN_CUS_GET_BIRTH_DATE(B.SOC_NUM1, B.SOC_NUM2) AS [BIRTHDAY]
		, C.DEP_DATE, C.ARR_DATE, (CASE WHEN @TOUR_DAY > 0 THEN @TOUR_DAY + 1 ELSE C.TOUR_DAY END) AS [TOUR_DAY]--C.TOUR_DAY, @TOUR_DAY AS [TOUR_DAY2]
		, D.MASTER_NAME AS [HOTEL_NAME], E.ADDRESS AS [HOTEL_ADDRESS], E.TEL_NUMBER AS [HOTEL_TEL]
		, (DBO.FN_RES_GET_RES_COUNT(@RES_CODE)) AS [RES_COUNT]
		, @PRO_CODE AS [PRO_CODE], @PRICE_SEQ AS [PRICE_SEQ], @SCH_SEQ AS [SCH_SEQ], @DEP_ARR_NATION_CODE AS [DEP_ARR_NATION_CODE]
		, @DEP_DEP_CITY_CODE AS [DEP_DEP_CITY_CODE], @DEP_ARR_CITY_CODE AS [DEP_ARR_CITY_CODE]
		, @DEP_DEP_DATE AS [DEP_ARR_DATE], @DEP_TRANS_CODE AS [DEP_TRANS_CODE], @DEP_TRANS_NUMBER AS [DEP_TRANS_NUMBER]
		, @ARR_DEP_DATE AS [ARR_DEP_DATE], @ARR_TRANS_CODE AS [ARR_TRANS_CODE], @ARR_TRANS_NUMBER AS [ARR_TRANS_NUMBER]
	FROM RES_MASTER_damo A WITH(NOLOCK)
	LEFT JOIN RES_CUSTOMER B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
	LEFT JOIN PKG_DETAIL C WITH(NOLOCK) ON A.PRO_CODE = C.PRO_CODE
	LEFT JOIN HTL_MASTER D WITH(NOLOCK) ON D.MASTER_CODE = @HTL_MASTER_CODE
	LEFT JOIN INF_HOTEL E WITH(NOLOCK) ON D.CNT_CODE = E.CNT_CODE
	WHERE A.RES_CODE = @RES_CODE AND B.SEQ_NO = @SEQ_NO;

	-- 목차정보 검색
	WITH LIST AS
	(
		SELECT A.TG_CODE, A.TG_NAME, A.PARENT_TG_CODE, CONVERT(VARCHAR(50), '') AS [PARENT_TG_NAME], A.FILE_NUM, A.ORDER_NUM, B.HOTEL_COUNT, B.CONTENT_COUNT, B.CHECK_SUM, B.MEET_COUNTER, 0 AS [LEVEL]
		FROM CUS_TOURGUIDE A WITH(NOLOCK)
		CROSS JOIN (
			SELECT (SELECT COUNT(*) FROM PKG_DETAIL_PRICE_HOTEL WITH(NOLOCK) WHERE PRO_CODE = AA.PRO_CODE AND PRICE_SEQ = @PRICE_SEQ AND HTL_MASTER_CODE IS NOT NULL) AS [HOTEL_COUNT]
				, (SELECT COUNT(*) FROM PKG_DETAIL_SCH_CONTENT WITH(NOLOCK) WHERE PRO_CODE = AA.PRO_CODE AND SCH_SEQ = @SCH_SEQ) AS [CONTENT_COUNT]
				, PATINDEX('%' + @DEP_ARR_NATION_CODE + '%', 'CN,TH,US,PH,GB,JP,RU,AU,HK,MY,IN,SG,KH,ID,EZ,TW,MM,NP,PW,LK,UZ,MA,LA,FJ,NZ,GU,MP') AS [CHECK_SUM]
				, ISNULL(MEET_COUNTER, 0) AS [MEET_COUNTER]
			FROM PKG_DETAIL AA WITH(NOLOCK)
			WHERE AA.PRO_CODE = @PRO_CODE
		) B
		WHERE A.TG_TYPE = @TG_TYPE AND A.PARENT_TG_CODE IS NULL AND A.TG_CODE LIKE ('_0' + @STEP_NO + '%')
		UNION ALL
		SELECT A.TG_CODE, A.TG_NAME, A.PARENT_TG_CODE, B.TG_NAME, A.FILE_NUM, A.ORDER_NUM, B.HOTEL_COUNT, B.CONTENT_COUNT, B.CHECK_SUM, B.MEET_COUNTER, [LEVEL] + 1
		FROM CUS_TOURGUIDE A WITH(NOLOCK)
		INNER JOIN LIST B ON A.PARENT_TG_CODE = B.TG_CODE
		WHERE A.TG_CODE = (
			CASE
				WHEN A.TG_CODE LIKE '_0203' AND B.HOTEL_COUNT < 1 THEN ''									-- 숙박지정보
				WHEN A.TG_CODE LIKE '_0204' AND B.CONTENT_COUNT < 1 THEN ''									-- 관광지정보
				WHEN A.TG_CODE = '10402' AND B.MEET_COUNTER < 1 THEN ''										-- 미팅시간 및 장소안내
				WHEN A.TG_CODE = '10403' AND (B.MEET_COUNTER < 1 OR @DEP_DEP_CITY_CODE <> 'ICN') THEN ''	-- 공항팀안내
				WHEN A.TG_CODE = '10404' AND @DEP_DEP_CITY_CODE <> 'ICN' THEN ''							-- 공항즐기기
				WHEN A.TG_CODE LIKE '_0602' AND B.CHECK_SUM < 1 THEN ''										-- 출입국신고서
				WHEN A.TG_CODE LIKE '_0701' AND @TG_TYPE NOT IN ('P', 'B') THEN ''										-- 여행자계약서
				WHEN A.TG_CODE LIKE '_0702' AND @TG_TYPE = 'H' THEN ''										-- E-ticket
				WHEN A.TG_CODE LIKE '_0703' AND @TG_TYPE NOT IN ('F', 'H') THEN ''							-- Voucher
				ELSE A.TG_CODE
			END
		)
	)
	SELECT A.TG_CODE, A.TG_NAME, A.PARENT_TG_CODE, A.PARENT_TG_NAME, A.FILE_NUM, ROW_NUMBER() OVER(ORDER BY ORDER_NUM) AS [PAGING_NUM]
	FROM LIST A
	ORDER BY A.ORDER_NUM

END
GO
