USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: XP_COM_STS_SPEND_LIST_SELECT
■ DESCRIPTION				: BTMS 거래처 구매현황 리스트 검색
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			: 
■ EXEC						: 

   EXEC DBO.XP_COM_STS_SPEND_LIST_SELECT '92756', 10, 0, 'N', 1, '2016-03-01', '2016-05-30', '0,1,2,9', 'N', 0, 0


■ MEMO                  : 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY
------------------------------------------------------------------------------------------------------------------
	DATE			AUTHOR		DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
	2016-05-16		김성호		최초생성
	2016-05-17		이유라		RES_NAME -> PRO_NAME 출장예약명 수정, 분류 SELECT
	2016-05-19		이유라		기간설정에 따른 정렬 추가
================================================================================================================*/ 
CREATE PROC [dbo].[XP_COM_STS_SPEND_LIST_SELECT]
	@AGT_CODE			VARCHAR(10),
	@PRO_DETAIL_TYPE	INT,				/* BizTripApprovalTypeEnum { 출장대기 = 0, 출장요청 = 1, 출장확정 = 2, 출장반려 = 9 ,전체 = 10 } */
	@PAY_STATE			INT,				/* 0: 전체, 1: 미납, 2: 완납 */
	@PAY_LATER_YN		CHAR(1),			/* Y: 후불예약만 보기 */
	@SEARCH_DATE_TYPE	INT,				/* 1: 예약일, 2: 출발일, 3: 도착일 */
	@START_DATE			DATETIME,
	@END_DATE			DATETIME,
	@APPROVAL_CODE		VARCHAR(10),
	@CANCEL_RESERVE_YN	VARCHAR(1),			/* Y: 취소예약만 보기, N: 정상예약만 보기 */
	@TEAM_SEQ			INT,
	@EMP_SEQ			INT
AS 
BEGIN

	DECLARE @SQLSTRING NVARCHAR(MAX) = '', @PARMDEFINITION NVARCHAR(1000);
	DECLARE @WHERE NVARCHAR(MAX) = '', @SORT_STRING NVARCHAR(MAX);
	DECLARE @WHERE_2 NVARCHAR(100) = '', @ORDERBY_STRING NVARCHAR(MAX) = 'C.NEW_DATE DESC';

	-- 조건 1

	IF LEN(@AGT_CODE) > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND A.AGT_CODE = @AGT_CODE'
	END

	IF @PRO_DETAIL_TYPE <> 10
	BEGIN
		SET @WHERE = @WHERE + ' AND B.PRO_DETAIL_TYPE = @PRO_DETAIL_TYPE'
	END

	IF @PAY_LATER_YN = 'Y'
	BEGIN
		SET @WHERE = @WHERE + ' AND B.PAY_LATER_EMP_SEQ > 0'
	END

	IF @SEARCH_DATE_TYPE > 0
	BEGIN
		SELECT @WHERE = @WHERE + (
			CASE @SEARCH_DATE_TYPE
				WHEN 1 THEN ' AND C.NEW_DATE >= @START_DATE AND C.NEW_DATE <= DATEADD(DAY, 1, @END_DATE) '
				WHEN 2 THEN ' AND C.DEP_DATE >= @START_DATE AND C.DEP_DATE <= DATEADD(DAY, 1, @END_DATE) '
				WHEN 3 THEN ' AND C.ARR_DATE >= @START_DATE AND C.ARR_DATE <= DATEADD(DAY, 1, @END_DATE) '
			END
		)
	END

	IF @EMP_SEQ > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND A.NEW_SEQ = @EMP_SEQ'
	END
	ELSE IF @TEAM_SEQ > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND D.TEAM_SEQ = @TEAM_SEQ'
	END

	IF LEN(@APPROVAL_CODE) > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND A.APPROVAL_STATE IN (SELECT DATA FROM DBO.FN_SPLIT(@APPROVAL_CODE, '','') WHERE Data <> '''')'
	END


	IF LEN(@WHERE) > 10
	BEGIN
		SELECT @WHERE = (N'WHERE ' + SUBSTRING(@WHERE, 5, 1000))
	END

	-- 조건 2

	IF @PAY_STATE > 0
	BEGIN
		SET @WHERE_2 = @WHERE_2 + N' AND Y.PAY_STATE = @PAY_STATE'
	END
		
	-- 취소예약만 보기
	IF @CANCEL_RESERVE_YN = 'Y'
	BEGIN
		SET @WHERE_2 = N' AND Z.BT_STATE >= 7'
	END
	-- 취소예약 제외하고 보기
	ELSE IF @CANCEL_RESERVE_YN = 'N'
	BEGIN
		SET @WHERE_2 = N' AND Z.BT_STATE < 7'
	END


	IF LEN(@WHERE_2) > 10
	BEGIN
		SELECT @WHERE_2 = (N'WHERE ' + SUBSTRING(@WHERE_2, 5, 100))
	END


	IF @SEARCH_DATE_TYPE > 0
	BEGIN
		SELECT @ORDERBY_STRING = (
			CASE @SEARCH_DATE_TYPE
				WHEN 1 THEN ' C.NEW_DATE DESC'
				WHEN 2 THEN ' C.DEP_DATE'
				WHEN 3 THEN ' C.ARR_DATE'
			END
		)
	END

    SET @SQLSTRING = @SQLSTRING + CONVERT(NVARCHAR(MAX), N'
		WITH CODE_LIST AS
		(
			SELECT A.AGT_CODE, A.BT_CODE, B.RES_CODE, (
				CASE
					WHEN MIN(C.RES_STATE) < 7 THEN 0
					WHEN MIN(C.RES_STATE) = 7 THEN 7
					ELSE 9
				END) AS [BT_STATE]
			FROM COM_BIZTRIP_MASTER A WITH(NOLOCK)
			INNER JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE AND A.BT_CODE = B.BT_CODE
			INNER JOIN RES_MASTER_damo C WITH(NOLOCK) ON B.RES_CODE = C.RES_CODE
			LEFT JOIN COM_EMPLOYEE D WITH(NOLOCK) ON A.AGT_CODE = D.AGT_CODE AND A.NEW_SEQ = D.EMP_SEQ
			' + @WHERE + N'
			GROUP BY A.AGT_CODE, A.BT_CODE, B.RES_CODE
		)
		, PRICE_LIST AS
		(
			SELECT A.RES_CODE, A.TOTAL_PRICE, A.PAY_PRICE, (A.TOTAL_PRICE - A.PAY_PRICE) AS [REST_PRICE], (
				CASE
					WHEN A.PAY_PRICE = 0 THEN 1					-- 미납
					WHEN A.TOTAL_PRICE > A.PAY_PRICE THEN 1		-- 부분납
					WHEN A.TOTAL_PRICE = A.PAY_PRICE THEN 2		-- 완납
					WHEN A.TOTAL_PRICE < A.PAY_PRICE THEN 2		-- 과납
				END) AS [PAY_STATE]
			FROM (
				SELECT Z.RES_CODE
					, DBO.FN_RES_GET_TOTAL_PRICE(Z.RES_CODE) AS [TOTAL_PRICE]
					, DBO.FN_RES_GET_PAY_PRICE(Z.RES_CODE) AS [PAY_PRICE]
				FROM CODE_LIST Z
			) A
		)
		, CUS_LIST AS
		(
			SELECT A.RES_CODE, COUNT(*) AS [RES_CUS_COUNT]
			FROM CODE_LIST Z
			INNER JOIN RES_MASTER_damo A WITH(NOLOCK) ON Z.RES_CODE = A.RES_CODE
			INNER JOIN RES_CUSTOMER_damo B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
			WHERE A.RES_STATE <= 7 AND B.RES_STATE IN (0, 3, 4)
			GROUP BY A.RES_CODE
		)
		SELECT Z.AGT_CODE, Z.BT_CODE, Z.RES_CODE, A.APPROVAL_STATE, C.RES_STATE, B.PRO_DETAIL_TYPE, C.PRO_NAME, C.DEP_DATE, C.ARR_DATE, X.RES_CUS_COUNT,
			Y.TOTAL_PRICE, Y.PAY_PRICE, Y.REST_PRICE, Y.PAY_STATE, D.EMP_SEQ, D.TEAM_SEQ,
			D.KOR_NAME AS [EMP_NAME],
			E.TEAM_NAME,
			(CASE WHEN B.PAY_LATER_EMP_SEQ > 0 THEN ''Y'' ELSE ''N'' END) AS [PAY_LATER_YN]
		FROM CODE_LIST Z
		INNER JOIN PRICE_LIST Y ON Z.RES_CODE = Y.RES_CODE
		INNER JOIN CUS_LIST X ON Z.RES_CODE = X.RES_CODE
		INNER JOIN COM_BIZTRIP_MASTER A WITH(NOLOCK) ON Z.AGT_CODE = A.AGT_CODE AND Z.BT_CODE = A.BT_CODE
		INNER JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON Z.AGT_CODE = B.AGT_CODE AND Z.BT_CODE = B.BT_CODE AND Z.RES_CODE = B.RES_CODE
		INNER JOIN RES_MASTER_DAMO C WITH(NOLOCK) ON Z.RES_CODE = C.RES_CODE
		LEFT JOIN COM_EMPLOYEE D WITH(NOLOCK) ON A.AGT_CODE = D.AGT_CODE AND A.NEW_SEQ = D.EMP_SEQ
		LEFT JOIN COM_TEAM E WITH(NOLOCK) ON A.AGT_CODE = E.AGT_CODE AND D.TEAM_SEQ = E.TEAM_SEQ
		' + @WHERE_2 + N'
		ORDER BY ' + @ORDERBY_STRING + N';')

	SET @PARMDEFINITION = N'
		@AGT_CODE			VARCHAR(10),
		@PRO_DETAIL_TYPE	INT,
		@PAY_STATE			INT,
		@START_DATE			DATETIME,
		@END_DATE			DATETIME,
		@APPROVAL_CODE		VARCHAR(10),
		@TEAM_SEQ			INT,
		@EMP_SEQ			INT';
	  
--	PRINT @SQLSTRING
      
   EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@AGT_CODE,
		@PRO_DETAIL_TYPE,
		@PAY_STATE,
		@START_DATE,
		@END_DATE,
		@APPROVAL_CODE,
		@TEAM_SEQ,
		@EMP_SEQ;

END 

GO
