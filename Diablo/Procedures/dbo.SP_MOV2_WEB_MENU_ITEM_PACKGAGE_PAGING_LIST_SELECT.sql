USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: SP_MOV2_WEB_MENU_ITEM_PACKGAGE_PAGING_LIST_SELECT   ( <== XP_WEB_MENU_ITEM_PACKGAGE_PAGING_LIST_SELECT )
■ DESCRIPTION				: 베스트 상품 상품 검색 페이징처리
■ INPUT PARAMETER			: 
	@SITE_CODE				: 사이트 코드
	@MENU_CODE				: 메뉴 코드
	@SEC_CODE				: 섹션코드
	@PAGE_INDEX  INT		: 현재 페이지
	@PAGE_SIZE  INT			: 한 페이지 표시 게시물 수
■ OUTPUT PARAMETER			: 
	@TOTAL_COUNT INT OUTPUT	: 총 상품 수
■ EXEC						: 

	DECLARE @PAGE_INDEX INT,
	@PAGE_SIZE  INT,
	@TOTAL_COUNT INT, 
	@KEY		VARCHAR(400),
	@ORDER_BY	INT

	SELECT @PAGE_INDEX=1,@PAGE_SIZE=40,@KEY=N'MenuCode=10209&Provider=5&GroupCode=UPFG0001,UPFG0020,UPFG0003,UPF1,UPFG600&SectionCode=10&SiteCode=VGT',@ORDER_BY=10

	exec SP_MOV2_WEB_MENU_ITEM_PACKGAGE_PAGING_LIST_SELECT @page_index, @page_size, @total_count output, @key, @order_by
	SELECT @TOTAL_COUNT


	declare @p5 int
	set @p5=NULL
	exec SP_MOV2_WEB_MENU_ITEM_PACKGAGE_PAGING_LIST_SELECT @PAGE_INDEX=1,@PAGE_SIZE=20,@KEY=N'DEP_DATE=2018-01-23&MenuCode=11002&Provider=0&GroupCode=GKPP011,GKPP004&SectionCode=1&SiteCode=VGT',@ORDER_BY=10,@TOTAL_COUNT=@p5 output
	select @p5


declare @p5 int
set @p5=7
exec SP_MOV2_WEB_MENU_ITEM_PACKGAGE_PAGING_LIST_SELECT @PAGE_INDEX=1,@PAGE_SIZE=20,@KEY=N'MenuCode=10101&Provider=0&AttCode=P,B&MinPrice=0&MaxPrice=2000000&DepDate=2018-01-24&MinDay=5&MaxDay=10&SectionCode=1&SiteCode=VGT&CfmYN=Y',@ORDER_BY=1,@TOTAL_COUNT=
@p5 output
select @p5


■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2013-08-30		김성호			최초생성
   2013-10-04		김성호			중복 상품 제거
   2014-10-20		김성호			상품별 GROUP BY 오류 수정 (ROW_NUMBER 이용)
   2016-05-02		박형만			PKG_MASTER  SHOW_YN = Y 조건 추가 (숨김처리된 마스터 나옴현상 해결 ) 
   2017-07-11		오준욱			XP_WEB_MENU_ITEM_PACKGAGE_PAGING_LIST_SELECT 에서 정렬방식 추가
   2017-10-27		김성호			변수 파라메터처리 및 동반자 테이블 변경에 따른 전체적인 수정 작업
   2017-10-31		김성호			동반자 정렬 시 상품속성(허니문) 무조건 뒤로 (동반자 커플은 제외)
   2017-11-27		김성호			이벤트명, 행사이벤트일자 추가 & 마스터상품 출발일자 없으면 검색에서 제외
   2017-01-22		정지용			DEP_DATE / MIN_DAY / MAX_DAY / CFM_YN 추가 및 조건 추가
   2019-11-27		박형만			CFM_YN 일 출발확정 전체 DEP_CFM_YN IN (Y,F인것)
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[SP_MOV2_WEB_MENU_ITEM_PACKGAGE_PAGING_LIST_SELECT]
(
	@PAGE_INDEX		INT,
	@PAGE_SIZE		INT,
	@TOTAL_COUNT	INT OUTPUT,
	@KEY			VARCHAR(400),
	@ORDER_BY		INT
)
AS  
BEGIN

	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	
	DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(1000), @WHERE_1 NVARCHAR(200), @WHERE_2 NVARCHAR(200), @WHERE_M NVARCHAR(500) = '', @WHERE_MP NVARCHAR(500) = '', @WHERE_P NVARCHAR(500) = '', @WHERE_PP NVARCHAR(500) = ''
		, @SORT_STRING NVARCHAR(100), @MENU_STRING NVARCHAR(1000);
	DECLARE @SITE_CODE	VARCHAR(3), @MENU_CODE VARCHAR(20), @ITEM_LEVEL VARCHAR(20), @SEC_CODE VARCHAR(4), @DAY VARCHAR(5), @WEEKDAY VARCHAR(50), @MIN_PRICE VARCHAR(15), @MAX_PRICE VARCHAR(15)
	DECLARE @MIN_DAY VARCHAR(5), @MAX_DAY VARCHAR(5), @CFM_YN CHAR(1), @DEP_DATE VARCHAR(10)

	SELECT
		@SITE_CODE = DBO.FN_PARAM(@KEY, 'SiteCode'),
		@MENU_CODE = DBO.FN_PARAM(@KEY, 'MenuCode'),
		@ITEM_LEVEL = DBO.FN_PARAM(@KEY, 'Level'),
		@SEC_CODE = DBO.FN_PARAM(@KEY, 'SectionCode'),
		@DAY = DBO.FN_PARAM(@KEY, 'Day'),
		@WEEKDAY = DBO.FN_PARAM(@KEY, 'Weekday'),
		@MIN_PRICE = DBO.FN_PARAM(@KEY, 'MinPrice'),
		@MAX_PRICE = DBO.FN_PARAM(@KEY, 'MaxPrice'),
		@DEP_DATE = DBO.FN_PARAM(@KEY, 'DepDate'),
		@MIN_DAY = DBO.FN_PARAM(@KEY, 'MinDay'),
		@MAX_DAY = DBO.FN_PARAM(@KEY, 'MaxDay'),
		@CFM_YN = DBO.FN_PARAM(@KEY, 'CfmYN')

	IF ISNULL(@ITEM_LEVEL, '') = ''
	BEGIN
		SET @WHERE_1 = ''
	END
	ELSE
	BEGIN
		SET @WHERE_1 = 'WHERE Z.ITEM_LEVEL IN (' + @ITEM_LEVEL + ')'
	END

	IF ISNULL(@SEC_CODE, '') <> ''
	BEGIN
		SET @WHERE_2 = ''
	END
	BEGIN
		SET @WHERE_2 = ' AND A.SEC_CODE = @SEC_CODE'
	END

	IF ISNULL(@DAY, '') <> ''
	BEGIN
		SELECT 
			@WHERE_M = ' AND B.TOUR_DAY ' + (CASE @DAY WHEN '10' THEN '>=' WHEN '3' THEN '<=' ELSE '=' END) + ' @DAY',
			@WHERE_P = ' AND B.TOUR_DAY ' + (CASE @DAY WHEN '10' THEN '>=' WHEN '3' THEN '<=' ELSE '=' END) + ' @DAY'
	END

	IF (ISNULL(@MIN_DAY, '') <> '' AND ISNULL(@MAX_DAY, '') <> '')
	BEGIN
		IF @MAX_DAY = '10'
		BEGIN
			SET @WHERE_M = @WHERE_M + ' AND B.TOUR_DAY >= @MAX_DAY'
			SET @WHERE_P = @WHERE_P + ' AND B.TOUR_DAY >= @MAX_DAY'
		END
		ELSE IF @MIN_DAY = '3'
		BEGIN
			SET @WHERE_M = @WHERE_M + ' AND B.TOUR_DAY <= @MIN_DAY'
			SET @WHERE_P = @WHERE_P + ' AND B.TOUR_DAY <= @MIN_DAY'
		END
		ELSE IF @MIN_DAY = @MAX_DAY
		BEGIN
			SET @WHERE_M = @WHERE_M + ' AND B.TOUR_DAY = @MIN_DAY'
			SET @WHERE_P = @WHERE_P + ' AND B.TOUR_DAY = @MIN_DAY'
		END
		ELSE
		BEGIN
			SET @WHERE_M = @WHERE_M + ' AND B.TOUR_DAY >= @MIN_DAY AND B.TOUR_DAY <= @MAX_DAY';
			SET @WHERE_P = @WHERE_P + ' AND B.TOUR_DAY >= @MIN_DAY AND B.TOUR_DAY <= @MAX_DAY';
		END
	END

	IF (ISNULL(@DEP_DATE, '') <> '')
	BEGIN
		SET @WHERE_MP = @WHERE_MP + ' AND AA.DEP_DATE = CONVERT(DATETIME, @DEP_DATE)'
		SET @WHERE_P = @WHERE_P + ' AND B.DEP_DATE = CONVERT(DATETIME, @DEP_DATE)'
	END

	IF ISNULL(@CFM_YN, '') = 'Y'
	BEGIN 
		SET @WHERE_MP = @WHERE_MP + ' AND AA.DEP_CFM_YN IN (''Y'',''F'') '
		SET @WHERE_P = @WHERE_P + ' AND B.DEP_CFM_YN IN (''Y'',''F'') '
	END

	IF ISNULL(@WEEKDAY, '') <> ''
	BEGIN
		SET @WHERE_MP = @WHERE_MP + ' AND DATENAME(DW, AA.DEP_DATE) IN (SELECT DATA FROM DBO.FN_SPLIT(@WEEKDAY, '',''))'
		SET @WHERE_P = @WHERE_P + ' AND DATENAME(DW, B.DEP_DATE) IN (SELECT DATA FROM DBO.FN_SPLIT(@WEEKDAY, '',''))'
	END

	IF ISNULL(@WHERE_MP, '') <> ''
	BEGIN
		SET @WHERE_M = @WHERE_M + ' AND B.MASTER_CODE IN (SELECT MASTER_CODE FROM PKG_DETAIL AA WITH(NOLOCK) WHERE AA.MASTER_CODE = B.MASTER_CODE ' + @WHERE_MP + ')'
	END

	IF ISNULL(@MIN_PRICE, '') <> ''
	BEGIN
		SET @WHERE_M = @WHERE_M + ' AND B.LOW_PRICE >= CONVERT(INT, @MIN_PRICE)'
		SET @WHERE_PP = @WHERE_PP + ' AND AA.ADT_PRICE >= @MIN_PRICE'
	END

	IF ISNULL(@MAX_PRICE, '') <> ''
	BEGIN
		SET @WHERE_M = @WHERE_M + ' AND B.LOW_PRICE <= CONVERT(INT, @MAX_PRICE)'
		SET @WHERE_PP = @WHERE_PP + ' AND AA.ADT_PRICE < @MAX_PRICE'
	END

	IF ISNULL(@WHERE_PP, '') <> ''
	BEGIN
		SET @WHERE_P = @WHERE_P + ' AND B.PRO_CODE IN (SELECT AA.PRO_CODE FROM PKG_DETAIL_PRICE AA WITH(NOLOCK) WHERE B.PRO_CODE = AA.PRO_CODE ' + @WHERE_PP + ')'
	END
	

	-- SORT 조건 만들기  
	SELECT @SORT_STRING = (
		CASE @ORDER_BY
			WHEN 1 THEN 'Z.REGION_ORDER'
			WHEN 2 THEN 'Z.TOTAL_COUNT DESC'
			WHEN 3 THEN 'Z.STAR_POINT DESC'
			WHEN 4 THEN 'Z.LOW_PRICE'
			WHEN 5 THEN 'Z.HIGH_PRICE DESC'
			WHEN 6 THEN 'Z.ATT_ORDER, Z.FAMILY_PERCENT DESC, Z.TOTAL_COUNT DESC'
			WHEN 7 THEN 'Z.ATT_ORDER, Z.MEETING_PERCENT DESC, Z.TOTAL_COUNT DESC'
			WHEN 8 THEN 'Z.COUPLE_PERCENT DESC, Z.TOTAL_COUNT DESC'
			WHEN 9 THEN 'Z.ATT_ORDER, Z.FRIEND_PERCENT DESC, Z.TOTAL_COUNT DESC'
			WHEN 10 THEN 'Z.ATT_ORDER, Z.ALONE_PERCENT DESC, Z.TOTAL_COUNT DESC'
			ELSE 'Z.REGION_ORDER, Z.TOTAL_COUNT DESC'
		END
	)

	SET @SQLSTRING = N'
	WITH LIST AS
	(
		SELECT Z.*, 0 AS [ITEM_LEVEL]
		FROM MNU_MASTER_REL Z WITH(NOLOCK)
		WHERE Z.SITE_CODE = @SITE_CODE AND Z.MENU_CODE = @MENU_CODE
		UNION ALL
		SELECT A.*, B.[ITEM_LEVEL] + 1
		FROM MNU_MASTER_REL A WITH(NOLOCK)
		INNER JOIN LIST B ON A.SITE_CODE = B.SITE_CODE AND A.PARENT_CODE = B.MENU_CODE
	)
	SELECT @MENU_STRING =  (
		SELECT ('','' + Z.MENU_CODE) AS [text()]
		FROM LIST Z
		' + @WHERE_1 + N'
		FOR XML PATH(''''));'

	SET @SQLSTRING = @SQLSTRING + N'
	SELECT @TOTAL_COUNT = COUNT(*)
	FROM (
		SELECT B.MASTER_CODE, '''' AS [PRO_CODE]
		FROM DBO.FN_SPLIT(@MENU_STRING, '','') Z
		INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = @SITE_CODE AND A.MENU_CODE = Z.Data' + @WHERE_2 + N'
		INNER JOIN PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE AND B.SHOW_YN =''Y'' AND B.LAST_DATE > DATEADD(DAY, 7, GETDATE())' + @WHERE_M + N'
		UNION
		SELECT C.MASTER_CODE, B.PRO_CODE
		FROM DBO.FN_SPLIT(@MENU_STRING, '','') Z
		INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = @SITE_CODE AND A.MENU_CODE = Z.Data' + @WHERE_2 + N'
		INNER JOIN PKG_DETAIL B WITH(NOLOCK) ON A.PRO_CODE = B.PRO_CODE' + @WHERE_P + N'
		INNER JOIN PKG_MASTER C WITH(NOLOCK) ON B.MASTER_CODE = C.MASTER_CODE AND C.SHOW_YN =''Y'' 
	) Z;'

	SET @SQLSTRING = @SQLSTRING + N'
	WITH LIST AS (
		SELECT Z.FLAG, Z.SITE_CODE, Z.MENU_CODE, Z.SEC_CODE, Z.GRP_SEQ, Z.ITEM_SEQ, Z.FILE_CODE, Z.MASTER_CODE, Z.PRICE
			, (CASE
				WHEN Z.PRO_CODE = '''' THEN (
						SELECT TOP 1 PRO_CODE FROM PKG_DETAIL AA WITH(NOLOCK)
						WHERE AA.MASTER_CODE = Z.MASTER_CODE AND AA.DEP_DATE > DATEADD(DAY, 7, GETDATE()) AND AA.SHOW_YN = ''Y''
							AND AA.RES_ADD_YN = ''Y'' AND (AA.MAX_COUNT = 0 OR (AA.MAX_COUNT - DBO.FN_PRO_GET_RES_COUNT(AA.PRO_CODE) > 0)))
				ELSE Z.PRO_CODE
			END) AS [PRO_CODE]
			, Z.REGION_ORDER, Z.THEME_ORDER, Z.GROUP_ORDER, Z.LOW_PRICE, Z.HIGH_PRICE
			, Z.VR_COUNT, Z.EVENT_COUNT, Z.EVENT_PRO_CODE, Z.BRAND_TYPE, Z.TAG, Z.ATT_ORDER
			, Z.ALONE_PERCENT, Z.FRIEND_PERCENT, Z.FAMILY_PERCENT, Z.COUPLE_PERCENT, Z.MEETING_PERCENT, Z.ETC_PERCENT, Z.TOTAL_COUNT
			, (
				SELECT TOP 1 B1.EVT_NAME
				FROM PUB_EVENT_DATA A1 WITH(NOLOCK)
				INNER JOIN PUB_EVENT B1 WITH(NOLOCK) ON A1.EVT_SEQ = B1.EVT_SEQ AND B1.EVT_YN = ''Y''
				WHERE A1.MASTER_CODE = Z.MASTER_CODE AND A1.SHOW_YN = ''Y'' AND B1.SHOW_YN = ''Y'' AND (B1.END_DATE IS NULL OR B1.END_DATE >= GETDATE())
				ORDER BY B1.EVT_SEQ DESC
			) AS [EVENT_NAME]
			, (
				SELECT CONVERT(VARCHAR(10), A1.DEP_DATE, 120)
				FROM PKG_DETAIL A1 WITH(NOLOCK)
				WHERE A1.PRO_CODE = Z.EVENT_PRO_CODE
			) AS [EVENT_PRO_DATE]'

		IF @ORDER_BY = 3
		BEGIN
			SET @SQLSTRING = @SQLSTRING + N', STAR_POINT'
		END

	SET @SQLSTRING = @SQLSTRING + N'
		FROM (

			SELECT ''M'' AS [FLAG], B.MASTER_CODE, '''' AS [PRO_CODE]
				, A.SITE_CODE, A.MENU_CODE, A.SEC_CODE, A.GRP_SEQ, A.ITEM_SEQ, B.LOW_PRICE AS [PRICE]
				, B.MAIN_FILE_CODE AS [FILE_CODE]
				, B.REGION_ORDER, B.THEME_ORDER, B.GROUP_ORDER, B.LOW_PRICE, B.HIGH_PRICE
				, (SELECT COUNT(*) FROM VR_CONTENT V2 WITH(NOLOCK) INNER JOIN VR_MASTER VM WITH(NOLOCK) ON V2.VR_NO = VM.VR_NO WHERE A.MASTER_CODE = V2.MASTER_CODE AND VM.VR_TYPE = 1) AS [VR_COUNT]
				, (SELECT COUNT(*) FROM PUB_EVENT_DATA A2 WITH(NOLOCK) INNER JOIN PUB_EVENT B2 WITH(NOLOCK) ON A2.EVT_SEQ = B2.EVT_SEQ WHERE B2.EVT_YN = ''Y'' AND A2.SHOW_YN = ''Y'' AND B2.SHOW_YN = ''Y'' AND A2.MASTER_CODE = B.MASTER_CODE AND B2.END_DATE >= GETDATE()) AS [EVENT_COUNT]
				, B.EVENT_PRO_CODE AS [EVENT_PRO_CODE] 
				, B.BRAND_TYPE AS [BRAND_TYPE]
				, B.TAG AS [TAG]
				, (CASE WHEN B.ATT_CODE = ''W'' THEN 2 ELSE 1 END) AS [ATT_ORDER]
				, Z.ALONE_PERCENT, Z.FRIEND_PERCENT, Z.FAMILY_PERCENT, Z.COUPLE_PERCENT, Z.MEETING_PERCENT, Z.ETC_PERCENT, Z.TOTAL_COUNT'

		IF @ORDER_BY = 3
		BEGIN
			SET @SQLSTRING = @SQLSTRING + N'
				, (SELECT ISNULL(AVG(A2.GRADE), 0) FROM PRO_COMMENT A2 WITH(NOLOCK) WHERE A2.MASTER_CODE = B.MASTER_CODE) AS [STAR_POINT]'
		END

	SET @SQLSTRING = @SQLSTRING + N'
			FROM (
				SELECT ROW_NUMBER() OVER(PARTITION BY A.MASTER_CODE ORDER BY A.SITE_CODE, A.MENU_CODE, A.SEC_CODE, A.GRP_SEQ, A.ITEM_SEQ) AS [ROWNUMBER], A.*
				FROM DBO.FN_SPLIT(@MENU_STRING, '','') Z
				INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = @SITE_CODE AND A.MENU_CODE = Z.Data' + @WHERE_2 + N'
			) A
			INNER JOIN PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE' + @WHERE_M + N'
			LEFT JOIN PKG_MASTER_PARTNER Z WITH(NOLOCK) ON B.MASTER_CODE = Z.MASTER_CODE
			WHERE A.ROWNUMBER = 1
			UNION ALL
			SELECT ''P'' AS [FALG], C.MASTER_CODE, B.PRO_CODE
				, A.SITE_CODE, A.MENU_CODE, A.SEC_CODE, A.GRP_SEQ, A.ITEM_SEQ, C.LOW_PRICE AS [PRICE]
				, C.MAIN_FILE_CODE AS [FILE_CODE]
				, C.REGION_ORDER, C.THEME_ORDER, C.GROUP_ORDER, C.LOW_PRICE, C.HIGH_PRICE
				, (SELECT COUNT(*) FROM VR_CONTENT V2 WITH(NOLOCK) INNER JOIN VR_MASTER VM WITH(NOLOCK) ON V2.VR_NO = VM.VR_NO WHERE B.MASTER_CODE = V2.MASTER_CODE AND VM.VR_TYPE = 1)  AS [VR_COUNT]
				, (SELECT COUNT(*) FROM PUB_EVENT_DATA A2 WITH(NOLOCK) INNER JOIN PUB_EVENT B2 WITH(NOLOCK) ON A2.EVT_SEQ = B2.EVT_SEQ WHERE B2.EVT_YN = ''Y'' AND A2.SHOW_YN = ''Y'' AND B2.SHOW_YN = ''Y'' AND A2.MASTER_CODE = B.MASTER_CODE AND B2.END_DATE >= GETDATE()) AS [EVENT_COUNT]
				, C.EVENT_PRO_CODE AS [EVENT_PRO_CODE]
				, C.BRAND_TYPE AS [BRAND_TYPE]
				, C.TAG AS [TAG]
				, (CASE WHEN C.ATT_CODE = ''W'' THEN 2 ELSE 1 END) AS [ATT_ORDER]
				, Z.ALONE_PERCENT, Z.FRIEND_PERCENT, Z.FAMILY_PERCENT, Z.COUPLE_PERCENT, Z.MEETING_PERCENT, Z.ETC_PERCENT, Z.TOTAL_COUNT'

		IF @ORDER_BY = 3
		BEGIN
			SET @SQLSTRING = @SQLSTRING + N'
				, (SELECT ISNULL(AVG(A2.GRADE), 0) FROM PRO_COMMENT A2 WITH(NOLOCK) WHERE A2.MASTER_CODE = B.MASTER_CODE) AS [STAR_POINT]'
		END

	SET @SQLSTRING = @SQLSTRING + N'
			FROM (
				SELECT ROW_NUMBER() OVER(PARTITION BY A.PRO_CODE ORDER BY A.SITE_CODE, A.MENU_CODE, A.SEC_CODE, A.GRP_SEQ, A.ITEM_SEQ) AS [ROWNUMBER], A.*
				FROM DBO.FN_SPLIT(@MENU_STRING, '','') Z
				INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = @SITE_CODE AND A.MENU_CODE = Z.Data' + @WHERE_2 + N'
			) A
			INNER JOIN PKG_DETAIL B WITH(NOLOCK) ON A.PRO_CODE = B.PRO_CODE' + @WHERE_P + N'
			INNER JOIN PKG_MASTER C WITH(NOLOCK) ON B.MASTER_CODE = C.MASTER_CODE
			LEFT JOIN PKG_MASTER_PARTNER Z WITH(NOLOCK) ON C.MASTER_CODE = Z.MASTER_CODE
			WHERE A.ROWNUMBER = 1
		) Z
		ORDER BY ' + @SORT_STRING + N'
		OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
		ROWS ONLY
	)
	SELECT Z.*
		, A.IMG_URL, A.PRO_NAME, A.PKG_COMMENT, A.DTI_ITEM1, A.DTI_ITEM2, A.DTI_ITEM3, A.DTI_ITEM4--, A.IMG_URL, A.LINK_URL
		, (SELECT TOP 1 PRICE_SEQ FROM PKG_DETAIL_PRICE AA WITH(NOLOCK) WHERE AA.PRO_CODE = Z.PRO_CODE ORDER BY ADT_PRICE) AS [PRICE_SEQ]
		, B.GRP_TITLE, B.GRP_CODE, B.GRP_DESC
		, C.DEP_DATE, C.TOUR_NIGHT, C.TOUR_DAY, C.TOUR_JOURNEY
		, D.*
	FROM LIST Z
	INNER JOIN MNU_MNG_ITEM A WITH(NOLOCK) ON A.SITE_CODE = Z.SITE_CODE AND A.MENU_CODE = Z.MENU_CODE AND A.SEC_CODE = Z.SEC_CODE AND A.GRP_SEQ = Z.GRP_SEQ AND A.ITEM_SEQ = Z.ITEM_SEQ
	INNER JOIN MNU_MNG_GROUP B WITH(NOLOCK) ON A.SITE_CODE = B.SITE_CODE AND A.MENU_CODE = B.MENU_CODE AND A.SEC_CODE = B.SEC_CODE AND A.GRP_SEQ = B.GRP_SEQ
	INNER JOIN PKG_DETAIL C WITH(NOLOCK) ON C.PRO_CODE = Z.PRO_CODE
	LEFT JOIN INF_FILE_MASTER D WITH(NOLOCK) ON D.FILE_CODE = Z.FILE_CODE
	ORDER BY ' + @SORT_STRING + N';
	
	SELECT @TOTAL_COUNT AS TOTAL_COUNT;'

	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@TOTAL_COUNT INT OUTPUT,
		@MENU_STRING NVARCHAR(1000),
		@SITE_CODE	VARCHAR(3),
		@MENU_CODE	VARCHAR(20),
		@SEC_CODE	VARCHAR(4),
		@DAY VARCHAR(5),
		@WEEKDAY VARCHAR(50),
		@MIN_PRICE VARCHAR(10),
		@MAX_PRICE VARCHAR(10),
		@MIN_DAY VARCHAR(5),
		@MAX_DAY VARCHAR(5),
		@CFM_YN CHAR(1),
		@DEP_DATE VARCHAR(10)';

	--PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@PAGE_INDEX,
		@PAGE_SIZE,
		@TOTAL_COUNT OUTPUT,
		@MENU_STRING,
		@SITE_CODE,
		@MENU_CODE,
		@SEC_CODE,
		@DAY,
		@WEEKDAY,
		@MIN_PRICE,
		@MAX_PRICE,
		@MIN_DAY,
		@MAX_DAY,
		@CFM_YN,
		@DEP_DATE;

END


GO
