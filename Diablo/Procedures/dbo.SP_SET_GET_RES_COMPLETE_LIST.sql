USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		이규식
-- Create date: 2009-11-16
-- Description:	예약자별 수익현황 (2009-11-17까지만 사용 이후에는  SP_SET_GET_RES_COMPLETE_LIST_2 로 대체
-- =============================================
CREATE PROCEDURE [dbo].[SP_SET_GET_RES_COMPLETE_LIST]
(
	@DATE_TYPE	INT,
	@EMP_TYPE	INT,
	@START_DATE	DATETIME,
	@END_DATE	DATETIME,
	@REGION	CHAR(1),
	@NATION_CODE	VARCHAR(30),
	@CITY_CODE	VARCHAR(30),
	@ATTRIBUTE	CHAR(1),
	@TEAM_CODE	VARCHAR(3),
	@EMP_CODE	VARCHAR(7),
	@GROUP	INT,
	@ORDER	INT
)
AS
BEGIN
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	SET NOCOUNT ON

	DECLARE @SQLSTRING NVARCHAR(4000)
	DECLARE @PARMDEFINITION NVARCHAR(1000)
	DECLARE @PRO_CODE VARCHAR(20)
	DECLARE @MASTER_CODE VARCHAR(20)
	DECLARE @RES_CODE VARCHAR(20)
	DECLARE @DEP_DATE DATETIME
	DECLARE @REGION_NAME	VARCHAR(20)
	DECLARE @BASE_TEAM_CODE CHAR(3)

	DECLARE @TEMP_TABLE  TABLE 
	(
		PRO_CODE	VARCHAR(20),
		DEP_DATE	DATETIME,
		REGION_NAME	VARCHAR(20),
		RES_COUNT	INT,
		PROFIT		MONEY,
		SALE_PRICE	MONEY,
		PROFIT_EMP_NAME VARCHAR(10),
		PROFIT_TEAM_NAME VARCHAR(50),
		PRO_NAME	VARCHAR(100)
	);


	SET @SQLSTRING =
		N'SELECT
			B.MASTER_CODE, A.PRO_CODE, C.RES_CODE, A.DEP_DATE, D.TEAM_CODE,
			(SELECT KOR_NAME FROM PUB_REGION Z WHERE Z.REGION_CODE = E.SIGN_CODE) AS REGION_NAME
		FROM SET_MASTER A
		INNER JOIN PKG_DETAIL B ON B.PRO_CODE = A.PRO_CODE
		INNER JOIN RES_MASTER C ON C.PRO_CODE = B.PRO_CODE
		INNER JOIN EMP_MASTER D ON D.EMP_CODE = B.NEW_CODE
		INNER JOIN PKG_MASTER E ON E.MASTER_CODE = B.MASTER_CODE
		WHERE 1 = 1'
	
	-- DATE_TYPE(0 출발일, 1 - 도착일)
	IF (@DATE_TYPE = 1) 
	BEGIN
		SET @SQLSTRING =  @SQLSTRING + ' AND A.ARR_DATE >= @START_DATE AND A.ARR_DATE < @END_DATE + 1 ' 
	END
	ELSE
	BEGIN
		SET @SQLSTRING =  @SQLSTRING + ' AND A.DEP_DATE >= @START_DATE AND A.DEP_DATE < @END_DATE + 1 ' 
	END

	-- 속성코드
	IF (ISNULL(@ATTRIBUTE, '') <> '')
	BEGIN
		SET @SQLSTRING =  @SQLSTRING + ' AND E.ATT_CODE = @ATTRIBUTE ' 
	END

	-- 지역코드
	IF (ISNULL(@REGION, '') <> '')
	BEGIN
		SET @SQLSTRING =  @SQLSTRING + ' AND E.SIGN_CODE = @REGION ' 
	END
	
	-- 국가코드
	IF (ISNULL(@NATION_CODE, '') <> '')
	BEGIN
		SELECT @NATION_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@NATION_CODE, ',') FOR XML PATH('')), 1, 1, '')  
		
		SET @SQLSTRING = @SQLSTRING + ' AND EXISTS (SELECT TOP 1 1 FROM PKG_DETAIL_SCH_CITY Z WHERE Z.PRO_CODE = A.PRO_CODE AND Z.CITY_CODE IN ( SELECT CITY_CODE FROM PUB_CITY WHERE NATION_CODE IN (' + @NATION_CODE + ')))'
	END

	-- 도시코드
	IF (ISNULL(@CITY_CODE, '') <> '')
	BEGIN
		SELECT @CITY_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@CITY_CODE, ',') FOR XML PATH('')), 1, 1, '')  
		
		SET @SQLSTRING = @SQLSTRING + ' AND EXISTS (SELECT TOP 1 1 FROM PKG_DETAIL_SCH_CITY Z WHERE Z.PRO_CODE = A.PRO_CODE AND CITY_CODE IN (' + @CITY_CODE + '))' 
	END

	-- 도시코드
	--IF (ISNULL(@CITY_CODE, '') <> '')
	--BEGIN
	--	SET @SQLSTRING =  @SQLSTRING + ' AND EXISTS (SELECT CITY_CODE FROM PKG_DETAIL_SCH_CITY Z WHERE Z.PRO_CODE = A.PRO_CODE AND CITY_CODE = @CITY_CODE ' 
	--END

	IF(ISNULL(@EMP_TYPE, 0) = 0)
	BEGIN
		-- 팀코드
		--IF (ISNULL(@TEAM_CODE, '') <> '')
		--BEGIN
		--	SET @SQLSTRING =  @SQLSTRING + ' AND (D.TEAM_CODE = @TEAM_CODE OR C.PROFIT_TEAM_CODE = @TEAM_CODE) '
		--END

		-- 사원코드
		IF (ISNULL(@EMP_CODE, '') <> '')
		BEGIN
			SET @SQLSTRING =  @SQLSTRING + ' AND (B.NEW_CODE = @EMP_CODE OR C.PROFIT_EMP_CODE = @EMP_CODE) '
		END
		-- 팀코드
		ELSE IF (ISNULL(@TEAM_CODE, '') <> '')
		BEGIN
			SET @SQLSTRING =  @SQLSTRING + ' AND (D.TEAM_CODE = @TEAM_CODE OR C.PROFIT_TEAM_CODE = @TEAM_CODE) '
		END
	END
	ELSE
	-- 예약자로 검색
	BEGIN

		--IF (ISNULL(@TEAM_CODE, '') <> '')
		--BEGIN
		--	SET @SQLSTRING =  @SQLSTRING + ' AND (D.TEAM_CODE = @TEAM_CODE OR C.SALE_TEAM_CODE = @TEAM_CODE) '
		--END

		-- 사원코드
		IF (ISNULL(@EMP_CODE, '') <> '')
		BEGIN
			SET @SQLSTRING =  @SQLSTRING + ' AND (B.NEW_CODE = @EMP_CODE OR C.SALE_EMP_CODE = @EMP_CODE) '
		END
		-- 팀코드		
		ELSE IF (ISNULL(@TEAM_CODE, '') <> '')
		BEGIN
			SET @SQLSTRING =  @SQLSTRING + ' AND (D.TEAM_CODE = @TEAM_CODE OR C.SALE_TEAM_CODE = @TEAM_CODE) '
		END
	END


	SET @SQLSTRING =   'DECLARE USER_CURSOR2 CURSOR FOR ' + @SQLSTRING + ' AND DBO.FN_SET_GET_PRO_COUNT(A.PRO_CODE) > 0 ' 

	SET @PARMDEFINITION = N'@DATE_TYPE	INT,@START_DATE	DATETIME,@END_DATE	DATETIME,@REGION	CHAR(1),@ATTRIBUTE	CHAR(1), @TEAM_CODE VARCHAR(4), @EMP_CODE CHAR(7)';

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @DATE_TYPE,	@START_DATE	,@END_DATE, @REGION, @ATTRIBUTE, @TEAM_CODE, @EMP_CODE;

	
	OPEN USER_CURSOR2 
	FETCH NEXT FROM USER_CURSOR2 INTO @MASTER_CODE, @PRO_CODE, @RES_CODE, @DEP_DATE, @BASE_TEAM_CODE, @REGION_NAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO @TEMP_TABLE
		SELECT 
			A.PRO_CODE,
			@DEP_DATE,
			@REGION_NAME,
			A.RES_COUNT,
			A.BRANCH_PROFIT,
			A.SALE_PRICE,
			'' AS PROFIT_EMP_NAME,
			CASE WHEN @EMP_TYPE = 0 THEN A.PROFIT_TEAM_NAME ELSE B.SALE_TEAM_NAME END AS PROFIT_TEAM_NAME,
			'' AS PRO_NAME
		FROM DBO.FN_SET_GET_PRO_COMPLETE_2(@PRO_CODE) A
		INNER JOIN RES_MASTER B ON B.RES_CODE = A.RES_CODE
		WHERE A.RES_CODE = @RES_CODE
		AND 
		(
			(ISNULL(@EMP_CODE, '') = '' AND
			CASE WHEN ISNULL(@EMP_TYPE, 0) = 0 THEN
				CASE WHEN ISNULL(@TEAM_CODE, '') <> '' THEN A.PROFIT_TEAM_CODE  ELSE ISNULL(@TEAM_CODE, '') END  
			ELSE
				CASE WHEN ISNULL(@TEAM_CODE, '') <> '' THEN B.SALE_TEAM_CODE  ELSE ISNULL(@TEAM_CODE, '') END  
			END
			= ISNULL(@TEAM_CODE, '')
			)
		
		OR
			(ISNULL(@EMP_CODE, '') <> '' AND
			CASE WHEN ISNULL(@EMP_TYPE, 0) = 0 THEN
				CASE WHEN ISNULL(@EMP_CODE, '') <> '' THEN A.PROFIT_EMP_CODE ELSE ISNULL(@EMP_CODE , '') END 
			ELSE 
				CASE WHEN ISNULL(@EMP_CODE, '') <> '' THEN B.SALE_EMP_CODE ELSE ISNULL(@EMP_CODE , '') END 
			END = ISNULL(@EMP_CODE , '')
			)
		)

		FETCH NEXT FROM USER_CURSOR2 INTO @MASTER_CODE, @PRO_CODE, @RES_CODE, @DEP_DATE, @BASE_TEAM_CODE, @REGION_NAME
	END

	CLOSE USER_CURSOR2
	DEALLOCATE USER_CURSOR2

	-- 0 - 행사, 1 - 마스터
	IF @GROUP = 0
	BEGIN
		SELECT
		A.PRO_CODE,
		B.PRO_NAME,
		B.DEP_DATE,
		(SELECT KOR_NAME FROM PUB_REGION Z WHERE Z.SIGN = C.SIGN_CODE) AS REGION_NAME,
		SUM(A.RES_COUNT) AS RES_COUNT,
		SUM(A.PROFIT) AS PROFIT,
		SUM(A.SALE_PRICE) AS SALE_PRICE,
		A.PROFIT_TEAM_NAME
		FROM @TEMP_TABLE A
		INNER JOIN PKG_DETAIL B ON B.PRO_CODE = A.PRO_CODE
		INNER JOIN PKG_MASTER C ON C.MASTER_CODE = B.MASTER_CODE
		GROUP BY A.PRO_CODE, B.PRO_NAME, B.DEP_DATE, C.SIGN_CODE, A.PROFIT_TEAM_NAME
		ORDER BY 
			CASE WHEN @ORDER = 0 THEN C.SIGN_CODE ELSE A.PROFIT_TEAM_NAME END , B.DEP_DATE, A.PRO_CODE
	END
	ELSE
	BEGIN
		SELECT
		C.MASTER_CODE AS PRO_CODE,
		C.MASTER_NAME AS PRO_NAME,
		NULL AS DEP_DATE,
		(SELECT KOR_NAME FROM PUB_REGION Z WHERE Z.SIGN = C.SIGN_CODE) AS REGION_NAME,
		SUM(A.RES_COUNT) AS RES_COUNT,
		SUM(A.PROFIT) AS PROFIT,
		SUM(A.SALE_PRICE) AS SALE_PRICE,
		A.PROFIT_TEAM_NAME
		FROM @TEMP_TABLE A
		INNER JOIN PKG_DETAIL B ON B.PRO_CODE = A.PRO_CODE
		INNER JOIN PKG_MASTER C ON C.MASTER_CODE = B.MASTER_CODE
		GROUP BY C.MASTER_CODE, C.MASTER_NAME, C.SIGN_CODE, A.PROFIT_TEAM_NAME
		ORDER BY 
			CASE WHEN @ORDER = 0 THEN C.SIGN_CODE ELSE A.PROFIT_TEAM_NAME END , C.MASTER_CODE
	END

	SET NOCOUNT OFF
END







GO
