USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_RES_OPT_MASTER_SELECT_LIST]    
 @RES_CODE VARCHAR(12),    
 @RES_NAME VARCHAR(40),    
 @MASTER_NAME VARCHAR(50),    
 @OPT_TYPE INT,    
 @SEARCH_TYPE INT,    
 @START_DATE VARCHAR(10),    
 @END_DATE VARCHAR(10),    
 @REGION_CODE VARCHAR(3),    
 @NATION_CODE VARCHAR(3),    
 @STATE_CODE VARCHAR(4),    
 @CITY_CODE VARCHAR(3),    
 @EMP_CODE CHAR(7),    
 @TEAM_CODE CHAR(3)    
AS    
BEGIN    
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
 DECLARE @SQLSTRING NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000)    
    
 -- WHERE 조건 만들기    
 IF ISNULL(@RES_CODE, '') <> ''    
 BEGIN    
  SET @SQLSTRING = ' AND A.MASTER_CODE = @MASTER_CODE';    
 END    
 ELSE    
 BEGIN    
  SET @SQLSTRING = ''    
    
  -- 도시코드  
  IF ISNULL(@REGION_CODE, '') <> ''  
   SET @SQLSTRING = @SQLSTRING + ' AND C.REGION_CODE = @REGION_CODE'  
  IF ISNULL(@NATION_CODE, '') <> ''  
   SET @SQLSTRING = @SQLSTRING + ' AND C.NATION_CODE = @NATION_CODE'  
  IF ISNULL(@STATE_CODE, '') <> ''  
   SET @SQLSTRING = @SQLSTRING + ' AND C.STATE_CODE = @STATE_CODE'  
  IF ISNULL(@CITY_CODE, '') <> ''  
   SET @SQLSTRING = @SQLSTRING + ' AND C.CITY_CODE = @CITY_CODE'  
--  IF ISNULL(@CITY_CODE, '') <> ''    
--   SET @SQLSTRING = @SQLSTRING + ' AND C.REGION_CODE = @REGION_CODE AND C.NATION_CODE = @NATION_CODE AND C.STATE_CODE = @STATE_CODE AND C.CITY_CODE = @CITY_CODE'    
--  ELSE IF ISNULL(@STATE_CODE, '') <> ''    
--   SET @SQLSTRING = @SQLSTRING + ' AND C.REGION_CODE = @REGION_CODE AND C.NATION_CODE = @NATION_CODE AND C.STATE_CODE = @STATE_CODE'    
--  ELSE IF ISNULL(@NATION_CODE, '') <> ''    
--   SET @SQLSTRING = @SQLSTRING + ' AND C.REGION_CODE = @REGION_CODE AND C.NATION_CODE = @NATION_CODE'    
--  ELSE IF ISNULL(@REGION_CODE, '') <> ''    
--   SET @SQLSTRING = @SQLSTRING + ' AND C.REGION_CODE = @REGION_CODE'    
    
  -- 예약자    
  IF ISNULL(@MASTER_NAME, '') <> ''    
   SET @SQLSTRING = @SQLSTRING + ' AND B.RES_NAME = @RES_NAME'    
  
  -- 상품명    
  IF ISNULL(@MASTER_NAME, '') <> ''    
   SET @SQLSTRING = @SQLSTRING + ' AND C.MASTER_NAME LIKE (''%'' + @MASTER_NAME + ''%'')'    
  
  -- 옵션구분    
  IF ISNULL(@OPT_TYPE, 0) <> 0    
   SET @SQLSTRING = @SQLSTRING + ' AND C.OPT_TYPE = @OPT_TYPE'    
  
  -- 예약일    
  IF ISNULL(@START_DATE, '') <> '' AND ISNULL(@END_DATE, '') <> ''    
  BEGIN    
   IF @SEARCH_TYPE = 1    
    SET @SQLSTRING = @SQLSTRING + ' AND B.NEW_DATE BETWEEN @START_DATE AND @END_DATE'    
   ELSE IF @SEARCH_TYPE = 2    
    SET @SQLSTRING = @SQLSTRING + ' AND A.START_DATE BETWEEN @START_DATE AND @END_DATE'    
  END    
    
  -- 담당자코드( 없으면 팀 전체, 팀 코드가 없으면 전체)    
  IF ISNULL(@TEAM_CODE, '') <> ''    
  BEGIN    
   IF ISNULL(@EMP_CODE, '') <> ''    
    SET @SQLSTRING = @SQLSTRING + ' AND A.NEW_CODE = @EMP_CODE'    
   ELSE    
    SET @SQLSTRING = @SQLSTRING + ' AND A.NEW_CODE IN (SELECT EMP_CODE FROM EMP_MASTER WHERE TEAM_CODE = @TEAM_CODE)'    
  END    
  
  -- 기간 설정  
  IF ISNULL(@START_DATE, '') <> '' AND ISNULL(@END_DATE, '') <> ''  
  BEGIN  
   SET @SQLSTRING = @SQLSTRING + ' AND A.START_DATE BETWEEN @START_DATE AND @END_DATE '  
  END    
 END    
    
 SET @SQLSTRING = N'    
 SELECT B.RES_STATE, DBO.FN_RES_GET_PAY_STATE(A.RES_CODE) AS [PAY_STATE], A.RES_CODE, B.RES_NAME    
 , ISNULL((SELECT KOR_NAME FROM PUB_REGION WHERE REGION_CODE = C.REGION_CODE), '''') AS [REGION_NAME]    
 , C.MASTER_NAME, A.START_DATE, A.END_DATE, B.NEW_DATE, B.NEW_CODE, C.OPT_TYPE    
 , DBO.FN_RES_OPT_GET_TOTAL_PRICE(A.RES_CODE) AS [TOTAL_PRICE]    
 , (SELECT KOR_NAME FROM EMP_MASTER WHERE EMP_CODE = A.NEW_CODE) AS [NEW_NAME]    
 FROM RES_OPT_PRODUCT A    
 INNER JOIN RES_MASTER_damo B ON A.RES_CODE = B.RES_CODE    
 INNER JOIN OPT_MASTER C ON A.MASTER_CODE = C.MASTER_CODE    
 WHERE 1 = 1    
 ' + @SQLSTRING + '';    
    
 SET @PARMDEFINITION = N'@RES_CODE VARCHAR(12), @RES_NAME VARCHAR(40), @MASTER_NAME VARCHAR(50), @OPT_TYPE INT, @SEARCH_TYPE INT, @START_DATE VARCHAR(10), @END_DATE VARCHAR(10), @REGION_CODE VARCHAR(3), @NATION_CODE VARCHAR(3), @STATE_CODE VARCHAR(4), @CITY_CODE VARCHAR(3), @EMP_CODE CHAR(7), @TEAM_CODE CHAR(3)'    
    
 --PRINT @SQLSTRING  
 EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @RES_CODE, @RES_NAME, @MASTER_NAME, @OPT_TYPE, @SEARCH_TYPE, @START_DATE, @END_DATE, @REGION_CODE, @NATION_CODE, @STATE_CODE, @CITY_CODE, @EMP_CODE, @TEAM_CODE  
  
END  
  
-- @RES_CODE, @RES_NAME, @MASTER_NAME, @OPT_TYPE, @SEARCH_TYPE, @START_DATE, @END_DATE, @REGION_CODE, @NATION_CODE, @STATE_CODE, @CITY_CODE, @EMP_CODE, @TEAM_CODE  
-- SP_RES_OPT_MASTER_SELECT_LIST '', '', '', 1, 1, '', '', '', '', '', '', '529', ''  
  
  
  
GO
