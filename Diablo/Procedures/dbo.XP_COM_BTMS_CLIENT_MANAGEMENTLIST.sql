USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_COM_BTMS_CLIENT_MANAGEMENTLIST
■ DESCRIPTION				: BTMS 거래처 리스트 페이징
■ INPUT PARAMETER			: 
	@AGT_CODE				: 거래처코드
	@PAGE_INDEX				: 페이지 인덱스
	@PAGE_SIZE				: 페이지 사이즈
	@ORDER_TYPE				: 정렬 타입
	@SEARCH_OPTION			: 검색조건
■ OUTPUT PARAMETER			: 
■ EXEC		
	DECLARE @TOTAL INT
	EXEC DBO.XP_COM_BTMS_CLIENT_MANAGEMENTLIST 0, 3, @TOTAL OUTPUT, 'AgentTypeCode=10&PageIndex=0&PageSize=10&OrderType=1&DateType=S&ConStartDate=2016-05-01&ConEndDate=2016-05-31'
	SELECT @TOTAL AS TOTAL_COUNT
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY
------------------------------------------------------------------------------------------------------------------
   DATE					AUTHOR				DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2016-04-28		저스트고강태영			최초 생성
   2016-05-11		박형만					AGT_ID 추가 
   2016-05-19		저스트고이유라			기간검색 시작날짜 조건 > -> >= 으로 변경
   2016-06-07		김성호					BTMS_YN 검색 조건 추가
================================================================================================================*/ 
CREATE PROC [dbo].[XP_COM_BTMS_CLIENT_MANAGEMENTLIST]
	@PAGE_INDEX		INT,
	@PAGE_SIZE		INT,
	@TOTAL_COUNT	INT OUTPUT,
	@KEY			VARCHAR(1000)
AS 
BEGIN

	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

	DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(1000);
	DECLARE @WHERE NVARCHAR(4000), @SORT_STRING VARCHAR(100);
	DECLARE @AGT_CODE VARCHAR(10), @AGT_TYPE_CODE INT, @PAY_LATER_YN VARCHAR(1), @DATE_TYPE VARCHAR(1), @BTMS_YN VARCHAR(1);
	DECLARE @CON_START_DATE VARCHAR(20), @CON_END_DATE VARCHAR(20), @ORDER_TYPE INT;
	
	SELECT
		@AGT_CODE = DBO.FN_PARAM(@KEY, 'AgtCode'),
		@AGT_TYPE_CODE = DBO.FN_PARAM(@KEY, 'AgentTypeCode'),
		@BTMS_YN = DBO.FN_PARAM(@KEY, 'BtmsYn'),
		@PAY_LATER_YN = DBO.FN_PARAM(@KEY, 'PayLaterYn'),
		@DATE_TYPE = DBO.FN_PARAM(@KEY, 'DateType'),
		@CON_START_DATE = DBO.FN_PARAM(@KEY, 'ConStartDate'),
		@CON_END_DATE = DBO.FN_PARAM(@KEY, 'ConEndDate'),
		@ORDER_TYPE = DBO.FN_PARAM(@KEY, 'OrderType')

	SELECT @WHERE = 'WHERE 1 = 1'
	
	IF(LEN(@AGT_CODE) > 0)
	BEGIN
		SET @WHERE = @WHERE + ' AND A.AGT_CODE = @AGT_CODE '
	END

	IF(@AGT_TYPE_CODE > 0)
	BEGIN
		SET @WHERE = @WHERE + ' AND A.AGT_TYPE_CODE = @AGT_TYPE_CODE '
	END

	IF LEN(@BTMS_YN) > 0
	BEGIN
		SET @WHERE = @WHERE +  ' AND A.BTMS_YN = @BTMS_YN'
	END

	IF(LEN(@PAY_LATER_YN) > 0)
	BEGIN
		SET @WHERE = @WHERE + ' AND A.PAY_LATER_YN = @PAY_LATER_YN '
	END

	IF(LEN(@DATE_TYPE) > 0 AND LEN(@CON_START_DATE) > 0 AND LEN(@CON_END_DATE) > 0)
	BEGIN
		IF(@DATE_TYPE = 'S')
		BEGIN
			SET @WHERE = @WHERE + ' AND B.CON_START_DATE >= CONVERT(DATETIME, @CON_START_DATE, 121) AND B.CON_START_DATE <= DATEADD(DAY, 1, CONVERT(DATETIME, @CON_END_DATE, 121) - 1) '
		END

		IF(@DATE_TYPE = 'E')
		BEGIN
			SET @WHERE = @WHERE + ' AND B.CON_END_DATE >= CONVERT(DATETIME, @CON_START_DATE, 121) AND B.CON_END_DATE <= DATEADD(DAY, 1, CONVERT(DATETIME, @CON_END_DATE, 121) - 1) '
		END
	END

	-- SORT 조건 만들기  
	SELECT @SORT_STRING = (  
		CASE @ORDER_TYPE
			WHEN 1 THEN 'A.NEW_DATE DESC'
			WHEN 2 THEN 'A.KOR_NAME ASC'
		END
	)

	SET @SQLSTRING = N'
		-- 전체 조회 갯수
		SELECT @TOTAL_COUNT = COUNT(*)
		FROM AGT_MASTER A WITH(NOLOCK)
		LEFT JOIN COM_MASTER B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE
		' + @WHERE + N';

		DECLARE @FROM INT,	@TO INT;

		SET @FROM = (@PAGE_INDEX * @PAGE_SIZE) + 1;
		SET @TO = (@PAGE_INDEX + 1) * @PAGE_SIZE;

		-- 리스트 조회
		WITH LIST AS
		(
			SELECT
				ROW_NUMBER() OVER (ORDER BY ' + @SORT_STRING + ') AS ROW_NUM,
				A.AGT_CODE, A.NEW_DATE, A.KOR_NAME
				FROM AGT_MASTER A WITH(NOLOCK)
				LEFT JOIN COM_MASTER B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE
				' + @WHERE + N'
		)
		SELECT
			@TOTAL_COUNT - ( ROW_NUM - 1) AS SEQ_NO,
			A.AGT_TYPE_CODE,
			(SELECT PUB_VALUE FROM COD_PUBLIC WITH(NOLOCK) WHERE PUB_TYPE = ''AGT.TYPE'' AND PUB_CODE = A.AGT_TYPE_CODE) AS AGT_TYPE_NAME,
			A.AGT_CODE,
			A.KOR_NAME,
			ISNULL((SELECT AGT_NAME FROM AGT_MASTER WHERE AGT_CODE = B.PARENT_AGT_CODE), ''-'') AS PARENT_AGT_NAME,
			A.AGT_REGISTER,
			A.CEO_NAME,
			A.AGT_NAME,
			A.NOR_TEL1,
			A.NOR_TEL2,
			A.NOR_TEL3 ,
			A.NEW_DATE,
			B.CON_START_DATE,
			B.CON_END_DATE,
			A.SHOW_YN,
			A.BTMS_YN,
			ISNULL(A.PAY_LATER_YN, ''N'') AS PAY_LATER_YN ,
			B.AGT_ID 
		FROM LIST Z
		INNER JOIN AGT_MASTER A WITH(NOLOCK) ON Z.AGT_CODE = A.AGT_CODE
		LEFT JOIN COM_MASTER B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE
		WHERE Z.ROW_NUM BETWEEN @FROM AND @TO
		ORDER BY Z.ROW_NUM, ' + @SORT_STRING

	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@TOTAL_COUNT INT OUTPUT,
		@AGT_CODE VARCHAR(10),
		@AGT_TYPE_CODE INT,
		@BTMS_YN CHAR(1),
		@PAY_LATER_YN VARCHAR(1),
		@DATE_TYPE VARCHAR(1),
		@CON_START_DATE VARCHAR(20),
		@CON_END_DATE VARCHAR(20)';

--	PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@PAGE_INDEX,
		@PAGE_SIZE,
		@TOTAL_COUNT OUTPUT,
		@AGT_CODE,
		@AGT_TYPE_CODE,
		@BTMS_YN,
		@PAY_LATER_YN,
		@DATE_TYPE,
		@CON_START_DATE,
		@CON_END_DATE;

END

GO
