USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: XP_COM_BIZTRIP_DETAIL_LIST_SELECT
■ DESCRIPTION				: BTMS 출장자 예약현황 리스트 검색
■ INPUT PARAMETER			: 
   @PAGE_INDEX  INT			: 현재 페이지
   @PAGE_SIZE  INT			: 한 페이지 표시 게시물 수
   @KEY      VARCHAR(400)	: 검색 키
   @ORDER_BY   INT			: 정렬 순서
■ OUTPUT PARAMETER			: 
   @TOTAL_COUNT INT OUTPUT	: 총 항목 수
■ EXEC						: 

declare @p5 int
set @p5=16
exec XP_COM_BIZTRIP_DETAIL_LIST_SELECT_OLD @PAGE_INDEX=1,@PAGE_SIZE=10,@KEY=N'agentCode=94097&EmpSeq=169&OrderBy=1',@ORDER_BY=1,@TOTAL_COUNT=@p5 output
select @p5

■ MEMO                  : 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY
------------------------------------------------------------------------------------------------------------------
	DATE			AUTHOR				DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
	2016-03-24		김성호				최초생성
	2016-04-05		저스트고_강태영		출장이력 조회 조건 추가
	2016-04-28		박형만				항공은 행사명 (항공사)여정-여정-여정... 으로 수정 
	2016-05-09		김성호				출장상태 예약 상태 기준 실시간 상태값 검색으로 변경
	2016-05-18		김성호				출발자에 포함된 출장도 검색되도록 수정
	2016-05-20		저스트고_이유라		규정위반사항 BT_CODE 단위 검색되도록 수정
	2016-07-07		박형만				항공예약 항공편,항공사,항공사명 조회(모바일추가사항) 
	2016-08-17		박형만				항공예약 항공사명 대신 , 비행타입(왕복,편도)명 조회 
	2016-08-25		박형만				날짜표시 , 비행타입명컬럼추가 ,  출장상태 , SearchBtState 조회상태추가 
	2016-08-29		박형만				항공도착일 없으면(편도) 항공상세의 출발편도착일 표시 
	2016-10-06		김성호				예약자는 해당 예약 전체, 출발자는 해당 예약만 표시되도록 수정
================================================================================================================*/ 
CREATE PROC [dbo].[XP_COM_BIZTRIP_DETAIL_LIST_SELECT]
	@PAGE_INDEX		INT,
	@PAGE_SIZE		INT,
	@TOTAL_COUNT	INT OUTPUT,
	@KEY			VARCHAR(400),
	@ORDER_BY		INT
AS 
BEGIN

	DECLARE @SQLSTRING NVARCHAR(MAX) = '', @PARMDEFINITION NVARCHAR(1000) = '';
	DECLARE @WHERE NVARCHAR(4000) = '', @SORT_STRING NVARCHAR(100) = ''
		, @RES_STATE_WHERE NVARCHAR(1000) = '', @SORT_STRING2 NVARCHAR(50) = '';

	DECLARE @AGT_CODE VARCHAR(10), @EMP_SEQ INT, @APPROVAL_CODE VARCHAR(10)
		, @CANCEL_RESERVE_YN VARCHAR(1), @BT_STATE_WHERE NVARCHAR(200) = ''
		, @SEARCH_BT_STATE INT, @START_DATE VARCHAR(20), @END_DATE VARCHAR(20), @RES_STATE VARCHAR(1);

	SELECT
		@AGT_CODE = DBO.FN_PARAM(@KEY, 'AgentCode'),
		@EMP_SEQ = DBO.FN_PARAM(@KEY, 'EmpSeq'),
		@APPROVAL_CODE = DBO.FN_PARAM(@KEY, 'AppCode'),
		@CANCEL_RESERVE_YN = DBO.FN_PARAM(@KEY, 'CancelYn'),
		@SEARCH_BT_STATE = DBO.FN_PARAM(@KEY, 'SearchBtState'),   --  0 전체 ,1 진행중 , 2 지난예약 , 3취소환불
		@START_DATE = DBO.FN_PARAM(@KEY, 'StartDate'),
		@END_DATE = DBO.FN_PARAM(@KEY, 'EndDate'),
		@RES_STATE = DBO.FN_PARAM(@KEY, 'ResState');

	IF LEN(@APPROVAL_CODE) > 0 OR @APPROVAL_CODE = ','
	BEGIN
		SET @WHERE = @WHERE + ' AND A.APPROVAL_STATE IN (SELECT DATA FROM DBO.FN_SPLIT(@APPROVAL_CODE, '','') WHERE Data <> '''')'
	END

	IF LEN(@START_DATE) > 0
		BEGIN
			SELECT @WHERE = @WHERE + (  
				' AND C.DEP_DATE >= CONVERT(DATETIME, @START_DATE, 121)  '
			)
		END

	IF LEN(@END_DATE) > 0
		BEGIN
			SELECT @WHERE = @WHERE + (  
				' AND C.DEP_DATE < DATEADD(DAY, 1, CONVERT(DATETIME, @END_DATE, 121)) '
			)
		END

	IF LEN(@RES_STATE) > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND C.RES_STATE = @RES_STATE '
--		SET @RES_STATE_WHERE = ' AND C.DEP_DATE >= CONVERT(DATETIME, @START_DATE, 121) AND C.DEP_DATE < DATEADD(DAY, 1, CONVERT(DATETIME, @END_DATE, 121)) AND C.RES_STATE = @RES_STATE '
	END
	--ELSE
	--	SET @RES_STATE_WHERE = '  '

	--상태별조회 (모바일에서 사용)
	IF ISNULL(@SEARCH_BT_STATE,'') <> ''
	BEGIN
		--진행중
		IF @SEARCH_BT_STATE = '1'
		BEGIN
			SET @BT_STATE_WHERE = N'WHERE Z.BT_STATE < 7 AND Z.BT_END_DATE > GETDATE() '
		END
		--지난예약 
		ELSE IF @SEARCH_BT_STATE = '2'
		BEGIN
			SET @BT_STATE_WHERE = N'WHERE Z.BT_STATE < 7 AND Z.BT_END_DATE < GETDATE() '
		END
		--취소,환불
		ELSE IF @SEARCH_BT_STATE = '3'
		BEGIN
			SET @BT_STATE_WHERE = N'WHERE Z.BT_STATE >= 7  '
		END
	END 
	ELSE 
	BEGIN
		-- 취소예약만 보기
		IF @CANCEL_RESERVE_YN = 'Y'
		BEGIN
			SET @BT_STATE_WHERE = N'WHERE Z.BT_STATE >= 7'
		END
		-- 취소예약 제외하고 보기
		ELSE IF @CANCEL_RESERVE_YN = 'N'
		BEGIN
			SET @BT_STATE_WHERE = N'WHERE Z.BT_STATE < 7'
		END
	END 

	-- SORT 조건 만들기
	SELECT @SORT_STRING = (  
		CASE @ORDER_BY
			WHEN 1 THEN ' Z.BT_STATE, A.LAST_NEW_DATE DESC'
			WHEN 2 THEN ' Z.BT_STATE, (CASE WHEN A.BT_START_DATE <= GETDATE() THEN 1 ELSE 0 END), A.BT_START_DATE'
--			WHEN 3 THEN ' Z.BT_STATE, (CASE WHEN A.BT_TIME_LIMIT <= GETDATE() THEN 1 ELSE 0 END), A.BT_TIME_LIMIT'
			WHEN 4 THEN ' Z.BT_STATE, (CASE WHEN A.BT_TIME_LIMIT <= GETDATE() THEN 1 ELSE 0 END), A.BT_TIME_LIMIT'
			ELSE ' Z.BT_STATE, Z.LAST_NEW_DATE DESC'
		END
	)
	SELECT @SORT_STRING2 = (
		CASE @ORDER_BY
			WHEN 1 THEN ' , A.BT_CODE DESC, C.NEW_DATE DESC'
			WHEN 2 THEN ' , A.BT_CODE DESC, C.DEP_DATE'
--			WHEN 3 THEN ' , A.BT_CODE DESC, C.LAST_PAY_DATE'
			WHEN 4 THEN ' , A.BT_CODE DESC, C.LAST_PAY_DATE'
			ELSE ' ,A.BT_CODE DESC, C.NEW_DATE DESC'
		END
	)

    SET @SQLSTRING = @SQLSTRING + CONVERT(NVARCHAR(MAX), N'
		-- 전체 조회 갯수
		WITH RES_CODE_LIST AS
		(
			SELECT C.RES_CODE
			FROM COM_BIZTRIP_MASTER A WITH(NOLOCK)
			INNER JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE AND A.BT_CODE = B.BT_CODE
			INNER JOIN RES_MASTER_damo C WITH(NOLOCK) ON B.RES_CODE = C.RES_CODE
			WHERE A.AGT_CODE = @AGT_CODE AND A.NEW_SEQ = @EMP_SEQ
			') + @WHERE + CONVERT(NVARCHAR(MAX), N'
			UNION
			SELECT C.RES_CODE
			FROM COM_BIZTRIP_MASTER A WITH(NOLOCK)
			INNER JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE AND A.BT_CODE = B.BT_CODE
			INNER JOIN RES_MASTER_damo C WITH(NOLOCK) ON B.RES_CODE = C.RES_CODE
			INNER JOIN RES_CUSTOMER_damo D WITH(NOLOCK) ON C.RES_CODE = D.RES_CODE
			INNER JOIN COM_EMPLOYEE_MATCHING E WITH(NOLOCK) ON E.AGT_CODE = @AGT_CODE AND D.CUS_NO = E.CUS_NO
			WHERE A.AGT_CODE = @AGT_CODE AND E.EMP_SEQ = @EMP_SEQ
			') + @WHERE + CONVERT(NVARCHAR(MAX), N'
			GROUP BY C.RES_CODE
		), BIZTRIP_LIST AS
		(
			SELECT C.AGT_CODE, C.BT_CODE, C.BT_END_DATE, (
				CASE
					WHEN MIN(A.RES_STATE) < 7 THEN 0
					WHEN MIN(A.RES_STATE) = 7 THEN 7
					ELSE 9
				END) AS [BT_STATE]
			FROM RES_MASTER_damo A
			INNER JOIN COM_BIZTRIP_DETAIL B ON A.RES_CODE = B.RES_CODE
			INNER JOIN COM_BIZTRIP_MASTER C ON B.AGT_CODE = C.AGT_CODE AND B.BT_CODE = C.BT_CODE
			WHERE A.RES_CODE IN (SELECT RES_CODE FROM RES_CODE_LIST)
			GROUP BY C.AGT_CODE, C.BT_CODE, C.BT_END_DATE
		)
		SELECT @TOTAL_COUNT = COUNT(*)
		FROM BIZTRIP_LIST Z
		' + @BT_STATE_WHERE + N';')

	SELECT @SQLSTRING = @SQLSTRING + CONVERT(NVARCHAR(MAX), N'
		-- 리스트 조회
		WITH RES_CODE_LIST AS
		(
			SELECT C.RES_CODE
			FROM COM_BIZTRIP_MASTER A WITH(NOLOCK)
			INNER JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE AND A.BT_CODE = B.BT_CODE
			INNER JOIN RES_MASTER_damo C WITH(NOLOCK) ON B.RES_CODE = C.RES_CODE
			WHERE A.AGT_CODE = @AGT_CODE AND A.NEW_SEQ = @EMP_SEQ
			') + @WHERE + CONVERT(NVARCHAR(MAX), N'
			UNION
			SELECT C.RES_CODE
			FROM COM_BIZTRIP_MASTER A WITH(NOLOCK)
			INNER JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE AND A.BT_CODE = B.BT_CODE
			INNER JOIN RES_MASTER_damo C WITH(NOLOCK) ON B.RES_CODE = C.RES_CODE
			INNER JOIN RES_CUSTOMER_damo D WITH(NOLOCK) ON C.RES_CODE = D.RES_CODE
			INNER JOIN COM_EMPLOYEE_MATCHING E WITH(NOLOCK) ON E.AGT_CODE = @AGT_CODE AND D.CUS_NO = E.CUS_NO
			WHERE A.AGT_CODE = @AGT_CODE AND E.EMP_SEQ = @EMP_SEQ
			') + @WHERE + CONVERT(NVARCHAR(MAX), N'
			GROUP BY C.RES_CODE
		), BIZTRIP_LIST AS
		(
			SELECT C.AGT_CODE, C.BT_CODE, C.LAST_NEW_DATE, C.BT_END_DATE, (
				CASE
					WHEN MIN(A.RES_STATE) < 7 THEN 0
					WHEN MIN(A.RES_STATE) = 7 THEN 7
					ELSE 9
				END) AS [BT_STATE]
			FROM RES_MASTER_damo A
			INNER JOIN COM_BIZTRIP_DETAIL B ON A.RES_CODE = B.RES_CODE
			INNER JOIN COM_BIZTRIP_MASTER C ON B.AGT_CODE = C.AGT_CODE AND B.BT_CODE = C.BT_CODE
			WHERE A.RES_CODE IN (SELECT RES_CODE FROM RES_CODE_LIST)
			GROUP BY C.AGT_CODE, C.BT_CODE, C.LAST_NEW_DATE, C.BT_END_DATE
		), RES_LIST AS
		(
			SELECT A.AGT_CODE, A.BT_CODE, A.LAST_NEW_DATE, A.BT_START_DATE, A.BT_END_DATE, Z.BT_STATE, (
					SELECT COUNT(*)
					FROM COM_BIZTRIP_DETAIL AA WITH(NOLOCK)
					WHERE AA.AGT_CODE = A.AGT_CODE AND AA.BT_CODE = A.BT_CODE AND AA.RES_CODE IN (SELECT RES_CODE FROM RES_CODE_LIST)
				) AS [RES_COUNT]
			FROM BIZTRIP_LIST Z
			INNER JOIN COM_BIZTRIP_MASTER A ON Z.AGT_CODE = A.AGT_CODE AND Z.BT_CODE = A.BT_CODE
			') + @BT_STATE_WHERE + CONVERT(NVARCHAR(MAX), N'
			ORDER BY ') + @SORT_STRING + CONVERT(NVARCHAR(MAX), N'
			OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
			ROWS ONLY
		), CUS_LIST AS
		(
			SELECT A.RES_CODE, COUNT(*) AS [CUS_COUNT]
			FROM RES_CODE_LIST A
			INNER JOIN RES_MASTER_damo B ON A.RES_CODE = B.RES_CODE
			INNER JOIN RES_CUSTOMER_damo C ON B.RES_CODE = C.RES_CODE
			WHERE B.RES_STATE <= 7 AND C.RES_STATE = 0 
			GROUP BY A.RES_CODE
		)
		SELECT
			A.AGT_CODE, A.BT_CODE, B.RES_CODE, A.APPROVAL_STATE, Z.LAST_NEW_DATE, Z.RES_COUNT 
			, A.BT_START_DATE , A.BT_END_DATE  
			, (
				CASE
					WHEN C.PRO_TYPE = 2 THEN ''항공''
					WHEN C.PRO_TYPE = 3 THEN ''호텔''
					WHEN C.PRO_TYPE = 1 AND B.PRO_DETAIL_TYPE = 4 THEN ''렌트카''
					WHEN C.PRO_TYPE = 1 AND B.PRO_DETAIL_TYPE = 5 THEN ''비자''
					WHEN C.PRO_TYPE = 1 AND B.PRO_DETAIL_TYPE = 9 THEN ''기타'' END) AS [PRO_TYPE_NAME]
			, CASE WHEN C.PRO_TYPE = 2 THEN dbo.FN_RES_AIR_GET_PRO_NAME(C.RES_CODE) ELSE '''' END  AS ROUTING_TEXT 
			, CASE WHEN C.PRO_TYPE = 2 THEN dbo.FN_RES_AIR_GET_RTG_TYPE(C.RES_CODE) ELSE 0 END AS ROUTING_TYPE  
			, CASE WHEN C.PRO_TYPE = 2 THEN 
				(CASE dbo.FN_RES_AIR_GET_RTG_TYPE(C.RES_CODE) WHEN 1 THEN ''(편도)'' WHEN 2 THEN ''(다구간)'' ELSE ''(왕복)'' END ) +
					dbo.FN_RES_AIR_GET_PRO_NAME(C.RES_CODE)   --항공일때 항공사 + 여정표시  
				ELSE C.PRO_NAME END AS PRO_NAME  
			, C.DEP_DATE, CASE WHEN C.ARR_DATE IS NULL THEN CONVERT(DATETIME,CONVERT(VARCHAR(10), E.DEP_ARR_DATE) + '' '' + E.DEP_ARR_TIME ) ELSE C.ARR_DATE END AS ARR_DATE

			, DATEDIFF(DAY, C.DEP_DATE, CASE WHEN C.ARR_DATE IS NULL THEN CONVERT(DATETIME,CONVERT(VARCHAR(10), E.DEP_ARR_DATE) + '' '' + E.DEP_ARR_TIME ) ELSE C.ARR_DATE END) AS [PRO_DAY]
			, C.LAST_PAY_DATE, C.RES_STATE
			, (CASE WHEN Z.BT_STATE = 0 THEN DATEDIFF(DAY, GETDATE(), C.LAST_PAY_DATE) ELSE -999 END) AS [LIMIT_DAY]
			, (
				CASE
					WHEN Z.BT_STATE = 7 THEN ''환불''
					WHEN Z.BT_STATE = 9 THEN ''취소''
					WHEN Z.BT_STATE = 0 AND EXISTS(
						SELECT 1 FROM COM_BIZTRIP_RULE_REMARK AA WITH(NOLOCK) 
						WHERE AA.RES_CODE IN (
							SELECT RES_CODE FROM COM_BIZTRIP_DETAIL BB WITH(NOLOCK) 
							WHERE BB.AGT_CODE = Z.AGT_CODE AND BB.BT_CODE = Z.BT_CODE
							)
						) THEN ''규정위반''
				END) AS [BT_STATE_NAME]
			, DBO.FN_RES_GET_TOTAL_PRICE(C.RES_CODE) AS [TOTAL_SALE_PRICE], ISNULL(D.CUS_COUNT, 0) AS [CUS_COUNT]
			, E.AIRLINE_CODE 
			, (SELECT KOR_NAME FROM PUB_AIRLINE WHERE AIRLINE_CODE = E.AIRLINE_CODE ) AS AIRLINE_NAME 
			, F.FLIGHT AS AIRLINE_FLIGHT 
			, E.FARE_SEAT_TYPE 
			, CASE WHEN C.PRO_TYPE = 2 THEN ISNULL((SELECT MAX(SEG_CNT) FROM (SELECT COUNT(*) SEG_CNT FROM RES_SEGMENT WHERE RES_CODE = C.RES_CODE GROUP BY DIRECTION  ) T ),0) - 1  END AS NUMBER_OF_STOP 
		FROM RES_LIST Z
		INNER JOIN COM_BIZTRIP_MASTER A WITH(NOLOCK) ON Z.AGT_CODE = A.AGT_CODE AND Z.BT_CODE = A.BT_CODE
		INNER JOIN COM_BIZTRIP_DETAIL B WITH(NOLOCK) ON Z.AGT_CODE = B.AGT_CODE AND Z.BT_CODE = B.BT_CODE
		INNER JOIN RES_MASTER_DAMO C WITH(NOLOCK) ON B.RES_CODE = C.RES_CODE AND C.RES_CODE IN (SELECT RES_CODE FROM RES_CODE_LIST)
		LEFT JOIN CUS_LIST D ON C.RES_CODE = D.RES_CODE
		LEFT JOIN RES_AIR_DETAIL E WITH(NOLOCK) ON C.RES_CODE = E.RES_CODE 
		LEFT JOIN RES_SEGMENT F WITH(NOLOCK)  ON C.RES_CODE = F.RES_CODE AND F.SEQ_NO = 1 
		ORDER BY ') + @SORT_STRING + @SORT_STRING2

	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@TOTAL_COUNT INT OUTPUT,
		@AGT_CODE VARCHAR(10),
		@EMP_SEQ INT,
		@APPROVAL_CODE VARCHAR(10),
--		@STATE_CODE VARCHAR(10),
		@START_DATE VARCHAR(20),
		@END_DATE VARCHAR(20),
		@RES_STATE VARCHAR(1)';
	  
	PRINT @SQLSTRING

   EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@PAGE_INDEX,
		@PAGE_SIZE,
		@TOTAL_COUNT OUTPUT,
		@AGT_CODE,
		@EMP_SEQ,
		@APPROVAL_CODE,
--		@STATE_CODE,
		@START_DATE,
		@END_DATE,
		@RES_STATE;

END 

GO
