USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_PKG_DETAIL_SELECT_LIST_CONSULT]
	@PRO_NAME		NVARCHAR(100),
	@PRO_CODE		VARCHAR(20),
	@ATT_CODE		VARCHAR(1),
	@CITY_CODE		VARCHAR(3),
	@START_DATE		VARCHAR(10),
	@END_DATE		VARCHAR(10),
	@START_PRICE	INT,
	@END_PRICE		INT,
	@TRANS_TYPE		INT,
	@DEP_CFM_YN		VARCHAR(1),
	@RES_YN			INT
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	DECLARE @SQLSTRING NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000)

	-- WHERE 조건 만들기
	SET @SQLSTRING = 'WHERE 1 = 1';
	
		-- 행사코드
	IF LEN(ISNULL(@PRO_CODE, '')) >= 6
		SET @SQLSTRING = @SQLSTRING + ' AND A.PRO_CODE LIKE @PRO_CODE + ''%'''

		-- 행사명
	IF ISNULL(@PRO_NAME, '') <> ''
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' AND A.PRO_NAME LIKE (''%'' + @PRO_NAME + ''%'')'
	END

		-- 상품속성
	IF ISNULL(@ATT_CODE, '') <> ''
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' AND EXISTS (SELECT 1 FROM PKG_ATTRIBUTE WHERE MASTER_CODE = A.MASTER_CODE AND ATT_CODE = @ATT_CODE)'
	END

		-- 도시코드
	IF ISNULL(@CITY_CODE, '') != ''
		SET @SQLSTRING = @SQLSTRING + ' AND EXISTS(SELECT 1 FROM PKG_DETAIL_SCH_CITY WHERE MASTER_CODE = A.MASTER_CODE AND MAINCITY_YN = ''Y'' AND CITY_CODE = @CITY_CODE)'

		-- 출발일
	IF ISNULL(@START_DATE, '') <> '' AND ISNULL(@END_DATE, '') != ''
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' AND A.DEP_DATE BETWEEN @START_DATE AND @END_DATE'
	END

		-- 가격대
	IF ISNULL(@START_PRICE, 0) > 0 AND ISNULL(@END_PRICE, 0) > 0
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' AND EXISTS (SELECT 1 FROM PKG_DETAIL_PRICE WHERE PRO_CODE = A.PRO_CODE AND ADT_PRICE BETWEEN @START_PRICE AND @END_PRICE)'
	END

		-- 교통편
	IF ISNULL(@TRANS_TYPE, 0) > 0
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' AND EXISTS (SELECT 1 FROM PRO_TRANS_SEAT WHERE SEAT_CODE = A.SEAT_CODE AND TRANS_TYPE = @TRANS_TYPE)'
	END

		-- 출발여부
	IF ISNULL(@DEP_CFM_YN, '') <> ''
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' AND A.DEP_CFM_YN = @DEP_CFM_YN'
	END

		-- @예약자 유무
	IF @RES_YN > 0
		SET @SQLSTRING = @SQLSTRING + ' AND ' + CASE @RES_YN WHEN 2 THEN 'NOT ' ELSE '' END + 'EXISTS(SELECT 1 FROM RES_MASTER_damo WHERE PRO_CODE = A.PRO_CODE AND RES_STATE >= 6)'

	SET @SQLSTRING = N'
	WITH LIST AS
	(
		SELECT ROW_NUMBER() OVER (ORDER BY A.PRO_CODE) AS [ROWNUMBER], A.PRO_CODE
		FROM PKG_DETAIL A
		' + @SQLSTRING + '
	)
	SELECT A.ROWNUMBER, A.PRO_CODE, B.PRO_NAME, B.DEP_DATE, ISNULL(B.FAKE_COUNT, 0) AS [FAKE_COUNT], ISNULL(B.MIN_COUNT, 0) AS [MIN_COUNT]
		, ISNULL((SELECT TOP 1 ADT_PRICE FROM PKG_DETAIL_PRICE WHERE PRO_CODE = B.PRO_CODE), 0) AS [PRO_PRICE]
		, (SELECT COUNT(*) FROM RES_CUSTOMER WHERE RES_CODE IN (SELECT RES_CODE FROM RES_MASTER_damo WHERE PRO_CODE = B.PRO_CODE) AND RES_STATE = 0) AS [RES_COUNT]
		, STUFF((SELECT ''/'' + BB.PUB_VALUE AS [text()]
			FROM PKG_ATTRIBUTE AA
			INNER JOIN (SELECT * FROM COD_PUBLIC WHERE PUB_TYPE = ''PKG.ATTRIBUTE'') BB ON AA.ATT_CODE = BB.PUB_CODE
			WHERE AA.MASTER_CODE = B.MASTER_CODE FOR XML PATH('''') ), 1, 1, '''') AS [PRO_ATTRIBUTE]
	FROM LIST A
	INNER JOIN PKG_DETAIL B ON A.PRO_CODE = B.PRO_CODE;';

	SET @PARMDEFINITION = N'@PRO_NAME NVARCHAR(100), @PRO_CODE VARCHAR(20), @ATT_CODE VARCHAR(1), @CITY_CODE VARCHAR(3), @START_DATE VARCHAR(10), @END_DATE VARCHAR(10), @START_PRICE INT, @END_PRICE INT, @TRANS_TYPE INT, @DEP_CFM_YN VARCHAR(1), @RES_YN INT';

	--PRINT @SQLSTRING
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @PRO_NAME, @PRO_CODE, @ATT_CODE, @CITY_CODE, @START_DATE, @END_DATE, @START_PRICE, @END_PRICE, @TRANS_TYPE, @DEP_CFM_YN, @RES_YN;
END

--	@FLAG, @PAGE_SIZE, @PAGE_INDEX, @EMP_CODE, @TEAM_CODE, @PRO_CODE, @PRO_NAME, @START_DATE, @END_DATE, @WEEK_DAY_TYPE, @CITY_CODE, @RES_YN INT
--	SP_PKG_DETAIL_SELECT_LIST_CONSULT 'L', 10, 0, '', '529', 'CPW100', '상품명', '2008-12-20', '2008-12-31', '1111111', 'TYO', 0
--	SP_PKG_DETAIL_SELECT_LIST_CONSULT 'L', 10, 0, '', '529', '', '', '', '', '1011111', '',
GO
