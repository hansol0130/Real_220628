USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: SP_PKG_GMARKET_SELECT_MOB_LIST
■ DESCRIPTION				: <G마켓 상품연동 XML 생성 GProductMakeXML.exe (모바일) >
■ INPUT PARAMETER			: 
	@MASTER_CODE_STRING		: 마스터 코드
■ OUTPUT PARAMETER			: 
■ EXEC						: 
app9103
	exec SP_PKG_GMARKET_SELECT_MOB_LIST 'UPP603'
	
	exec SP_PKG_GMARKET_SELECT_MOB_LIST 'kpp331'

	exec SP_PKG_GMARKET_SELECT_MOB_LIST 'XXX903'
	
	'EPP200-140128OZ', 4
	'EPP471'
	SELECT * INTO #TMP_LIST FROM 
	SP_PKG_GMARKET_SELECT_LIST '' 
	exec SP_PKG_GMARKET_SELECT_LIST 'EPP426'

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
2017-01-25			박형만			모바일 상품 수정
================================================================================================================*/ 
CREATE PROC [dbo].[SP_PKG_GMARKET_SELECT_MOB_LIST]
	@MASTER_CODE_STRING VARCHAR(1000)
AS 
BEGIN


--DECLARE @MASTER_CODE_STRING  VARCHAR(1000)
--SET @MASTER_CODE_STRING = 'UPP603'

	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

	DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(100)

	SET @SQLSTRING = N'WHERE B.PROVIDER = 14 /* A.LAST_DATE > GETDATE() AND A.SHOW_YN = ''Y'' AND  AND B.USE_YN = ''Y'' */ ' 

	IF ISNULL(@MASTER_CODE_STRING, '') <> ''
	BEGIN
		SET @SQLSTRING = @SQLSTRING + N' AND A.MASTER_CODE IN (SELECT DATA FROM DBO.FN_SPLIT(@MASTER_CODE, '',''))'
	END

	SET @SQLSTRING = N'
	-- MASTER
WITH MASTER_LIST AS
(
	SELECT  
		A.MASTER_CODE AS GD_CD , 
		'''' ADD_BENEFIT_CONTENT,
		C.PKG_INCLUDE AS INCLUSION_CONTENT,
		C.PKG_NOT_INCLUDE AS EXCLUSION_CONTENT,

		A.PKG_INC_SPECIAL AS CHECK_CONTENT,
		A.HOTEL_REMARK AS HOTEL_INFO ,
		'''' AS SEL_SIGHTSEEING_INFO,
		'''' AS TOUR_PLACE_INFO,
		A.RES_REMARK AS MATTEN,
		A.PKG_REMARK AS ETC 
	FROM PKG_MASTER AS A WITH(NOLOCK)  
		INNER JOIN PKG_MASTER_AFFILIATE B WITH(NOLOCK) 
			ON A.MASTER_CODE = B.MASTER_CODE
		INNER JOIN PKG_MASTER_PRICE C WITH(NOLOCK)  
			ON A.MASTER_CODE = C.MASTER_CODE 
			AND C.PRICE_SEQ = 
			( SELECT MAX(PRICE_SEQ) FROM PKG_MASTER_PRICE WITH(NOLOCK)  WHERE MASTER_CODE = C.MASTER_CODE )  -- 가장최근 PRICE_SEQ 
		INNER JOIN PKG_MASTER_SCH_MASTER D  WITH(NOLOCK)  
			ON A.MASTER_CODE = D.MASTER_CODE
			AND C.SCH_SEQ = D.SCH_SEQ 
		' + @SQLSTRING + '

	), 
	CITY_LIST AS
	(
		SELECT ROW_NUMBER() OVER (PARTITION BY A.MASTER_CODE ORDER BY MAX(A.CITY_SHOW_ORDER) DESC) AS [ROW_NUMBER]
			, UPPER(A.MASTER_CODE) AS MASTER_CODE, D.G_CITY_CODE AS [CITY_CODE], B.KOR_NAME AS [CITY_NAME], C.NATION_CODE, C.KOR_NAME AS [NATION_NAME]
		FROM MASTER_LIST Z
		INNER JOIN PKG_MASTER_SCH_CITY A WITH(NOLOCK) ON Z.GD_CD = A.MASTER_CODE
		INNER JOIN PUB_CITY B WITH(NOLOCK) ON A.CITY_CODE = B.CITY_CODE
		INNER JOIN PUB_NATION C WITH(NOLOCK) ON B.NATION_CODE = C.NATION_CODE
		INNER JOIN GMARKET_CITY_MAP D WITH(NOLOCK) ON B.CITY_CODE = D.G_CITY_CODE
		WHERE A.MAINCITY_YN = ''Y''
		GROUP BY A.MASTER_CODE, D.G_CITY_CODE, B.KOR_NAME, C.NATION_CODE, C.KOR_NAME
	)
	SELECT
		A.*
	FROM MASTER_LIST A
	LEFT JOIN (
		SELECT *
		FROM CITY_LIST AA
		WHERE AA.ROW_NUMBER = 1
	) B ON A.GD_CD = B.MASTER_CODE
	'

------마스터 에 해당 하는 거 가져오기 
--SELECT TOP 100 
--A.MASTER_CODE AS GD_CD , 
--'' ADD_BENEFIT_CONTENT,
--C.PKG_INCLUDE AS INCLUSION_CONTENT,
--C.PKG_NOT_INCLUDE AS EXCLUSION_CONTENT,

--A.PKG_INC_SPECIAL AS CHECK_CONTENT,
--A.HOTEL_REMARK AS HOTEL_INFO ,
--'' AS SEL_SIGHTSEEING_INFO,
--'' AS TOUR_PLACE_INFO,
--A.RES_REMARK AS MATTEN,
--A.PKG_REMARK AS ETC 
--FROM PKG_MASTER AS A WITH(NOLOCK)  
--	INNER JOIN PKG_MASTER_AFFILIATE B WITH(NOLOCK) 
--		ON A.MASTER_CODE = B.MASTER_CODE
--	INNER JOIN PKG_MASTER_PRICE C WITH(NOLOCK)  
--		ON A.MASTER_CODE = C.MASTER_CODE 
--		AND C.PRICE_SEQ = 
--		( SELECT MAX(PRICE_SEQ) FROM PKG_MASTER_PRICE WITH(NOLOCK)  WHERE MASTER_CODE = C.MASTER_CODE )  -- 가장최근 PRICE_SEQ 
--	INNER JOIN PKG_MASTER_SCH_MASTER D  WITH(NOLOCK)  
--		ON A.MASTER_CODE = D.MASTER_CODE
--		AND C.SCH_SEQ = D.SCH_SEQ 
--WHERE A.MASTER_CODE = 'UPP603'

----행사에 에 해당 하는 거 가져오기 
--select top 100 
--A.MASTER_CODE AS GD_CD , 
--'' ADD_BENEFIT_CONTENT,
--B.PKG_INCLUDE AS INCLUSION_CONTENT,
--B.PKG_NOT_INCLUDE AS EXCLUSION_CONTENT,

--A.PKG_INC_SPECIAL AS CHECK_CONTENT,
--A.HOTEL_REMARK AS HOTEL_INFO ,
--'' AS SEL_SIGHTSEEING_INFO,
--'' AS TOUR_PLACE_INFO,
--A.RES_REMARK AS MATTEN,
--A.PKG_REMARK AS ETC
--from PKG_DETAIL AS A
--	INNER JOIN PKG_DETAIL_PRICE B
--		ON A.PRO_CODE = B.PRO_CODE 
--where A.pro_code = 'UPP603-170130KE'
--ORDER BY B.PRICE_SEQ DESC  


	SET @PARMDEFINITION = N'@MASTER_CODE VARCHAR(1000)';

	--PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @MASTER_CODE_STRING;

END

GO
