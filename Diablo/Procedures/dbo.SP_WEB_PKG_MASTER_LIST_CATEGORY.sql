USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2011-03-16 박형만 PROVIDER 조건 PKG_MASTER_AFFILIATE 와 조인
2012-04-16 박형만 @BRAND_TYPE 조건 추가 
2012-11-26 박형만 그룹코드가 아닐경우, 부산,광주,대전,법인 lcc 상품 제거 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
CREATE PROCEDURE [dbo].[SP_WEB_PKG_MASTER_LIST_CATEGORY]
	@FLAG			CHAR(1),
	@REGION_CODE	VARCHAR(100),
	@NATION_CODE	VARCHAR(100),
	@CITY_CODE		VARCHAR(100),
	@GROUP_CODE		VARCHAR(500),
	@ATT_CODE		VARCHAR(100),
	
	@START_DATE		DATETIME,
	@END_DATE		DATETIME,
	@DAY			INT,
	@PRICE			INT,
	@SEARCH_TEXT	VARCHAR(100),
	@PROVIDER		INT,
	
	@BRAND_TYPE		INT -- 브랜드타입  99: 브랜드 있는 전체 
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	DECLARE @SQLSTRING NVARCHAR(4000), @WHERE NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000), @KEYWORD NVARCHAR(4000);

	-- 부산, 광주, 대전, 법인, LCC 팀 제거
	DECLARE @PUSAN_TEAM_CODE VARCHAR(100) -- 변수 크기 주의
	SET @PUSAN_TEAM_CODE = '''514'', ''515'', ''516'', ''524'', ''531''';

	--SET @FLAG = 'A'

	-- WHERE 조건 만들기
	SET @WHERE = 'WHERE A.SHOW_YN = ''Y'''
	
	-- 검색조건 추가
	IF @START_DATE IS NOT NULL AND @END_DATE IS NOT NULL
	BEGIN  
		SET @WHERE = @WHERE + ' AND A.LAST_DATE > @START_DATE AND A.NEXT_DATE < @END_DATE'
	END
	ELSE
	BEGIN
		SET @WHERE = @WHERE + ' AND A.LAST_DATE > GETDATE()'
	END
	
	IF @DAY > 0 AND @DAY < 10
	BEGIN
		SET @WHERE = @WHERE + ' AND A.TOUR_DAY = @DAY'
	END
	ELSE IF @DAY >= 10
	BEGIN
		SET @WHERE = @WHERE + ' AND A.TOUR_DAY >= @DAY'
	END
	
	IF @PRICE > 0
	BEGIN
		SET @WHERE = @WHERE + ' AND @PRICE BETWEEN A.LOW_PRICE AND A.HIGH_PRICE'
	END

	IF ISNULL(@SEARCH_TEXT, '') <> ''
	BEGIN
		SELECT @KEYWORD = '(' + STUFF((SELECT (' AND (A.MASTER_NAME LIKE ''%' + DATA + '%'')') AS [text()] FROM [DBO].[FN_SPLIT] (@SEARCH_TEXT, ' ') WHERE DATA <> '' FOR XML PATH('')), 1, 5, '') + ')'
		SELECT @KEYWORD = @KEYWORD + ' OR (' + STUFF((SELECT (' AND (A.KEYWORD LIKE ''%' + DATA + '%'')') AS [text()] FROM [DBO].[FN_SPLIT] (@SEARCH_TEXT, ' ') WHERE DATA <> '' FOR XML PATH('')), 1, 5, '') + ')'
		SELECT @KEYWORD = @KEYWORD + ' OR (' + STUFF((SELECT (' OR (A.MASTER_CODE = ''' + DATA + ''')') AS [text()] FROM [DBO].[FN_SPLIT] (@SEARCH_TEXT, ' ') WHERE DATA <> '' FOR XML PATH('')), 1, 4, '') + ')'
		SELECT @KEYWORD = ' AND (' + @KEYWORD + ')'

		SET @WHERE = @WHERE + @KEYWORD
	END
		-- 검색조건 추가

	-- 지역코드
	IF ISNULL(@REGION_CODE, '') <> ''
	BEGIN
		SELECT @REGION_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@REGION_CODE, ',') FOR XML PATH('')), 1, 1, '')

		SET @WHERE = @WHERE + ' AND A.SIGN_CODE IN (' + @REGION_CODE + ')'
			
		--SET @WHERE = @WHERE + ' AND B.CITY_CODE IN (
		--	SELECT C.CITY_CODE FROM PUB_REGION A WITH(NOLOCK)
		--	INNER JOIN PUB_NATION B WITH(NOLOCK) ON A.REGION_CODE = B.REGION_CODE
		--	INNER JOIN PUB_CITY C WITH(NOLOCK) ON B.NATION_CODE = C.NATION_CODE
		--	WHERE [SIGN] IN (' + @REGION_CODE + ')
		--)'
	END
	-- 국가코드
	IF ISNULL(@NATION_CODE, '') <> ''
	BEGIN
		SELECT @NATION_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@NATION_CODE, ',') FOR XML PATH('')), 1, 1, '')
		SET @WHERE = @WHERE + ' AND B.MAINCITY_YN = ''Y'' AND B.CITY_CODE IN (
			SELECT CITY_CODE FROM PUB_CITY WHERE NATION_CODE IN (' + @NATION_CODE + '))'
	END
	-- 도시코드
	IF ISNULL(@CITY_CODE, '') <> ''
	BEGIN
		SELECT @CITY_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@CITY_CODE, ',') FOR XML PATH('')), 1, 1, '')
		SET @WHERE = @WHERE + ' AND B.MAINCITY_YN = ''Y'' AND B.CITY_CODE IN (
			SELECT CITY_CODE FROM PUB_CITY WHERE CITY_CODE IN (' + @CITY_CODE + '))'
	END
	-- 그룹코드
	IF ISNULL(@GROUP_CODE, '') <> ''
	BEGIN
		SELECT @GROUP_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@GROUP_CODE, ',') FOR XML PATH('')), 1, 1, '')
		SET @WHERE = @WHERE + ' AND A.MASTER_CODE IN (SELECT MASTER_CODE FROM PKG_GROUP WITH(NOLOCK) WHERE GROUP_CODE IN (' + @GROUP_CODE + '))'
	END
	ELSE 
	BEGIN
		-- 검색일때는 제외
		IF ISNULL(@SEARCH_TEXT, '') = ''
		BEGIN
			-- 그룹코드가 아닐 시 부산 담당 상품 제외
			SET @WHERE = @WHERE + ' AND A.NEW_CODE NOT IN (SELECT EMP_CODE FROM EMP_MASTER  WITH(NOLOCK) WHERE TEAM_CODE IN (' + @PUSAN_TEAM_CODE + '))'
		END
	END 

	-- 속성코드
	IF ISNULL(@ATT_CODE, '') <> ''
	BEGIN
		SELECT @ATT_CODE = STUFF((SELECT (',''' + DATA + '''') AS [text()] FROM [DBO].[FN_SPLIT] (@ATT_CODE, ',') FOR XML PATH('')), 1, 1, '')
		SET @WHERE = @WHERE + ' AND A.MASTER_CODE IN (SELECT MASTER_CODE FROM PKG_ATTRIBUTE WITH(NOLOCK) WHERE ATT_CODE IN (' + @ATT_CODE + '))'
	END
	
	-- 브랜드타입 - 
	IF @BRAND_TYPE > 0 
	BEGIN
		IF @BRAND_TYPE = 99 
		BEGIN
			SET @WHERE = @WHERE + ' AND A.BRAND_TYPE IN(1,2,3,4) '
		END 
		ELSE 
		BEGIN
			SET @WHERE = @WHERE + ' AND A.BRAND_TYPE = ' + CONVERT(VARCHAR,@BRAND_TYPE) +' '
		END 
	END

	IF @FLAG = 'A'
	BEGIN
		SET @SQLSTRING = N'
		SELECT A.ATT_CODE AS [CODE], COUNT(A.ATT_CODE) AS [COUNT]
			, (SELECT PUB_VALUE FROM COD_PUBLIC WITH(NOLOCK) WHERE PUB_TYPE = ''PKG.ATTRIBUTE'' AND PUB_CODE = A.ATT_CODE) AS [NAME]
		FROM (
			SELECT C.ATT_CODE, A.MASTER_CODE
			FROM PKG_MASTER A WITH(NOLOCK)
			LEFT JOIN PKG_MASTER_SCH_CITY B ON A.MASTER_CODE = B.MASTER_CODE
			INNER JOIN PKG_ATTRIBUTE C WITH(NOLOCK) ON A.MASTER_CODE = C.MASTER_CODE
			'

			IF (@PROVIDER NOT IN(0,5,16))
			 --SET @SQLSTRING = @SQLSTRING + N'INNER JOIN PKG_PROVIDER Z WITH(NOLOCK)ON Z.PROVIDER = ' + CAST(@PROVIDER AS VARCHAR)+ 'AND A.MASTER_CODE = Z.CODE
			 SET @SQLSTRING = @SQLSTRING + N'INNER JOIN PKG_MASTER_AFFILIATE Z WITH(NOLOCK) ON Z.PROVIDER = ' + CAST(@PROVIDER AS VARCHAR) + ' AND A.MASTER_CODE = Z.MASTER_CODE AND Z.USE_YN=''Y''
			'

			SET @SQLSTRING = @SQLSTRING + @WHERE + N'
			GROUP BY C.ATT_CODE, A.MASTER_CODE
		) A
		GROUP BY A.ATT_CODE
		ORDER BY NAME';
	END
	ELSE --IF @FLAG = 'C'
	BEGIN
		SET @SQLSTRING = N'
		SELECT A.CITY_CODE AS [CODE], COUNT(A.CITY_CODE) AS [COUNT]
			, DBO.FN_PUB_GET_CITY_NAME(A.CITY_CODE) AS [NAME]
		FROM (
			SELECT B.CITY_CODE, A.MASTER_CODE
			FROM PKG_MASTER A WITH(NOLOCK) 
			INNER JOIN PKG_MASTER_SCH_CITY B ON A.MASTER_CODE = B.MASTER_CODE AND B.MAINCITY_YN = ''Y''
			'

			IF (@PROVIDER NOT IN(0,5,16))
				--SET @SQLSTRING = @SQLSTRING + N'INNER JOIN PKG_PROVIDER Z WITH(NOLOCK) ON Z.PROVIDER = ' + CAST(@PROVIDER AS VARCHAR) + ' AND A.MASTER_CODE = Z.CODE
				SET @SQLSTRING = @SQLSTRING + N'INNER JOIN PKG_MASTER_AFFILIATE Z WITH(NOLOCK) ON Z.PROVIDER = ' + CAST(@PROVIDER AS VARCHAR) + ' AND A.MASTER_CODE = Z.MASTER_CODE AND Z.USE_YN=''Y''
			'

			SET @SQLSTRING = @SQLSTRING + @WHERE + N'
			GROUP BY B.CITY_CODE, A.MASTER_CODE
		) A
		GROUP BY A.CITY_CODE
		ORDER BY NAME';
	END

	--SET @PARMDEFINITION = N'';
	SET @PARMDEFINITION = N'@START_DATE DATETIME, @END_DATE DATETIME, @DAY INT, @PRICE INT, @SEARCH_TEXT VARCHAR(100) ';  

	--PRINT @SQLSTRING
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @START_DATE, @END_DATE, @DAY, @PRICE, @SEARCH_TEXT;

END

--SP_WEB_PKG_MASTER_LIST_CATEGORY 'c', 'a', '', '', '', 'h', null, null, 0, 0, '', '5'
GO
