USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



/*================================================================================================================
■ USP_NAME					: [[SP_PKG_MASTER_SELECT_PRODUCT_EBAY_DETAIL]]
■ DESCRIPTION				: <이베이 옥션 상품연동 XML 생성 EbayProductMakeXML.exe >  행사 불러오기 
■ INPUT PARAMETER			: 
	@MASTER_CODE_STRING		: 마스터 코드
■ OUTPUT PARAMETER			: 
■ EXEC						: 
app9103
	exec SP_PKG_MASTER_SELECT_PRODUCT_EBAY ''
	
	exec SP_PKG_MASTER_SELECT_PRODUCT_EBAY_MASTER 'EPP200,APF022,APA088'
	exec SP_PKG_MASTER_SELECT_PRODUCT_EBAY_DETAIL 'EPP200,APF022,APA088'
	exec SP_PKG_MASTER_SELECT_PRODUCT_EBAY_DETAIL 'JPC910,JPC937,JPC952,JPC955,UPP1915'


'JPC910,JPC937,JPC952,JPC955,UPP1915'

	APP5878
	
	--'EPP200-140128OZ',4
	--'EPP471'
	--SELECT * INTO #TMP_LIST FROM 
	--SP_PKG_GMARKET_SELECT_LIST '' 
	--exec SP_PKG_GMARKET_SELECT_LIST 'EPP426'

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
2018-02-13			박형만			최초 생성 
2019-11-27			박형만			DEP_CFM_YN = 'F' 출발확정(가) 도 확정으로 전송되도록 수정 
2020-03-06			김영민			aff변경
2021-09-06			오준혁			http => https
2022-05-13          이장훈          지마켓 요청으로 DISP_SITE_TYPE= '2'  -->  DISP_SITE_TYPE= '0' 변경
================================================================================================================*/ 
CREATE PROC [dbo].[SP_PKG_MASTER_SELECT_PRODUCT_EBAY_DETAIL]
	@MASTER_CODE_STRING VARCHAR(1000)
AS 
BEGIN

--DECLARE @MASTER_CODE_STRING  VARCHAR(1000)
--SET @MASTER_CODE_STRING = 'EPP200'

	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

	DECLARE @SQLSTRING NVARCHAR(MAX),@PARMDEFINITION NVARCHAR(100)

	SET @SQLSTRING = N'WHERE B.PROVIDER = 38 ' 

	IF ISNULL(@MASTER_CODE_STRING,'') <> ''
	BEGIN
		SET @SQLSTRING = @SQLSTRING + N' AND A.MASTER_CODE IN (SELECT DATA FROM DBO.FN_SPLIT(@MASTER_CODE,'',''))'
	END

	SET @SQLSTRING = N'-- DETAIL
			WITH MASTER_LIST AS
			(
				SELECT
					UPPER(A.MASTER_CODE) AS  MASTER_CODE 
				FROM PKG_MASTER A WITH(NOLOCK)
				INNER JOIN PKG_MASTER_AFFILIATE B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
				' + @SQLSTRING + '
			)
			SELECT
				UPPER(A.MASTER_CODE) AS [PARTNER_GD_NO]
			,	(UPPER(A.PRO_CODE) + ''|'' + CONVERT(VARCHAR(3),D.PRICE_SEQ)) AS [GD_SUB_CD]
			,	A.PRO_NAME AS [GD_SUB_NM]
			,	''0'' [DISP_SITE_TYPE]
			,	''A'' [DISP_AREA_TYPE]
			,	(CONVERT(VARCHAR(10),B.DEP_DEP_DATE,120)) AS [DEPAR_DATE]
			,	B.DEP_DEP_TIME AS [DEPAR_TIME]
			,	CASE WHEN TRANSFER_TYPE = 2 THEN ''선박'' ELSE RTRIM(B.DEP_TRANS_NUMBER)  END AS [DEPAR_FLIGHT_NO]
			,	CASE WHEN TRANSFER_TYPE = 2 THEN ''99'' ELSE B.DEP_TRANS_CODE END AS [AIR_COMP_CD]
			,	CASE WHEN TRANSFER_TYPE = 2 THEN ''선박'' ELSE C.KOR_NAME END AS [AIR_COMP_NAME]

			-- 가격정보 
			,	D.ADT_PRICE AS [PRICE]
			,	D.ADT_PRICE AS [ADULT_PRICE]
			,	D.CHD_PRICE AS [CHILD_PRICE]
			,	D.INF_PRICE AS [BABY_PRICE]
			--,ISNULL(DBO.XN_PRO_DETAIL_SALE_PRICE_CUTTING(A.PRO_CODE,0),0)  AS [TAX_PRICE]
			,	ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',1),''0'') AS TAX_PRICE
			,	0 AS ADULT_TAX_PRICE    
			,	0 AS CHILD_TAX_PRICE    
			,	0 AS BABY_TAX_PRICE    
			--,dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ) AS QCHARGE_PRICE_ALL
			,	ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',1),''0'') AS ADULT_FUEL_SURCHARGE
			,	ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',2),''0'') AS CHILD_FUEL_SURCHARGE
			,	ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',3),''0'') AS BABY_FUEL_SURCHARGE

			-- 좌석정보 
			--,(CASE WHEN A.MAX_COUNT = 0 THEN 99 WHEN A.MAX_COUNT = -1 THEN 0 ELSE A.MAX_COUNT END) AS [RSV_REMAIN_CNT]
			--,DBO.FN_PRO_GET_RES_COUNT(A.PRO_CODE) AS [RES_COUNT]
			,	CASE WHEN A.RSV_REMAIN_CNT > 0 AND A.RES_ADD_YN =''Y'' THEN A.RSV_REMAIN_CNT ELSE 0 END AS [TOTAL_SEAT_CNT]
			,	CASE WHEN A.RSV_REMAIN_CNT > 0 AND A.RES_ADD_YN =''Y'' THEN (A.RSV_REMAIN_CNT - A.RES_COUNT) ELSE 0 END  AS [REMAIN_SEAT_CNT]
			,	CASE WHEN A.RSV_REMAIN_CNT > 0 AND A.RES_ADD_YN =''Y'' THEN A.MIN_COUNT ELSE 0 END AS [MIN_NMPR]

			,	CASE WHEN A.RES_ADD_YN =''Y'' AND A.RSV_REMAIN_CNT = 0  THEN ''3'' 
				WHEN A.DEP_CFM_YN IN (''Y'',''F'') AND A.RSV_REMAIN_CNT > 0 THEN ''1'' 
				ELSE ''2'' END AS [RSV_TYPE] -- 1확정,2일반,3대기
			,	CASE WHEN A.RES_ADD_YN =''Y'' THEN ''Y'' ELSE ''N'' END AS [ONOFF]
			,	(''https://aff.verygoodtour.com/Product/Package/PackageDetail?ProCode='' + A.PRO_CODE + ''&PriceSeq='' + CONVERT(VARCHAR(3),D.PRICE_SEQ) +''&Provider=38'') AS [PC_SCHEDULE_URL]
			,	(''https://aff.verygoodtour.com/Mobile/Affiliate/EstPackageInfo?ProCode='' + A.PRO_CODE + ''&PriceSeq='' + CONVERT(VARCHAR(3),D.PRICE_SEQ) +'''') AS [MOBILE_SCHEDULE_URL]
		
			,	A.TOUR_NIGHT AS [TOUR_STAY_DAYS]
			,	A.TOUR_DAY AS [TOUR_DAYS]
			,	(CONVERT(VARCHAR(10),B.ARR_ARR_DATE,120)) AS [ARRIVAL_DATE]
			,	B.ARR_ARR_TIME AS [ARRIVAL_TIME]

			,	CASE WHEN TRANSFER_TYPE = 2 THEN ''선박'' ELSE RTRIM(B.ARR_TRANS_NUMBER)  END AS [ARRIVAL_FLIGHT_NO]

			,	B.DEP_ARR_AIRPORT_CODE 
			,	B.SEAT_CODE
			FROM MASTER_LIST Z
			INNER JOIN (
				SELECT AA.*
				,	(CASE WHEN DATEADD(DAY,-2,AA.DEP_DATE) <= GETDATE() THEN -1 
						WHEN AA.MAX_COUNT = 0 THEN 99
						WHEN AA.MAX_COUNT = -1 THEN 0 ELSE AA.MAX_COUNT END
					) AS [RSV_REMAIN_CNT]
					,DBO.FN_PRO_GET_RES_COUNT(AA.PRO_CODE) AS [RES_COUNT]
				FROM PKG_DETAIL AA WITH(NOLOCK)
				WHERE AA.MASTER_CODE IN (SELECT MASTER_CODE FROM MASTER_LIST)
				AND AA.SHOW_YN =''Y'' 
				--AND AA.RES_ADD_YN =''Y''
			) A ON Z.MASTER_CODE = A.MASTER_CODE
			INNER JOIN PRO_TRANS_SEAT B WITH(NOLOCK) ON A.SEAT_CODE = B.SEAT_CODE
			INNER JOIN PKG_DETAIL_PRICE D WITH(NOLOCK) ON A.PRO_CODE = D.PRO_CODE
			LEFT JOIN PUB_AIRLINE C WITH(NOLOCK) ON B.DEP_TRANS_CODE = C.AIRLINE_CODE
	
			WHERE A.DEP_DATE > GETDATE()
			ORDER BY A.MASTER_CODE, A.DEP_DATE ,D.ADT_PRICE
	;' 

	SET @PARMDEFINITION = N'@MASTER_CODE VARCHAR(1000)';

	PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING,@PARMDEFINITION,@MASTER_CODE_STRING;

END


GO
