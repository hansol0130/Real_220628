USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: XP_NAVER_PKG_DETAIL_DATA_STATUS_SELECT
■ DESCRIPTION				: 2019 네이버 패키지 상품연동 입력 현황 조회 . 마스터 별 행사리스트  
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			: 
■ EXEC						: XP_NAVER_PKG_DETAIL_DATA_STATUS_SELECT 'PPP202' , '2019-06-01' , '2019-12-31'


■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
2019-05-29			박형만			
================================================================================================================*/ 
CREATE  PROC [dbo].[XP_NAVER_PKG_DETAIL_DATA_STATUS_SELECT]
	@MASTER_CODE VARCHAR(10),
	@START_DATE DATETIME,
	@END_DATE DATETIME
AS
BEGIN

	--------------------------------------------------------------------------------
	-- 각 마스터별 상세 조회 
	SELECT 
		AA.SEQ_NO , 
		AA.TEAM_NAME AS TEAM_NAME2,
		AA.MASTER_CODE , CC.PRO_CODE , DD.PRICE_SEQ , SHOW_YN , 
		CC.RES_ADD_YN , 
		ST.DEP_TRANS_CODE ,
		CASE WHEN (SELECT COUNT(*)
			FROM PKG_DETAIL_PRICE_INOUT WITH(NOLOCK)
			WHERE PRO_CODE = CC.PRO_CODE AND PRICE_SEQ = DD.PRICE_SEQ ) = 0 THEN 1 ELSE 0 END  AS INOUT_NO ,

		CASE WHEN (SELECT COUNT(*)
			FROM PKG_DETAIL_PRICE_INOUT WITH(NOLOCK)
			WHERE PRO_CODE = CC.PRO_CODE AND PRICE_SEQ = DD.PRICE_SEQ ) = 0 THEN CC.PRO_CODE ELSE NULL END  AS INOUT_NO_PRO_CODE ,

		STUFF((SELECT ',' + AA.INOUT_CODE 
				FROM PKG_DETAIL_PRICE_INOUT AA WITH(NOLOCK)
					INNER JOIN COD_PUBLIC BB  WITH(NOLOCK)
						ON PUB_TYPE = 'PKG.INOUT.NAVER'
						AND AA.INOUT_CODE = BB.PUB_CODE 
				WHERE AA.PRO_CODE = DD.PRO_CODE AND AA.PRICE_SEQ = DD.PRICE_SEQ AND AA.IN_YN ='Y' 
				ORDER BY BB.PUB_VALUE2
				FOR XML PATH('')), 1, 1, '') AS IN_CODES,--	String[]	상품 포함내역 코드
		--'I1,I2,I3,I4,I5,I6,I7,I8' AS productIn, -- 임시 포함 
		STUFF((SELECT ',' + AA.INOUT_CODE 
				FROM PKG_DETAIL_PRICE_INOUT AA WITH(NOLOCK)
					INNER JOIN COD_PUBLIC BB  WITH(NOLOCK)
						ON PUB_TYPE = 'PKG.INOUT.NAVER'
						AND AA.INOUT_CODE = BB.PUB_CODE 
				WHERE AA.PRO_CODE = DD.PRO_CODE AND AA.PRICE_SEQ = DD.PRICE_SEQ AND AA.IN_YN <> 'Y' 
				ORDER BY BB.PUB_VALUE2
				FOR XML PATH('')), 1, 1, '') AS OUT_CODES,--	String[]	상품 불포함내역 코드
		--'I10,I12' AS productOut, -- 임시 불포함 


		CASE WHEN ISNULL(PKG_SUMMARY,'') = '' THEN 1 ELSE 0 END   SELLPOINT_NO ,
		CASE WHEN ISNULL(PKG_SUMMARY,'') = '' THEN CC.PRO_CODE ELSE NULL END   SELLPOINT_NO_PRO_CODE ,
		CASE WHEN   CHARINDEX( CHAR(13) , PKG_SUMMARY ) = 0 
				AND CHARINDEX( CHAR(10) , PKG_SUMMARY ) = 0 
				AND LEN ( ISNULL(PKG_SUMMARY,'') ) > 80   THEN 1 ELSE 0 END as SELLPOINT_EX ,
		CASE WHEN   CHARINDEX( CHAR(13) , PKG_SUMMARY ) = 0 
					AND CHARINDEX( CHAR(10) , PKG_SUMMARY ) = 0 
					AND LEN ( ISNULL(PKG_SUMMARY,'') ) > 80   THEN CC.PRO_CODE ELSE null END as SELLPOINT_EX_PRO_CODE ,
		PKG_SUMMARY AS SELLPOINT ,
		CASE WHEN ISNULL(EE.TRAFFIC_POINT,'') = ''
			AND ISNULL(EE.STAY_POINT,'') = ''
			AND ISNULL(EE.TOUR_POINT,'') = ''
			AND ISNULL(EE.EAT_POINT,'') = ''
			AND ISNULL(EE.DISCOUNT_POINT,'') = ''
			AND ISNULL(EE.OTHER_POINT,'') = '' THEN 1 ELSE 0 END AS PRO_POINT_NO ,
		CASE WHEN ISNULL(EE.TRAFFIC_POINT,'') = ''
			AND ISNULL(EE.STAY_POINT,'') = ''
			AND ISNULL(EE.TOUR_POINT,'') = ''
			AND ISNULL(EE.EAT_POINT,'') = ''
			AND ISNULL(EE.DISCOUNT_POINT,'') = ''
			AND ISNULL(EE.OTHER_POINT,'') = '' THEN  CC.PRO_CODE ELSE NULL END AS PRO_POINT_NO_PRO_CODE ,
		EE.TRAFFIC_POINT,
		EE.STAY_POINT,
		EE.TOUR_POINT,
		EE.EAT_POINT,
		EE.DISCOUNT_POINT,
		EE.OTHER_POINT,
		CC.NEW_CODE , EM.KOR_NAME AS NEW_NAME , 
		ET.TEAM_CODE , ET.TEAM_NAME , 
		
		AA.USER_RANK 
	FROM TMP_NAVER_MASTER AA WITH(NOLOCK)
	INNER JOIN PKG_DETAIL CC WITH(NOLOCK)
		ON AA.MASTER_CODE = CC.MASTER_CODE 
		AND CC.DEP_DATE >= @START_DATE
		AND CC.DEP_DATE < DATEADD(D,1,@END_DATE)
	INNER JOIN PKG_DETAIL_PRICE DD WITH(NOLOCK)
		ON CC.PRO_CODE = DD.PRO_CODE 

	LEFT JOIN PRO_TRANS_SEAT  ST WITH(NOLOCK) 
		ON CC.SEAT_CODE = ST.SEAT_CODE 

	LEFT JOIN PKG_DETAIL_SELL_POINT EE WITH(NOLOCK) 
		ON DD.PRO_CODE = EE.PRO_CODE 
	

	LEFT JOIN EMP_MASTER EM WITH(NOLOCK)
		ON CC.NEW_CODE = EM.EMP_CODE 
	LEFT JOIN EMP_TEAM ET WITH(NOLOCK)
		ON EM.TEAM_CODE = ET.TEAM_CODE 

	WHERE AA.MASTER_CODE = @MASTER_CODE 
END 
GO
