USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: XP_ACR_MASTER_LIST_SELECT
■ DESCRIPTION				: 경위서 검색
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			: 
■ EXEC						: 
	DECLARE @COUNT INT
	EXEC DBO.XP_ACR_MASTER_LIST_SELECT 1, 10, @COUNT OUTPUT, 'AgtCode=92794&RegionCode=&ProductCode=&Title=&NewDate1=2013-10-01&NewDate2=2014-02-07&AgentName=&GuideName=이슬', 1

	declare @p5 int
	set @p5=0
	exec XP_ACR_MASTER_LIST_SELECT @PAGE_INDEX=1,@PAGE_SIZE=20,@KEY=N'Key=ProductCode=&Title=&RegionCode=&StartDate=2013-12-14&EndDate=2014-01-14&NewDate1=&NewDate2=&AgentName=VGT&GuideName=가이드',@ORDER_BY=1,@TOTAL_COUNT=@p5 output
	select @p5

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2013-06-19		김완기			최초생성
   2014-01-14		김성호			쿼리수정
   2014-04-28		정지용			팀 / 사원 검색 추가
================================================================================================================*/ 
CREATE PROC [dbo].[XP_ACR_MASTER_LIST_SELECT]
 	@PAGE_INDEX  INT,
	@PAGE_SIZE  INT,
	@TOTAL_COUNT INT OUTPUT,
	@KEY	varchar(200),
	@ORDER_BY	int
AS 
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED	

	DECLARE @SQLSTRING NVARCHAR(4000), @WHERE NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000), @SORT_STRING VARCHAR(100);
	
	DECLARE @AGT_CODE VARCHAR(20)
	DECLARE @REGION_CODE VARCHAR(3)
	DECLARE @PRO_CODE VARCHAR(20)
	DECLARE @TITLE VARCHAR(200)
	DECLARE @START_DATE VARCHAR(10)
	DECLARE @END_DATE VARCHAR(10)
	DECLARE @ACR_START_DATE VARCHAR(10)
	DECLARE @ACR_END_DATE VARCHAR(10)
	DECLARE @AGT_NAME VARCHAR(50)
	DECLARE @GUIDE_NAME	VARCHAR(30)
	DECLARE @GUIDE_CODE	CHAR(7)
	DECLARE @TEAM_CODE	VARCHAR(4)
	DECLARE @EMP_CODE	VARCHAR(7)

	SELECT
		@AGT_CODE = DBO.FN_PARAM(@KEY, 'AgtCode'),
		@REGION_CODE = DBO.FN_PARAM(@KEY, 'RegionCode'),
		@PRO_CODE = DBO.FN_PARAM(@KEY, 'ProductCode'),
		@TITLE = DBO.FN_PARAM(@KEY, 'Title'),
		@START_DATE = DBO.FN_PARAM(@KEY, 'StartDate'),
		@END_DATE = DBO.FN_PARAM(@KEY, 'EndDate'),
		@ACR_START_DATE = DBO.FN_PARAM(@KEY, 'NewDate1'),
		@ACR_END_DATE = DBO.FN_PARAM(@KEY, 'NewDate2'),
		@AGT_NAME = DBO.FN_PARAM(@KEY, 'AgentName'),
		@GUIDE_NAME = DBO.FN_PARAM(@KEY, 'GuideName'),
		@GUIDE_CODE = DBO.FN_PARAM(@KEY, 'GuideCode'),
		@TEAM_CODE = DBO.FN_PARAM(@KEY, 'TeamCode'),
		@EMP_CODE = DBO.FN_PARAM(@KEY, 'EmpCode')
		
	SET @WHERE = ''

	IF ISNULL(@AGT_CODE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.AGT_CODE = @AGT_CODE'
	END

	IF ISNULL(@REGION_CODE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.REGION_CODE = @REGION_CODE'
	END

	IF ISNULL(@PRO_CODE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.PRO_CODE LIKE @PRO_CODE + ''%'''
--		SET @WHERE = @WHERE + ' AND A.PRO_CODE LIKE ''' + @PRO_CODE + '%'' '
	END

	IF ISNULL(@TITLE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.TITLE LIKE ''%'' + @TITLE + ''%'''
--		SET @WHERE = @WHERE + ' AND A.TITLE LIKE ''%' + @TITLE + '%'''
	END
		
	IF ISNULL(@START_DATE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.DEP_DATE >= @START_DATE'
	END

	IF ISNULL(@END_DATE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.DEP_DATE < DATEADD(D, 1, @END_DATE)'
--			SET @WHERE = @WHERE + ' AND A.DEP_DATE < DATEADD(d, 1, ''' + @END_DATE + ''')'
	END

	IF ISNULL(@ACR_START_DATE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.NEW_DATE >= @ACR_START_DATE'
	END

	IF ISNULL(@ACR_END_DATE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.NEW_DATE < DATEADD(D, 1, @ACR_END_DATE)'
--		SET @WHERE = @WHERE + ' AND A.NEW_DATE < DATEADD(d, 1, ''' + @ACR_END_DATE + ''')'
	END

	IF ISNULL(@AGT_NAME, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND B.KOR_NAME LIKE ''%'' + @AGT_NAME + ''%'''
--		SET @WHERE = @WHERE + ' AND DBO.XN_COM_GET_TEAM_NAME(A.NEW_CODE) LIKE ''%' + @AGT_NAME + '%'' '
	END
		
	IF ISNULL(@GUIDE_NAME, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND C.KOR_NAME LIKE ''%'' + @GUIDE_NAME + ''%'''
--		SET @WHERE = @WHERE + ' AND DBO.XN_COM_GET_EMP_NAME(A.GUIDE_CODE) LIKE ''%' + @GUIDE_NAME + '%'' '
	END
	
	IF ISNULL(@GUIDE_CODE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND A.GUIDE_CODE = @GUIDE_CODE'
	END

	IF ISNULL(@EMP_CODE, '') <> ''
		BEGIN
			SET @WHERE = @WHERE + ' AND P.NEW_CODE = @EMP_CODE'
		END
	ELSE
		BEGIN
			IF ISNULL(@TEAM_CODE, '') <> ''
				BEGIN
					SET @WHERE = @WHERE + ' AND P.NEW_CODE IN (SELECT EMP_CODE FROM EMP_MASTER WITH(NOLOCK) WHERE TEAM_CODE = @TEAM_CODE)'
				END
		END

	-- SORT 조건 만들기  
	SELECT @SORT_STRING = (  
		CASE @ORDER_BY  
			WHEN 1 THEN ' A.PRO_CODE DESC'
			WHEN 2 THEN ' B.KOR_NAME'
			WHEN 3 THEN ' C.KOR_NAME'
			WHEN 4 THEN ' A.NEW_DATE DESC'
			WHEN 5 THEN ' A.REGION_CODE'
			ELSE ' A.NEW_DATE DESC'
		END
	)
	
	SET @SQLSTRING = N'
		SELECT @TOTAL_COUNT = COUNT(*)
		FROM ACR_MASTER A WITH(NOLOCK)
		INNER JOIN AGT_MASTER B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE
		LEFT JOIN AGT_MEMBER C WITH(NOLOCK) ON A.GUIDE_CODE = C.MEM_CODE
		LEFT OUTER JOIN PKG_DETAIL P WITH(NOLOCK) ON A.PRO_CODE = P.PRO_CODE
		WHERE 1 = 1 ' + @WHERE + ';

		WITH LIST AS 
		(
			SELECT
				A.*
			FROM ACR_MASTER A WITH(NOLOCK)
			INNER JOIN AGT_MASTER B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE
			LEFT JOIN AGT_MEMBER C WITH(NOLOCK) ON A.GUIDE_CODE = C.MEM_CODE
			LEFT OUTER JOIN PKG_DETAIL P WITH(NOLOCK) ON A.PRO_CODE = P.PRO_CODE
			WHERE 1=1 ' + @WHERE + '
			ORDER BY '+ @SORT_STRING + '
			OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
			ROWS ONLY
		)
		SELECT A.*,
			(SELECT KOR_NAME FROM PUB_REGION WHERE REGION_CODE = A.REGION_CODE) AS REGION_NAME,
			DBO.XN_COM_GET_EMP_NAME(A.GUIDE_CODE) AS GUIDE_NAME,
			DBO.XN_COM_GET_EMP_NAME(A.CFM_CODE) AS CFM_NAME,
			DBO.XN_COM_GET_TEAM_NAME(A.CFM_CODE) AS CFM_TEAM_NAME,
			DBO.XN_COM_GET_EMP_NAME(A.NEW_CODE) AS NEW_NAME,
			DBO.XN_COM_GET_TEAM_NAME(A.NEW_CODE) AS NEW_TEAM_NAME
		FROM LIST A
		';


		PRINT @SQLSTRING
		SET @PARMDEFINITION = N'
			@PAGE_INDEX INT,
			@PAGE_SIZE INT,
			@AGT_CODE VARCHAR(20),
			@REGION_CODE VARCHAR(3),
			@PRO_CODE VARCHAR(20),
			@TITLE VARCHAR(200),
			@START_DATE VARCHAR(10),
			@END_DATE VARCHAR(10),
			@ACR_START_DATE VARCHAR(10),
			@ACR_END_DATE VARCHAR(10),
			@AGT_NAME VARCHAR(50),
			@GUIDE_NAME	VARCHAR(30),
			@GUIDE_CODE	CHAR(7),
			@TOTAL_COUNT INT OUTPUT,
			@TEAM_CODE	VARCHAR(4),
			@EMP_CODE	VARCHAR(7)';


		EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, 
			@PAGE_INDEX,
			@PAGE_SIZE,
			@AGT_CODE,
			@REGION_CODE,
			@PRO_CODE,
			@TITLE,
			@START_DATE,
			@END_DATE,
			@ACR_START_DATE,
			@ACR_END_DATE,
			@AGT_NAME,
			@GUIDE_NAME,
			@GUIDE_CODE,
			@TOTAL_COUNT OUTPUT,
			@TEAM_CODE,
			@EMP_CODE;
END
GO
