USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: SP_DOC_REFUND_DOCUMENT_LIST_INSERT
■ DESCRIPTION				: 전자결재 자동 생성
■ INPUT PARAMETER			: 
	@RES_CODE				: 예약코드
	@PAY_SEQ				: 입금순번
	@MCH_SEQ				: 매칭순번
	@BANK_NAME				: 은행명
	@ACCOUNT_NUM			: 계좌번호
	@DEPOSITOR				: 예금주
	@EMP_CODE				: 담당사원
■ OUTPUT PARAMETER			: 
■ EXEC						: 

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2015-04-21		김성호			최초생성
   2015-04-27		김성호			PG신용카드, ARS 입출금등록, 전표 등록 기능 추가
   2015-04-29		김성호			전표 등록 기능 보류
   2016-04-14		김성호			전자결재번호 채번 수정
   2016-10-13		김성호			MAIL_ID 수동 입력
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[SP_DOC_REFUND_DOCUMENT_LIST_INSERT]
	@RES_CODE		VARCHAR(20),
	@PAY_SEQ		INT,
	@MCH_SEQ		INT,
	@BANK_NAME		VARCHAR(20),
	@ACCOUNT_NUM	VARCHAR(20),
	@DEPOSITOR		VARCHAR(20),
	@EMP_CODE		CHAR(7),
	@SLIP_MK_SEQ	SMALLINT OUTPUT
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @MESSAGE VARCHAR(100), @PRO_CODE VARCHAR(20), @MASTER_CODE VARCHAR(10), @PRO_TYPE INT, @PAY_SUB_TYPE VARCHAR(20),
		@PAY_TYPE INT, @PAY_DATE VARCHAR(20), @PART_PRICE INT, @PAY_TYPE_NAME VARCHAR(20), @PAY_NUM VARCHAR(100), @PAY_NAME VARCHAR(40);

	SELECT @PRO_CODE = A.PRO_CODE, @MASTER_CODE = A.MASTER_CODE, @PRO_TYPE = A.PRO_TYPE, @PAY_TYPE = C.PAY_TYPE, @PAY_DATE = CONVERT(VARCHAR(16), GETDATE(), 120), 
		@PART_PRICE = B.PART_PRICE, @PAY_TYPE_NAME = D.PUB_VALUE, @PAY_NUM = damo.dbo.dec_varchar('DIABLO', 'dbo.PAY_MASTER', 'PAY_NUM', C.sec_PAY_NUM), @PAY_NAME = C.PAY_NAME,
		@PAY_SUB_TYPE = (ISNULL(C.AGT_CODE, '') + '|' + CONVERT(VARCHAR(10), C.COM_RATE))
	FROM RES_MASTER_damo A WITH(NOLOCK) 
	INNER JOIN PAY_MATCHING B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
	INNER JOIN PAY_MASTER_damo C WITH(NOLOCK) ON B.PAY_SEQ = C.PAY_SEQ
	INNER JOIN COD_PUBLIC D WITH(NOLOCK) ON D.PUB_TYPE = 'PAY.PAYMENTTYPE' AND D.PUB_CODE = C.PAY_TYPE
	WHERE A.RES_CODE = @RES_CODE AND C.PAY_SEQ = @PAY_SEQ AND B.MCH_SEQ = @MCH_SEQ AND B.CXL_YN = 'N' AND C.CXL_YN = 'N'

	IF @PAY_TYPE NOT IN (0, 5, 15) OR @PAY_NAME = @DEPOSITOR
	BEGIN
		DECLARE @DOC_SEQ VARCHAR(10), @EDI_CODE VARCHAR(10)

		-- 전자결재 문서 번호 생성
		EXEC SP_COD_GETSEQ 'DOC', @DOC_SEQ OUTPUT

		SELECT @EDI_CODE = (CONVERT(VARCHAR(6), GETDATE(), 12) + RIGHT(('0000' + @DOC_SEQ), 4))

		BEGIN TRAN

		BEGIN TRY

			-- 전자결재 생성
			INSERT INTO EDI_MASTER_damo (EDI_CODE, DOC_TYPE, DETAIL_TYPE, DETAIL_NAME, EDI_STATUS, RCV_TEAM_CODE, APP_TYPE, SUBJECT, CONTENTS, PRICE, REAL_PRICE, CURRENCY, PAY_BANK, sec_PAY_ACCOUNT, 
				PAY_RECEIPT, NEW_CODE, NEW_NAME, NEW_TEAM_NAME, NEW_DUTY_NAME, NEW_POS_NAME, NEW_DATE, PRO_CODE, MASTER_CODE, PRO_TYPE, RES_CODE, PAY_SEQ)
			SELECT
				@EDI_CODE, '8' AS [DOC_TYPE], '3' AS [DETAIL_TYPE], '환불지결' AS [DETAIL_NAME], 
				1 AS [EDI_STATUS], '521' AS [RCV_TEAM_CODE], '2' AS [APP_TYPE],
				('[환불지결_' + @PAY_TYPE_NAME + '] ' + @RES_CODE + ' / ' + @PAY_NAME) AS [SUBJECT],
				(@PAY_DATE + ' / ' + CONVERT(VARCHAR(10), @PART_PRICE) + ' / ' + @PAY_TYPE_NAME + ' / ' + @PAY_NUM + ' / ' + @PAY_NAME) AS [CONTENST],
				@PART_PRICE AS [PRICE], @PART_PRICE AS [REAL_PRICE], 'KRW' AS [CURRENCY], @BANK_NAME AS [PAY_BANK], 
				damo.dbo.enc_varchar('DIABLO', 'dbo.EDI_MASTER', 'PAY_ACCOUNT', @ACCOUNT_NUM) AS [PAY_ACCOUNT], 
				@DEPOSITOR AS [PAY_RECEIPT], @EMP_CODE AS [NEW_CODE], A.KOR_NAME AS [NEW_NAME], B.TEAM_NAME AS [NEW_TEAM_NAME],
				(SELECT PUB_VALUE FROM COD_PUBLIC WITH(NOLOCK) WHERE PUB_TYPE = 'EMP.DUTYTYPE' AND PUB_CODE = A.DUTY_TYPE) AS [NEW_DUTY_NAME],
				(SELECT PUB_VALUE FROM COD_PUBLIC WITH(NOLOCK) WHERE PUB_TYPE = 'EMP.POSTYPE' AND PUB_CODE = A.POS_TYPE) AS [NEW_POS_NAME], 
				GETDATE() AS [NEW_DATE], @PRO_CODE, @MASTER_CODE, @PRO_TYPE, @RES_CODE, @PAY_SEQ
			FROM EMP_MASTER_damo A WITH(NOLOCK)
			INNER JOIN EMP_TEAM B WITH(NOLOCK) ON A.TEAM_CODE = B.TEAM_CODE
			WHERE A.EMP_CODE = @EMP_CODE

			-- 전자결재 COMMENT 생성
			INSERT INTO EDI_COMMENT (EDI_CODE, SEQ_NO, COMMENT, NEW_TYPE, NEW_CODE, NEW_NAME, NEW_DATE)
			SELECT @EDI_CODE, 1, 
				(@PAY_DATE + ' / ' + CONVERT(VARCHAR(10), @PART_PRICE) + ' / ' + @PAY_TYPE_NAME + ' / ' + @PAY_NUM + ' / ' + @PAY_NAME),
				1, A.EMP_CODE, A.KOR_NAME, GETDATE()
			FROM EMP_MASTER_damo A WITH(NOLOCK)
			WHERE A.EMP_CODE = @EMP_CODE

			-- PG신용카드, ARS
			IF @PAY_TYPE IN (3, 13)
			BEGIN
				DECLARE @NEW_PAY_SEQ INT, @NEW_MCH_SEQ INT

				-- 취소 금액에 따른 예약 상태 변경 로직 포함 (MAILL_ID값 입력에 따라 NULL 전달로 수정 16.10.13)
				EXEC dbo.SP_DOC_REFUND_LIST_INSERT @EDI_CODE, @EMP_CODE, @PAY_DATE, @PAY_TYPE, @PAY_SUB_TYPE, NULL, @NEW_PAY_SEQ OUTPUT, @NEW_MCH_SEQ OUTPUT

				/*
				DECLARE @CHK CHAR(3)
				IF @SLIP_MK_SEQ = 0
					SET @CHK = 'NEW'
				ELSE
					SET @CHK = 'ADD'

				SELECT @PAY_DATE = SUBSTRING(REPLACE(@PAY_DATE, '-', ''), 1, 8)

				EXEC DBO.SP_ACC_RE_SLIPD_INS_NEW @CHK, @PAY_DATE, @SLIP_MK_SEQ OUTPUT, @NEW_PAY_SEQ, @NEW_MCH_SEQ, @EMP_CODE
				*/

				-- 처리 업데이트
				UPDATE EDI_MASTER_damo SET EDI_STATUS = 3, RCV_CODE = @EMP_CODE, RCV_YN = 'Y', RCV_DATE = GETDATE(), RCV_REMARK = '시스템자동처리' WHERE EDI_CODE = @EDI_CODE
			END

			IF @@TRANCOUNT > 0
				COMMIT TRAN

		END TRY
		BEGIN CATCH
			IF @@TRANCOUNT > 0
				ROLLBACK TRAN

			SELECT @MESSAGE = ERROR_MESSAGE()
		END CATCH

	END
	ELSE
	BEGIN
		SELECT @MESSAGE = '환불 계좌의 예금주가 불일치 합니다.'
	END

	SELECT @MESSAGE

END
GO
