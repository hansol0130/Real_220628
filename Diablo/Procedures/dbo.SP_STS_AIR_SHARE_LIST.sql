USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_STS_AIR_SHARE_LIST]
	@DEP_DATE	DATETIME,
	@REGION_CODE VARCHAR(100),
	@CITY_CODE	VARCHAR(100),
	@ATT_CODE	VARCHAR(100),
	@EMP_CODE	VARCHAR(7),
	@TEAM_CODE  VARCHAR(3)
AS  
BEGIN  
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	DECLARE @SQLSTRING NVARCHAR(4000), @WHERE NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000);

	-- WHERE 조건 만들기
	SET @WHERE = ''

		-- 지역코드  
	IF ISNULL(@REGION_CODE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND E.SIGN_CODE = ''' + @REGION_CODE + '''
		'
	END

		-- 속성코드
	IF ISNULL(@ATT_CODE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND E.ATT_CODE = ''' + @ATT_CODE + '''
		'
	END

		-- 담당자코드( 없으면 팀 전체, 팀 코드가 없으면 전체)
	IF LTRIM(ISNULL(@TEAM_CODE, '')) <> ''
	BEGIN
		IF LTRIM(ISNULL(@EMP_CODE, '')) <> ''
			SET @WHERE = @WHERE + ' AND B.NEW_CODE = @EMP_CODE
		'
		ELSE
			SET @WHERE = @WHERE + ' AND B.NEW_CODE IN (SELECT EMP_CODE FROM EMP_MASTER  WITH(NOLOCK) WHERE TEAM_CODE = @TEAM_CODE)
		'
	END

		-- 도시코드  
	IF ISNULL(@CITY_CODE, '') <> ''  
	BEGIN
		SET @WHERE = @WHERE + ' AND EXISTS (SELECT 1 FROM PKG_MASTER_SCH_CITY Z WHERE Z.MASTER_CODE = E.MASTER_CODE AND Z.MAINCITY_YN = ''Y'' AND Z.CITY_CODE = ''' + @CITY_CODE + ''')
		'
	END

	SET @SQLSTRING = N'
	SELECT
		A.SIGN_CODE, (CASE B.AAA WHEN ''YYY'' THEN A.TRANS_CODE WHEN ''ZZZ'' THEN B.AAA END) AS [TRANS_CODE]
		, SUM(THIS_COUNT) AS [THIS_COUNT], SUM(LAST_COUNT) AS [LAST_COUNT]
	INTO #TMP_AIR_SHARE
	FROM (
		SELECT
			D.DEP_TRANS_CODE AS [TRANS_CODE], E.SIGN_CODE
			, COUNT(D.DEP_TRANS_CODE) AS [THIS_COUNT], 0 AS [LAST_COUNT]
		FROM RES_MASTER_damo A
		INNER JOIN PKG_DETAIL B ON A.PRO_CODE = B.PRO_CODE
		INNER JOIN RES_CUSTOMER_damo C ON A.RES_CODE = C.RES_CODE
		INNER JOIN PRO_TRANS_SEAT D ON B.SEAT_CODE = D.SEAT_CODE
		INNER JOIN PKG_MASTER E ON A.MASTER_CODE = E.MASTER_CODE
		WHERE A.DEP_DATE >= @DEP_DATE AND A.DEP_DATE < DATEADD(MONTH, 1, @DEP_DATE)
		AND A.RES_STATE <= 7 AND C.RES_STATE IN (0, 3)
		'
	SET @SQLSTRING = @SQLSTRING + @WHERE + '
		GROUP BY D.DEP_TRANS_CODE, E.SIGN_CODE
		UNION 
		SELECT
			D.DEP_TRANS_CODE AS [TRANS_CODE], E.SIGN_CODE
			, 0 AS [THIS_COUNT], COUNT(D.DEP_TRANS_CODE) AS [LAST_COUNT]
		FROM RES_MASTER_damo A
		INNER JOIN PKG_DETAIL B ON A.PRO_CODE = B.PRO_CODE
		INNER JOIN RES_CUSTOMER_damo C ON A.RES_CODE = C.RES_CODE
		INNER JOIN PRO_TRANS_SEAT D ON B.SEAT_CODE = D.SEAT_CODE
		INNER JOIN PKG_MASTER E ON A.MASTER_CODE = E.MASTER_CODE
		WHERE A.DEP_DATE >= DATEADD(MONTH, -1, @DEP_DATE) AND A.DEP_DATE < @DEP_DATE
		AND A.RES_STATE <= 7 AND C.RES_STATE IN (0, 3)
		'
	SET @SQLSTRING = @SQLSTRING + @WHERE + '
		GROUP BY D.DEP_TRANS_CODE, E.SIGN_CODE
	) A
	CROSS JOIN (SELECT ''YYY'' AS [AAA] UNION SELECT ''ZZZ'') B 
	GROUP BY A.SIGN_CODE, (CASE B.AAA WHEN ''YYY'' THEN A.TRANS_CODE WHEN ''ZZZ'' THEN B.AAA END);

	-- 통계계산
	SELECT A.SIGN_CODE, C.KOR_NAME AS [SIGN_NAME], A.TRANS_CODE, A.THIS_COUNT, A.LAST_COUNT
		, (A.THIS_COUNT - A.LAST_COUNT) AS [DIFF_COUNT]
		, (CASE B.THIS_COUNT WHEN 0 THEN 0 ELSE CONVERT(DECIMAL(5,2), (A.THIS_COUNT * 100.00 / B.THIS_COUNT)) END) AS [THIS_RATE]
		, (CASE B.LAST_COUNT WHEN 0 THEN 0 ELSE CONVERT(DECIMAL(5,2), (A.LAST_COUNT * 100.00 / B.LAST_COUNT)) END) AS [LAST_RATE]
		, B.THIS_COUNT AS [THIS_TOTAL], B.LAST_COUNT AS [LAST_TOTAL]
	FROM #TMP_AIR_SHARE A
	INNER JOIN (
		SELECT * FROM #TMP_AIR_SHARE A WHERE TRANS_CODE = ''ZZZ''
	) B ON A.SIGN_CODE = B.SIGN_CODE
	LEFT JOIN PUB_REGION C ON A.SIGN_CODE = C.[SIGN]
	WHERE A.TRANS_CODE <> ''ZZZ'';
	
	-- 지역별 합계
	SELECT SIGN_CODE, THIS_COUNT AS [THIS_TOTAL], LAST_COUNT AS [LAST_TOTAL] FROM #TMP_AIR_SHARE
	WHERE TRANS_CODE = ''ZZZ'';

	-- 항공사별 합계
	WITH TMP_LIST AS
	(
		SELECT (CASE B.AAA WHEN ''YYY'' THEN A.TRANS_CODE WHEN ''ZZZ'' THEN B.AAA END) AS [TRANS_CODE]
			, SUM(THIS_COUNT) AS [THIS_COUNT], SUM(LAST_COUNT) AS [LAST_COUNT]
		FROM #TMP_AIR_SHARE A
		CROSS JOIN (SELECT ''YYY'' AS [AAA] UNION SELECT ''ZZZ'') B
		WHERE TRANS_CODE <> ''ZZZ''
		GROUP BY (CASE B.AAA WHEN ''YYY'' THEN A.TRANS_CODE WHEN ''ZZZ'' THEN B.AAA END)
	)
	SELECT A.*
		, (A.THIS_COUNT - A.LAST_COUNT) AS [DIFF_COUNT]
		, (CASE B.THIS_COUNT WHEN 0 THEN 0 ELSE CONVERT(DECIMAL(5,2), (A.THIS_COUNT * 100.00 / B.THIS_COUNT)) END) AS [THIS_RATE]
		, (CASE B.LAST_COUNT WHEN 0 THEN 0 ELSE CONVERT(DECIMAL(5,2), (A.LAST_COUNT * 100.00 / B.LAST_COUNT)) END) AS [LAST_RATE]
		, B.THIS_COUNT AS [THIS_TOTAL], B.LAST_COUNT AS [LAST_TOTAL]
	FROM TMP_LIST A
	CROSS JOIN (
		SELECT * FROM TMP_LIST WHERE TRANS_CODE = ''ZZZ''
	) B
	WHERE A.TRANS_CODE <> ''ZZZ''
	ORDER BY THIS_COUNT DESC;

	-- 임시테이블 삭제
	DROP TABLE #TMP_AIR_SHARE;'

	SET @PARMDEFINITION = N'@DEP_DATE DATETIME, @TEAM_CODE VARCHAR(3), @EMP_CODE VARCHAR(7)';

	PRINT @SQLSTRING
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @DEP_DATE, @TEAM_CODE, @EMP_CODE;

END

--SP_STS_AIR_SHARE_LIST '2010-02-01', '', '', '', '', ''

GO
