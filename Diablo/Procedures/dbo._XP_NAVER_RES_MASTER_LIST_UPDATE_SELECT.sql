USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*================================================================================================================
■ USP_NAME					: XP_NAVER_RES_MASTER_LIST_UPDATE_SELECT
■ DESCRIPTION				: 

네이버 예약의 동기화를 위하여 
미출발 네이버 예약의 변경내역 체크 

■ INPUT PARAMETER			:
■ OUTPUT PARAMETER			: 
■ EXEC						: XP_NAVER_RES_MASTER_LIST_UPDATE_SELECT 'N', '2019-07-03', NULL 
	
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   

================================================================================================================*/ 
CREATE PROC [dbo].[_XP_NAVER_RES_MASTER_LIST_UPDATE_SELECT]
	@UPDATE_YN CHAR(1) ,
	@START_DATE VARCHAR(10) = null ,
	@END_DATE VARCHAR(10) = null 
AS 
BEGIN 

	-- 갱신 작업 Y 일때만 
	IF ISNULL(@UPDATE_YN,'N') = 'Y' 
	BEGIN
		-- 전체 마스터 셋팅 
		DECLARE @TMP_TABLE_BAK_SQL VARCHAR(4000)
		DECLARE @TMP_SOURCE_TABLE VARCHAR(1000)

		DECLARE @TMP_TARGET_DATE VARCHAR(8)
		SET @TMP_TARGET_DATE = CONVERT(VARCHAR(8),DATEADD(D,-1,GETDATe()),112 ) 

		--SELECT @TMP_TARGET_DATE
		--SELECT CONVERT(DATETIME,@TMP_TARGET_DATE)
		SET @TMP_SOURCE_TABLE = 'NAVER_RES_MASTER'
		------------------------------------------------------------------------------------------------
		-- 당일 테이블 백업 
		DECLARE @TBL_CNT INT 
		SET @TBL_CNT  = 1 
		WHILE @TBL_CNT <=  (SELECT MAX(ID) FROM DBO.FN_SPLIT(@TMP_SOURCE_TABLE,',')  )
		BEGIN

			DECLARE @SOURCE_TABLE VARCHAR(100)
			DECLARE @TARGET_TABLE VARCHAR(100)

			DECLARE @TARGET_DEL_TABLE VARCHAR(100)

			SET @SOURCE_TABLE = (SELECT DATA FROM DBO.FN_SPLIT(@TMP_SOURCE_TABLE,',') WHERE ID = @TBL_CNT )
			SET @TARGET_TABLE =  @SOURCE_TABLE+'_'+ @TMP_TARGET_DATE  -- 어제날짜 
			SET @TARGET_DEL_TABLE =  @SOURCE_TABLE+'_'+ CONVERT(VARCHAR(8),DATEADD(DD,-1,CONVERT(DATETIME,@TMP_TARGET_DATE)),112 ) 
			
			--SELECT DATEADD(DD,-1,CONVERT(DATETIME,'20190325')) 

			--SELECT @SOURCE_TABLE ,  @TARGET_TABLE , @TARGET_DEL_TABLE
			
			 
			SET @TMP_TABLE_BAK_SQL =  '
			IF OBJECT_ID('''+@TARGET_TABLE  +''') IS NOT NULL -- 백업 테이블이 있다면 
			BEGIN
				DROP TABLE '+@TARGET_TABLE +' -- 백업테이블 지우고 
			END 
			-- 원본 -> 백업 테이블 이동 
			SELECT * INTO '+@TARGET_TABLE +' FROM '+@SOURCE_TABLE+' -- 테이블 이동 
			--2일전 테이블 삭제 
			IF OBJECT_ID('''+@TARGET_DEL_TABLE  +''') IS NOT NULL -- 백업 테이블이 있다면 
			BEGIN
				DROP TABLE '+@TARGET_DEL_TABLE +' -- 과거 테이블 삭제 
			END 
			---- 원본테이블 삭제 는 하지 않음 
			--TRUNCATE '+@SOURCE_TABLE+'	
			'
			--PRINT (@TMP_TABLE_BAK_SQL ) 
			EXEC(@TMP_TABLE_BAK_SQL)

			SET @TBL_CNT  = @TBL_CNT + 1 
		END 

		

	--DECLARE @START_DATE VARCHAR(10),@END_DATE VARCHAR(10) 
	--SELECT @START_DATE = '2019-07-01',  @END_DATE = '2020-12-01'
		-- 있는것은 지우고 다시 넣기 
		-- 없는것은 새로 넣기 
		IF OBJECT_ID('tempdb..#TMP_RES_MASTER_NOW') IS NOT NULL -- 백업 테이블이 있다면 
		BEGIN
			DROP TABLE #TMP_RES_MASTER_NOW
		END 

		-- 임시 테이블 현재꺼 넣기 
		CREATE TABLE #TMP_RES_MASTER_NOW (RES_CODE VARCHAR(12) ,
			SYSTEM_TYPE INT ,
			ALT_MEM_NO	VARCHAR(40) ,
			BOOK_KEY	VARCHAR(100),
			PRO_CODE	VARCHAR(30),
			PRICE_SEQ	INT ,
			PRO_NAME	VARCHAR(1000),
			NEW_DATE	DATETIME,
			DEP_DATE	DATETIME,
			ARR_DATE	DATETIME,
			TOTAL_PRICE	INT,
			ADT_COUNT	INT,
			CHD_COUNT	INT,
			INF_COUNT	INT,
			RES_NAME	VARCHAR(40),
			RES_TEL		VARCHAR(15),
			BOOKING_STATE	VARCHAR(10),
			PAY_STATE	VARCHAR(10),
			NEW_CODE	VARCHAR(7),
			EMP_NAME	VARCHAR(30),
			INNER_NUMBER VARCHAR(20),
			PRO_PC_URL	VARCHAR(500),
			PRO_MOB_URL	VARCHAR(500),
			RES_PC_URL	VARCHAR(500),
			RES_MOB_URL	VARCHAR(500),
			MEET_INFO	VARCHAR(1000),
			TC_CODE	VARCHAR(100),
			TC_YN	CHAR(1),
			TC_NUMBER VARCHAR(15),
			LAST_UPD_DATE DATETIME)

		-- 임시테이블에 현재예약정보 넣기 
		INSERT INTO #TMP_RES_MASTER_NOW 
		EXEC XP_NAVER_RES_MASTER_LIST_SELECT @START_DATE ,@END_DATE 

		----------------------------------------------------
		-- 갱신작업 시작 
		BEGIN TRAN 

			-- 현재 정보에 있는것 만 삭제 
			DELETE NAVER_RES_MASTER 
			--SELECT * FROM NAVER_RES_MASTER 
			WHERE RES_CODE IN ( SELECT RES_CODE FROM #TMP_RES_MASTER_NOW ) 

			-- 현재 정보에 있는것 새로 넣기 
			INSERT INTO NAVER_RES_MASTER 
			(RES_CODE,SYSTEM_TYPE,ALT_MEM_NO,BOOK_KEY,PRO_CODE,PRICE_SEQ,PRO_NAME,NEW_DATE,DEP_DATE,ARR_DATE,TOTAL_PRICE,ADT_COUNT,CHD_COUNT,INF_COUNT,
			RES_NAME,RES_TEL,BOOKING_STATE,PAY_STATE,NEW_CODE,EMP_NAME,INNER_NUMBER,PRO_PC_URL,PRO_MOB_URL,RES_PC_URL,RES_MOB_URL,MEET_INFO,TC_CODE,
			TC_YN,TC_NUMBER,LAST_UPD_DATE ) 

			SELECT 
			RES_CODE,SYSTEM_TYPE,ALT_MEM_NO,BOOK_KEY,PRO_CODE,PRICE_SEQ,PRO_NAME,NEW_DATE,DEP_DATE,ARR_DATE,TOTAL_PRICE,ADT_COUNT,CHD_COUNT,INF_COUNT,
			RES_NAME,RES_TEL,BOOKING_STATE,PAY_STATE,NEW_CODE,EMP_NAME,INNER_NUMBER,PRO_PC_URL,PRO_MOB_URL,RES_PC_URL,RES_MOB_URL,MEET_INFO,TC_CODE,
			TC_YN,TC_NUMBER,GETDATE() -- 정보없는것은 기존에서 갱신 
			FROM #TMP_RES_MASTER_NOW A 
		

		COMMIT TRAN 
		-- 갱신 작업 종료 
		----------------------------------------------------

		-- 갱신된 현재 정보 조회 하기 	
		SELECT * FROM NAVEr_RES_MASTER 
		WHERE DEP_DATE >= @START_DATE
		--AND  DEP_DATE < @END_DATE
		ORDER BY RES_CODE 

	
	END 
	ELSE 
	BEGIN
		-- 현재 예약정보 조회 
		EXEC XP_NAVER_RES_MASTER_LIST_SELECT @START_DATE ,@END_DATE 
	END 

	------------------------------------------------------------------------
	
	------------------------------------------------------------------------



	--INSERT INTO NAVER_RES_MASTER 
	--(RES_CODE,ALT_MEM_NO,BOOK_KEY,PRO_CODE,PRICE_SEQ,PRO_NAME,NEW_DATE,DEP_DATE,ARR_DATE,TOTAL_PRICE,ADT_COUNT,CHD_COUNT,INF_COUNT,
	--RES_NAME,RES_TEL,BOOKING_STATE,PAY_STATE,NEW_CODE,EMP_NAME,INNER_NUMBER,PRO_PC_URL,PRO_MOB_URL,RES_PC_URL,RES_MOB_URL,MEET_INFO,TC_CODE,
	--TC_YN,TC_NUMBER,LAST_UPD_DATE ) 
	--SELECT  

	--A.RES_CODE   , 
	--C.ALT_MEM_NO, 
	--C.ALT_PRO_URL AS BOOK_KEY  , 
	--A.PRO_CODE ,
	--A.PRICE_SEQ,

	--A.PRO_NAME,
	--A.NEW_DATE ,

	--B.DEP_DATE, 
	--B.ARR_DATE, 

	--DBO.FN_RES_GET_TOTAL_PRICE(A.RES_CODE ) AS TOTAL_PRICE ,
	--CASE WHEN A.RES_STATE IN(7,8,9) THEN 
	--	ISNULL((SELECT COUNT(*) FROM RES_CUSTOMER_DAMO WHERE RES_CODE = A.RES_CODE AND AGE_TYPE =0),1) 
	--ELSE DBO.FN_RES_GET_RES_ADULT_COUNT(A.RES_CODE ) END AS ADT_COUNT,

	--CASE WHEN A.RES_STATE IN(7,8,9) THEN 
	--	ISNULL((SELECT COUNT(*) FROM RES_CUSTOMER_DAMO WHERE RES_CODE = A.RES_CODE AND AGE_TYPE =1),0) 
	--ELSE DBO.FN_RES_GET_RES_CHILD_COUNT(A.RES_CODE ) END AS CHD_COUNT,
	--CASE WHEN A.RES_STATE IN(7,8,9) THEN 
	--	ISNULL((SELECT COUNT(*) FROM RES_CUSTOMER_DAMO WHERE RES_CODE = A.RES_CODE AND AGE_TYPE =2),0) 
	--ELSE DBO.FN_RES_GET_RES_BABY_COUNT(A.RES_CODE ) END AS INF_COUNT,

	--A.RES_NAME , 
	--A.NOR_TEL1 + '-' + A.NOR_TEL2 + '-' + A.NOR_TEL3 AS RES_TEL ,

	----	예약상태코드 (RSVRC,RSVCF,RSVWA,RSVCN) 
	---- 예약접수(RSVRC), 예약확정(RSVCF), 예약대기(RSVWA), 예약취소(RSVCN)
	--CASE WHEN A.RES_STATE IN (0,1) THEN 'RSVRC' 
	--	WHEN A.RES_STATE IN (2,3,4,5,6) THEN 'RSVCF'
	--	WHEN A.RES_STATE IN(7,8,9) THEN 'RSVCN' ELSE 'RSVWA' 
	--	--WHEN A.RES_STATE IN(7,8,9) THEN 'RSVWA' ELSE 'RSVCN' 
	--	END AS BOOKING_STATE ,

	----금액미확정(NONE), 미결제(UNPAID), 부분결제(REPAY), 결제완료(DONE), 결제취소완료(CANCEL)
	--CASE WHEN A.RES_STATE IN (7) THEN 'CANCEL' 
	--	WHEN DBO.FN_RES_GET_PAY_PRICE(A.RES_CODE) = 0 THEN  --미결제시 
	--		CASE WHEN A.RES_STATE IN(0,1) THEN 'NONE' ELSE 'UNPAID' END 
	--	WHEN DBO.FN_RES_GET_PAY_PRICE(A.RES_CODE) > 0 THEN  -- 결제시 
	--		CASE WHEN DBO.FN_RES_GET_TOTAL_PRICE(A.RES_CODE ) =  DBO.FN_RES_GET_PAY_PRICE(A.RES_CODE) THEN 'DONE' ELSE 'REPAY' END
		
	--	END AS PAY_STATE  , 

	--A.NEW_CODE , 

	--D.KOR_NAME AS EMP_NAME , 

	--D.INNER_NUMBER1 +'-'+ D.INNER_NUMBER2  +'-'+ D.INNER_NUMBER3 AS INNER_NUMBER , 


	--'/Affiliate/Naver/PackageDetail?ProCode='+ B.PRO_CODE + '&PriceSeq=' + CONVERT(VARCHAR,A.PRICE_SEQ) AS PRO_PC_URL, 
	--'/Affiliate/NaverMobile/PackageDetail?ProCode='+ B.PRO_CODE + '&PriceSeq=' + CONVERT(VARCHAR,A.PRICE_SEQ) AS PRO_MOB_URL, 

	--'/Affiliate/Naver/ReserveDetail?ResCode='+ A.RES_CODE AS RES_PC_URL, 
	--'/Affiliate/NaverMobile/ReserveDetail?ResCode='+ A.RES_CODE  AS RES_MOB_URL, 


	--CASE WHEN ISNULL(B.FIRST_MEET,'') <> '' THEN B.FIRST_MEET 
	--ELSE 
	--	CASE WHEN B.MEET_COUNTER = 1 THEN '인천국제공항 제1터미널 3층 1번 출입구 A카운터 1번 테이블'  
	--		WHEN B.MEET_COUNTER = 2 THEN '인천국제공항 제1터미널 3층 14번 출입구 M카운터 1번 테이블'  
	--		WHEN B.MEET_COUNTER = 2 THEN '인천국제공항 제1터미널 3층 1,14번 출입구 A,M카운터 1번 테이블'
	--		WHEN B.MEET_COUNTER = 2 THEN '인천국제공항 제2터미널 3층 8번 출입구 H카운터' 
	--		END  
	--END AS MEET_INFO 

	--, TC_CODE , TC_YN 
	--,E.HP_NUMBER1 +'-' + E.HP_NUMBER2 +'-'+ E.HP_NUMBER3  AS TC_NUMBER 
	--, NULL 
	--FROM RES_MASTER_DAMO A WITH(NOLOCK)

	--	INNER JOIN PKG_DETAIL B WITH(NOLOCK) 
	--		ON A.PRO_CODE = B.PRO_CODE 

	--	LEFT JOIN RES_ALT_MATCHING C WITH(NOLOCK) 
	--		ON A.RES_CODE = C.RES_CODE 

	--	LEFT JOIN EMP_MASTER_DAMO D WITH(NOLOCK) 
	--		ON A.NEW_CODE = D.EMP_CODE 

	--	LEFT JOIN AGT_MEMBER E  WITH(NOLOCK) 
	--		ON B.TC_CODE = E.MEM_CODE 

	--WHERE A.PROVIDER = 41 
	--AND A.DEP_DATE >= '2019-06-01'
	
	----AND (A.RES_CODE = @RES_CODE OR ISNULL(@RES_CODE,'') ='')

	--ORDER BY A.RES_CODE 

END 



GO
