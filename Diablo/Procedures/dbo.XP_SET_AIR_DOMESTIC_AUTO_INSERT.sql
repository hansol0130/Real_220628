USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_SET_AIR_DOMESTIC_AUTO_INSERT
■ DESCRIPTION				: 국내항공 예약 시 정산 자동 등록
■ INPUT PARAMETER			:
	@RES_CODE				: 예약코드
■ OUTPUT PARAMETER			: 
■ EXEC						: 
	exec DBO.XP_SET_AIR_DOMESTIC_AUTO_INSERT '' 
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2015-08-27		김성호			최초생성
   2015-12-16		김성호			지상비 등록시 행사지결 완료처리 추가
   2019-07-24		김성호			해당팀 마감자(재무팀) 찾아서 등록
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[XP_SET_AIR_DOMESTIC_AUTO_INSERT]
(
	@RES_CODE	VARCHAR(20)
)
AS
BEGIN

	BEGIN TRAN;

	BEGIN TRY

		-- SELECT * FROM RES_SEGMENT WHERE RES_CODE = @RES_CODE

		DECLARE @PRO_CODE VARCHAR(20), @NEW_CODE VARCHAR(20), @NEW_TEAM_CODE VARCHAR(3), @AGT_CODE INT, @SEQ_NO INT, @CLOSE_CODE VARCHAR(20)

		SELECT @PRO_CODE = A.PRO_CODE, @NEW_CODE = A.NEW_CODE, @NEW_TEAM_CODE = A.NEW_TEAM_CODE, @AGT_CODE = SALE_COM_CODE
		FROM RES_MASTER_damo A WITH(NOLOCK)
		WHERE RES_CODE = @RES_CODE;

		-- 정산마스터 미등록 시 등록
		IF NOT EXISTS(SELECT 1 FROM SET_MASTER WITH(NOLOCK) WHERE PRO_CODE = @PRO_CODE)
		BEGIN
			SELECT @CLOSE_CODE = ISNULL((SELECT TOP 1 EDT_CODE FROM SET_MASTER A WITH(NOLOCK) WHERE A.PROFIT_TEAM_CODE = @NEW_TEAM_CODE AND EDT_CODE IS NOT NULL ORDER BY DEP_DATE DESC), '9999999')

			-- 도착일은 예약별로 상이해서 삭제
			INSERT INTO SET_MASTER (PRO_CODE, MASTER_CODE, PRO_TYPE, DEP_DATE, NEW_CODE, PROFIT_TEAM_CODE, PROFIT_TEAM_NAME, CLOSE_CODE, CLOSE_DATE, SET_STATE)
			SELECT A.PRO_CODE, A.MASTER_CODE, A.PRO_TYPE, A.DEP_DATE, A.NEW_CODE, A.PROFIT_TEAM_CODE, A.PROFIT_TEAM_NAME, @CLOSE_CODE, GETDATE(), 2	-- 정산 상태는 완료
			FROM RES_MASTER_damo A WITH(NOLOCK)
			WHERE RES_CODE = @RES_CODE;
		END

		-- SET_PROFIT 생성
		EXEC DBO.SP_SET_PROFIT_REFRESH @PRO_CODE, @NEW_CODE;

		-- 대한항공, 아시아나
		IF @AGT_CODE IN (93776, 93777)
		BEGIN
			-- 예약코드 중복 체크
			IF NOT EXISTS(SELECT * FROM SET_AIR_AGENT WHERE ROUTING LIKE (@RES_CODE + '%'))
			BEGIN
				-- 순번
				SELECT @SEQ_NO = (ISNULL((SELECT MAX(AIR_SEQ_NO) FROM SET_AIR_AGENT WITH(NOLOCK) WHERE PRO_CODE = @PRO_CODE), 0) + 1)

				-- SET_AIR_AGENT
				INSERT INTO SET_AIR_AGENT(PRO_CODE, AIR_SEQ_NO, AIRLINE_CODE, DEP_DATE, ROUTING, CITY_CODE, FOC_COUNT, COM_RATE, AIR_ETC_PROFIT, AIR_ETC_PRICE, COMM_PRICE, VAT_PRICE, NEW_CODE)
				SELECT A.PRO_CODE, @SEQ_NO, B.AIRLINE_CODE, A.DEP_DATE, B.ROUTING, B.CITY_CODE, 0, 0, '', 0, 0, 0, @NEW_CODE
				FROM RES_MASTER_damo A WITH(NOLOCK)
				CROSS JOIN (
					SELECT
						DBO.FN_RES_GET_TOTAL_PRICE(@RES_CODE) AS [TOTAL_PRICE],
						A.AIRLINE_CODE,
						(A.RES_CODE + ' [' + A.DEP_AIRPORT_CODE + A.ARR_AIRPORT_CODE + ']') AS [ROUTING],
						A.ARR_CITY_CODE AS [CITY_CODE]
					FROM RES_SEGMENT A WITH(NOLOCK)
					WHERE A.RES_CODE = @RES_CODE AND SEQ_NO = 1
				
				) B
				WHERE RES_CODE = @RES_CODE;

				-- SET_AIR_CUSTOMER
				INSERT INTO SET_AIR_CUSTOMER(PRO_CODE, AIR_SEQ_NO, RES_CODE, RES_SEQ_NO, FARE_TYPE, FARE_PRICE, NET_PRICE, PAY_PRICE, TAX_PRICE, NEW_CODE)
				SELECT 
					@PRO_CODE,
					@SEQ_NO,
					A.RES_CODE,
					A.SEQ_NO,
					(A.AGE_TYPE + 1),
					A.SALE_PRICE,
					(A.SALE_PRICE + A.TAX_PRICE),
					(A.SALE_PRICE + A.TAX_PRICE),
					A.TAX_PRICE,
					@NEW_CODE
				FROM RES_CUSTOMER_damo A WITH(NOLOCK)
				INNER JOIN RES_MASTER_damo B WITH(NOLOCK) ON B.RES_CODE = A.RES_CODE
				WHERE B.RES_CODE = @RES_CODE AND B.RES_STATE <= 7 AND A.RES_STATE IN (0, 3, 4)
			END
		END
		-- 진에어, 티웨이
		ELSE IF @AGT_CODE IN (91416, 92223)
		BEGIN
			-- 예약코드 중복 체크
			IF NOT EXISTS(SELECT * FROM SET_LAND_AGENT WHERE REMARK LIKE (@RES_CODE + '%'))
			BEGIN
				-- 순번
				SELECT @SEQ_NO = (ISNULL((SELECT MAX(LAND_SEQ_NO) FROM SET_LAND_AGENT WITH(NOLOCK) WHERE PRO_CODE = @PRO_CODE), 0) + 1)

				-- SET_LAND_AGENT
				-- 전자결재 가상번호 입력후 지결 생성 완료처리
				INSERT INTO SET_LAND_AGENT(PRO_CODE, LAND_SEQ_NO, AGT_CODE, CUR_TYPE, DOC_YN, EDI_CODE, PAY_PRICE, FOREIGN_PRICE, KOREAN_PRICE, EXC_RATE, RES_COUNT, REMARK, NEW_CODE)
				SELECT A.PRO_CODE, @SEQ_NO, A.SALE_COM_CODE, 0, 'Y', '9999999999', B.TOTAL_PRICE, (B.TOTAL_PRICE/B.RES_COUNT), (B.TOTAL_PRICE/B.RES_COUNT), 1.0, B.RES_COUNT, @RES_CODE, @NEW_CODE
				FROM RES_MASTER_damo A WITH(NOLOCK)
				CROSS JOIN (
					SELECT
						DBO.FN_RES_GET_TOTAL_PRICE(@RES_CODE) AS [TOTAL_PRICE],
						COUNT(*) AS [RES_COUNT]
					FROM RES_CUSTOMER_damo A WITH(NOLOCK)
					WHERE A.RES_CODE = @RES_CODE AND A.RES_STATE IN (0, 3, 4)
				) B
				WHERE RES_CODE = @RES_CODE;

				-- SET_LAND_CUSTOMER
				INSERT INTO SET_LAND_CUSTOMER (PRO_CODE, LAND_SEQ_NO, RES_CODE, RES_SEQ_NO, CUR_TYPE, PAY_PRICE, FOREIGN_PRICE, KOREAN_PRICE, EXC_RATE, NEW_CODE)
				SELECT
					@PRO_CODE, 
					@SEQ_NO, 
					@RES_CODE, 
					A.SEQ_NO, 
					(A.AGE_TYPE + 1),
					(A.SALE_PRICE + A.TAX_PRICE),
					(A.SALE_PRICE + A.TAX_PRICE),
					(A.SALE_PRICE + A.TAX_PRICE),
					1.0,					-- 원화기준 환율은 무조건 1.0
					@NEW_CODE
				FROM RES_CUSTOMER_damo A WITH(NOLOCK)
				WHERE A.RES_CODE = @RES_CODE AND A.RES_STATE IN (0, 3, 4)
			END
		END

		IF @@TRANCOUNT > 0
			COMMIT TRAN

	END TRY
	BEGIN CATCH 

		IF @@TRANCOUNT > 0
			ROLLBACK TRAN

		-- 에러로그
		INSERT INTO VGLog.dbo.SYS_ERP_LOG(
			LOG_TYPE,
			CATEGORY,
			TITLE, 
			BODY, 
			REQUEST, 
			TRACE)
		VALUES(
			1,				-- LogTypeEnum { None = 0, Error, Warning, Information };
			'MSSQL국내항공',
			ERROR_PROCEDURE(),
			ERROR_MESSAGE(),
			ISNULL(@RES_CODE, ''),
			ERROR_LINE());

	END CATCH

END 
GO
