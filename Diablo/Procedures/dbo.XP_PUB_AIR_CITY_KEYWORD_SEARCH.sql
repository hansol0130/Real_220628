USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: XP_PUB_AIR_CITY_KEYWORD_SEARCH
■ DESCRIPTION				: 항공코드 조회 
■ INPUT PARAMETER			:
	@RES_CODE				: 예약코드
■ OUTPUT PARAMETER			: 
■ EXEC						: 
	exec DBO.XP_PUB_AIR_CITY_KEYWORD_SEARCH '서울' 
	exec DBO.XP_PUB_AIR_CITY_KEYWORD_SEARCH '홍콩' 
	exec DBO.XP_PUB_AIR_CITY_KEYWORD_SEARCH '뉴욕' 
	exec DBO.XP_PUB_AIR_CITY_KEYWORD_SEARCH '필리핀' 

	exec DBO.XP_PUB_AIR_CITY_KEYWORD_SEARCH '세부' 
	exec DBO.XP_PUB_AIR_CITY_KEYWORD_SEARCH '상해' 
	exec DBO.XP_PUB_AIR_CITY_KEYWORD_SEARCH '홍차오' 
	exec DBO.XP_PUB_AIR_CITY_KEYWORD_SEARCH '방콕' 

	exec DBO.XP_PUB_AIR_CITY_KEYWORD_SEARCH '러시아' 
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2016-06-09		박형만		신규추가 
   2016-11-09		박형만		상해,푸동 분리 검색 되도록 
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[XP_PUB_AIR_CITY_KEYWORD_SEARCH]
(
	@SEARCH_WORD VARCHAR(200)
) 
AS 
BEGIN

	--개선 쿼리 
--DECLARE @SEARCH_WORD VARCHAR(200)
--SET @SEARCH_WORD = '도쿄'

	--공항코드 옵션이 필요한 도시코드 
	DECLARE @AIRPORT_OPTION_CODE VARCHAR(100)
	SET @AIRPORT_OPTION_CODE = 'SHA'  --해당코드는 도시코드가 아닌 공항코드로 인식 하도록 

	DECLARE @APPROACH_DATA TABLE 
	( CITY_CODE VARCHAR(10) , AIRPORT_CODE VARCHAR(10) , AIRPORT_COUNT INT  ) ;
	-- 도시코드+ 공항코드 검색결과 넣기 
	INSERT INTO  @APPROACH_DATA 
	SELECT CITY_CODE ,  AIRPORT_CODE ,  
	CASE WHEN CHARINDEX(T.CITY_CODE,@AIRPORT_OPTION_CODE) > 0   THEN 1 ELSE  (SELECT COUNT(AIRPORT_CODE) FROM PUB_AIRPORT WHERE CITY_CODE = T.CITY_CODE ) END 
	FROM 
	(
		--1 도시코드+공항코드 검색결과 
		SELECT A.RESULT_WORD  AS CITY_CODE, C.AIRPORT_CODE  FROM COD_APPROACH A WITH(NOLOCK)
		INNER JOIN PUB_CITY B WITH(NOLOCK) ON A.RESULT_WORD = B.CITY_CODE
		LEFT JOIN PUB_AIRPORT C WITH(NOLOCK) ON B.CITY_CODE = C.CITY_CODE AND C.IS_USE = '1' 
		WHERE A.GRP_CODE = 'CITY_CODE'  -- 도시코드  
		AND A.SEARCH_WORD LIKE @SEARCH_WORD +'%'      -- COD_APPROACH 검색어 테이블 조회 
		AND B.KOR_NAME IS NOT NULL 
		AND B.IS_USE_AIR = '1'
		--AND C.IS_USE = '1'
		UNION ALL 
		--2 공항코드 검색결과 
		SELECT B.CITY_CODE, C.AIRPORT_CODE  FROM COD_APPROACH A WITH(NOLOCK)
		INNER JOIN PUB_AIRPORT C WITH(NOLOCK) ON A.RESULT_WORD = C.AIRPORT_CODE 
		INNER JOIN PUB_CITY B WITH(NOLOCK) ON C.CITY_CODE = B.CITY_CODE
		WHERE A.GRP_CODE = 'AIRPORT'  -- 도시코드  
		AND A.SEARCH_WORD LIKE @SEARCH_WORD +'%'      -- COD_APPROACH 검색어 테이블 조회 
		--AND B.IS_USE_AIR = '1'
		--AND B.KOR_NAME IS NOT NULL 
		AND C.IS_USE = '1'
		AND C.KOR_NAME IS NOT NULL  
	)  T 
	GROUP BY CITY_CODE ,AIRPORT_CODE

	----검색결과가 없으면 국가 검색으로 
	--IF NOT EXISTS (C)
	--BEGIN
		INSERT INTO  @APPROACH_DATA 
		SELECT B.CITY_CODE , C.AIRPORT_CODE , (SELECT COUNT(AIRPORT_CODE) FROM PUB_AIRPORT WHERE CITY_CODE = B.CITY_CODE AND IS_USE ='1' )
		FROM PUB_NATION  A WITH(NOLOCK) 
		INNER JOIN PUB_CITY B WITH(NOLOCK)  ON A.NATION_CODE = B.NATION_CODE  
		INNER JOIN PUB_AIRPORT C WITH(NOLOCK)  ON B.CITY_CODE = C.CITY_CODE  
		--INNER JOIN @APPROACH_DATA D ON B.CITY_CODE <> D.CITY_CODE AND C.AIRPORT_CODE <> D.AIRPORT_CODE 
		WHERE A.KOR_NAME LIKE  @SEARCH_WORD +'%'  
		AND A.IS_USE = '1' AND B.IS_USE_AIR = '1' AND C.IS_USE = '1' 
		AND B.CITY_CODE NOT IN ( SELECT CITY_CODE FROM @APPROACH_DATA WHERE CITY_CODE IS NOT NULL )
		AND C.AIRPORT_CODE NOT IN ( SELECT AIRPORT_CODE FROM @APPROACH_DATA WHERE AIRPORT_CODE IS NOT NULL)
	--END 
--SELECT TOP 100 * FROM @APPROACH_DATA 

	--도시가 두개이상인것은 도시전체로 넣어줌 
	INSERT INTO  @APPROACH_DATA 
	SELECT CITY_CODE , NULL , AIRPORT_COUNT  FROM @APPROACH_DATA 
	WHERE AIRPORT_COUNT > 1 
	AND CITY_CODE NOT IN ( 'SHA')
	GROUP BY CITY_CODE , AIRPORT_COUNT

	--결과조회
	SELECT 
	T.CITY_CODE ,
	T.AIRPORT_CODE , 
	T.AIRPORT_COUNT,
	CASE WHEN T.AIRPORT_CODE IS NULL THEN T.CITY_CODE ELSE T.AIRPORT_CODE END AS RESULT_CODE , 

	C.KOR_NAME + ',' + B.KOR_NAME  +  ISNULL('(' + T.AIRPORT_CODE +')','') 
	+ ISNULL(  ' (' + D.ENG_NAME +' 공항)'  ,' (전체공항) ') AS RESULT_TEXT ,
	 
	C.KOR_NAME AS NATION_NAME , 
	B.KOR_NAME AS CITY_NAME , 
	B.ENG_NAME AS CITY_ENG_NAME ,
	CASE WHEN T.AIRPORT_CODE IS NULL THEN '전체' ELSE D.ENG_NAME END AS AIRPORT_ENG_NAME , 
	CASE WHEN T.AIRPORT_CODE IS NULL THEN '전체' ELSE D.KOR_NAME END AS AIRPORT_NAME ,
	C.ORDER_SEQ, B.ORDER_SEQ  
	FROM @APPROACH_DATA  T 
		INNER JOIN PUB_CITY B ON T.CITY_CODE = B.CITY_CODE  
		INNER JOIN PUB_NATION C ON B.NATION_CODE = C.NATION_CODE 
		LEFT JOIN PUB_AIRPORT D ON  T.CITY_CODE = D.CITY_CODE AND T.AIRPORT_CODE= D.AIRPORT_CODE  
			--AND T.CITY_CODE <> D.AIRPORT_CODE 
	WHERE (T.AIRPORT_COUNT > 1 AND T.CITY_CODE <> T.AIRPORT_CODE  AND T.AIRPORT_CODE IS NOT NULL )
	OR T.AIRPORT_COUNT = 1 
	OR T.AIRPORT_CODE IS NULL 
	 --OR ( T.AIRPORT_COUNT = 1 AND T.AIRPORT_CODE IS NULL )
	
	--WHERE T.AIRPORT_CODE IS NOT NULL AND 

	--WHERE T.AIRPORT_CODE IS NULL 
	--OR T.AIRPORT_CODE NOT IN ( 'BKK','SHA' ,'LED') 
	--예외) 도시코드와 공항코드 같고 , 도시전체 공항검색이 안되는 공항코드 제외 

	ORDER BY C.ORDER_SEQ, B.ORDER_SEQ , B.CITY_CODE ,  D.AIRPORT_CODE 


END 
GO
