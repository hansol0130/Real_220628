USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*================================================================================================================
■ USP_NAME					: SP_MOV2_RETURN_VISIT_BIGDATA_SELECT
■ DESCRIPTION				: 검색_재방문_상품정보_3개이상
■ INPUT PARAMETER			: @START_DATE, @END_DATE, @MASTER_CODES, @SIGN_CODE
■ EXEC						: 
    -- exec SP_MOV2_RETURN_VISIT_BIGDATA_SELECT '2016-09-23', '2016-10-01', 'APA074,APP0025,APP5034', 'A'

■ MEMO						: 상품3개이상본 재방문자를 위한 상품정보
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			        DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2017-08-19		오준욱(IBSOLUTION)		최초생성
   2017-10-21		IBSOLUTION				이벤트 SHOW_YN 추가
   2017-11-04		김성호					키워드 테이블 및 범위 변경
   2017-11-05		김성호					인덱스 재성성 및 키워드 사용 테이블 변경
   2021-01-06		김영민(EHD)				ATT_CODE = 1 온라인(단품)제외
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[SP_MOV2_RETURN_VISIT_BIGDATA_SELECT]
	@START_DATE		VARCHAR(10),
	@END_DATE		VARCHAR(10),
	@MASTER_CODES	VARCHAR(100),
	@SIGN_CODE		VARCHAR(1)
AS
BEGIN

---------------------------------------------
--C. 3가지 이상
--1 추천상품 (본상품중 하나 - 가장 예약많은 상품)
---------------------------------------------			
	DECLARE @MASTER_CODE NVARCHAR(10);
	DECLARE @COMMA_COUNT INT;

	SELECT @COMMA_COUNT = CHARINDEX(',' , @MASTER_CODES)

	IF @COMMA_COUNT > 1
		BEGIN
			SELECT @MASTER_CODE = A1.MASTER_CODE FROM (
				SELECT TOP 1 B.MASTER_CODE, COUNT(*) NO FROM DBO.FN_SPLIT(@MASTER_CODES, ',') A
					INNER JOIN RES_MASTER_DAMO B WITH(NOLOCK)
						ON A.DATA = B.MASTER_CODE
					INNER JOIN PKG_MASTER C WITH(NOLOCK)
						ON A.DATA = C.MASTER_CODE
					WHERE B.NEW_DATE >= @START_DATE 
						AND B.NEW_DATE <= @END_DATE  + ' 23:59:59'
						AND C.SHOW_YN ='Y' AND C.ATT_CODE <> '1'
					GROUP BY B.MASTER_CODE
					ORDER BY NO DESC
				) A1

			IF @MASTER_CODE IS NULL 
				BEGIN
					SELECT @MASTER_CODE = A.Data FROM (SELECT TOP 1 * from DBO.FN_SPLIT(@MASTER_CODES, ',') ORDER BY ID DESC) A
				END
		END
	ELSE
		SET @MASTER_CODE = @MASTER_CODES;


	SELECT P1.*, B1.*
			, (SELECT COUNT(*) FROM VR_CONTENT V2 WITH(NOLOCK) INNER JOIN VR_MASTER VM WITH(NOLOCK) ON V2.VR_NO = VM.VR_NO WHERE P1.MASTER_CODE = V2.MASTER_CODE AND VM.VR_TYPE = 1) AS [VR_COUNT]
			, (SELECT COUNT(*) FROM PUB_EVENT_DATA A2 WITH(NOLOCK) INNER JOIN PUB_EVENT B2 WITH(NOLOCK) ON A2.EVT_SEQ = B2.EVT_SEQ WHERE B2.EVT_YN = 'Y' AND A2.SHOW_YN = 'Y' AND B2.SHOW_YN = 'Y' AND A2.MASTER_CODE = P1.MASTER_CODE AND B2.END_DATE >= GETDATE()) AS [EVENT_COUNT]
		FROM PKG_MASTER P1 WITH(NOLOCK) 
		LEFT JOIN INF_FILE_MASTER B1 WITH(NOLOCK) 
			ON P1.MAIN_FILE_CODE = B1.FILE_CODE			
		WHERE P1.MASTER_CODE = @MASTER_CODE
						
---------------------------------------------
--2 빅데이타 상품 3
---------------------------------------------

---------------------------------------------
--3 동반자별 베스트 5 스와이프
---------------------------------------------
	DECLARE @BASIC_DATE NVARCHAR(20);
	DECLARE @MAX_FAMILY INT;
	DECLARE @MAX_FRIEND INT;
	DECLARE @MAX_COUPLE INT;
	DECLARE @MAX_MEETING INT;
	DECLARE @MAX_ALONE INT;
	
	SELECT TOP 1 @BASIC_DATE = A.NEW_DATE FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
	ORDER BY A.NEW_DATE DESC

	SELECT @MAX_FAMILY = MAX(A.FAMILY_PERCENT), @MAX_FRIEND = MAX(A.FRIEND_PERCENT), @MAX_COUPLE = MAX(A.COUPLE_PERCENT), @MAX_MEETING = MAX(A.MEETING_PERCENT), @MAX_ALONE = MAX(A.ALONE_PERCENT) FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
			INNER JOIN PKG_MASTER B WITH(NOLOCK)
				ON A.MASTER_CODE = B.MASTER_CODE
				AND B.SIGN_CODE = @SIGN_CODE
		WHERE A.NEW_DATE = @BASIC_DATE
			AND B.SHOW_YN ='Y' AND ATT_CODE <> '1' 

	SELECT P1.*, B1.*
			, (SELECT COUNT(*) FROM VR_CONTENT V2 WITH(NOLOCK) INNER JOIN VR_MASTER VM WITH(NOLOCK) ON V2.VR_NO = VM.VR_NO WHERE P1.MASTER_CODE = V2.MASTER_CODE AND VM.VR_TYPE = 1) AS [VR_COUNT]
			, (SELECT COUNT(*) FROM PUB_EVENT_DATA A2 WITH(NOLOCK) INNER JOIN PUB_EVENT B2 WITH(NOLOCK) ON A2.EVT_SEQ = B2.EVT_SEQ WHERE B2.EVT_YN = 'Y' AND A2.SHOW_YN = 'Y' AND B2.SHOW_YN = 'Y' AND A2.MASTER_CODE = P1.MASTER_CODE AND B2.END_DATE >= GETDATE()) AS [EVENT_COUNT]
		FROM (
	
		SELECT TOP 1 * FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
			WHERE A.NEW_DATE = @BASIC_DATE
				AND A.FAMILY_PERCENT = @MAX_FAMILY
			
		UNION ALL
		SELECT TOP 1 * FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
			WHERE A.NEW_DATE = @BASIC_DATE
				AND A.FRIEND_PERCENT = @MAX_FRIEND
	
		UNION ALL
		SELECT TOP 1 * FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
			WHERE A.NEW_DATE = @BASIC_DATE
				AND A.COUPLE_PERCENT = @MAX_COUPLE
		
		UNION ALL
		SELECT TOP 1 * FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
			WHERE A.NEW_DATE = @BASIC_DATE
				AND A.MEETING_PERCENT = @MAX_MEETING
	
		UNION ALL
		SELECT TOP 1 * FROM PKG_MASTER_PARTNER A WITH(NOLOCK)
			WHERE A.NEW_DATE = @BASIC_DATE
				AND A.ALONE_PERCENT = @MAX_ALONE
		
		) A1
		INNER JOIN PKG_MASTER P1 WITH(NOLOCK) 
			ON P1.MASTER_CODE = A1.MASTER_CODE
		LEFT JOIN INF_FILE_MASTER B1 WITH(NOLOCK) 
			ON P1.MAIN_FILE_CODE = B1.FILE_CODE
---------------------------------------------
--4 인기상품 (예약상품 2개)
---------------------------------------------
	SELECT P1.*, B1.*
			, (SELECT COUNT(*) FROM VR_CONTENT V2 WITH(NOLOCK) INNER JOIN VR_MASTER VM WITH(NOLOCK) ON V2.VR_NO = VM.VR_NO WHERE P1.MASTER_CODE = V2.MASTER_CODE AND VM.VR_TYPE = 1) AS [VR_COUNT]
			, (SELECT COUNT(*) FROM PUB_EVENT_DATA A2 WITH(NOLOCK) INNER JOIN PUB_EVENT B2 WITH(NOLOCK) ON A2.EVT_SEQ = B2.EVT_SEQ WHERE B2.EVT_YN = 'Y' AND A2.SHOW_YN = 'Y' AND B2.SHOW_YN = 'Y' AND A2.MASTER_CODE = P1.MASTER_CODE AND B2.END_DATE >= GETDATE()) AS [EVENT_COUNT]
		FROM (

			SELECT TOP 2 A.MASTER_CODE, COUNT(*) AS [NO]
			FROM RES_MASTER_damo A WITH(NOLOCK)
			INNER JOIN PKG_MASTER B WITH(NOLOCK) ON A.MASTER_CODE = B.MASTER_CODE
			WHERE A.NEW_DATE >= @START_DATE AND A.NEW_DATE < DATEADD(D, 1, @END_DATE) AND A.RES_STATE <= 7
			GROUP BY A.MASTER_CODE
			ORDER BY [NO] DESC

		--SELECT TOP 2 A.MASTER_CODE, COUNT(*) NO FROM RES_MASTER_DAMO A WITH(NOLOCK)
		--	INNER JOIN PKG_MASTER B WITH(NOLOCK)
		--		ON A.MASTER_CODE = B.MASTER_CODE
		--	WHERE A.NEW_DATE >= @START_DATE 
		--		AND A.NEW_DATE <= @END_DATE  + ' 23:59:59'
		--		AND B.SHOW_YN ='Y' 
		--	GROUP BY A.MASTER_CODE
		--	ORDER BY NO DESC		
			
		) A1
		INNER JOIN PKG_MASTER P1 WITH(NOLOCK) 
			ON P1.MASTER_CODE = A1.MASTER_CODE
		LEFT JOIN INF_FILE_MASTER B1 WITH(NOLOCK) 
			ON P1.MAIN_FILE_CODE = B1.FILE_CODE
						
---------------------------------------------
--5 화제의 키워드 5
---------------------------------------------

	-- 격일로 베스트 상품 등록 하여 사용 (SQL 에이전트)
	SELECT TOP 5 KEYWORD, SEARCH_COUNT AS [NO]
	FROM VGLOG.DBO.KEYWORD_BEST_LOG A WITH(NOLOCK)
	ORDER BY SEARCH_COUNT DESC

	--SELECT TOP 5 KEYWORD, COUNT(*) AS [NO]
	--FROM VGLOG.DBO.KEYWORD_LOG A WITH(NOLOCK)
	--WHERE A.NEW_DATE > DATEADD(MONTH, -3, GETDATE())
	--GROUP BY KEYWORD
	--ORDER BY NO DESC


		
---------------------------------------------
--6 지역 이벤트 할인 상품 3  ==============  X
---------------------------------------------
	SELECT TOP 3 * FROM PUB_EVENT A WITH(NOLOCK)
	WHERE A.EVT_YN = 'Y'
		AND A.SHOW_YN = 'Y'
		AND A.END_DATE > GETDATE()
	ORDER BY BEST_YN DESC, NEW_DATE DESC	
	
---------------------------------------------
--7 다른고객이 보고 있는 상품 3 
---------------------------------------------
	SELECT P1.*, B1.*
			, (SELECT COUNT(*) FROM VR_CONTENT V2 WITH(NOLOCK) INNER JOIN VR_MASTER VM WITH(NOLOCK) ON V2.VR_NO = VM.VR_NO WHERE P1.MASTER_CODE = V2.MASTER_CODE AND VM.VR_TYPE = 1) AS [VR_COUNT]
			, (SELECT COUNT(*) FROM PUB_EVENT_DATA A2 WITH(NOLOCK) INNER JOIN PUB_EVENT B2 WITH(NOLOCK) ON A2.EVT_SEQ = B2.EVT_SEQ WHERE B2.EVT_YN = 'Y' AND A2.SHOW_YN = 'Y' AND B2.SHOW_YN = 'Y' AND A2.MASTER_CODE = P1.MASTER_CODE AND B2.END_DATE >= GETDATE()) AS [EVENT_COUNT]
		FROM (

		SELECT TOP 5 A.MASTER_CODE, COUNT(*) NO FROM VIEW_MASTER A WITH(NOLOCK)
			INNER JOIN PKG_MASTER B WITH(NOLOCK)
				ON A.MASTER_CODE = B.MASTER_CODE	
			WHERE B.SHOW_YN ='Y' AND ATT_CODE <> '1'
			GROUP BY A.MASTER_CODE
			ORDER BY NO DESC		

		) A1
		INNER JOIN PKG_MASTER P1 WITH(NOLOCK) 
			ON P1.MASTER_CODE = A1.MASTER_CODE
		LEFT JOIN INF_FILE_MASTER B1 WITH(NOLOCK) 
			ON P1.MAIN_FILE_CODE = B1.FILE_CODE


END           

GO
