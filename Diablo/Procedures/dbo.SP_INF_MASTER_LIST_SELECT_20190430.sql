USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*================================================================================================================
■ USP_NAME					: SP_INF_MASTER_LIST_SELECT
■ DESCRIPTION				: 컨텐츠 리스트 검색
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			:   
■ EXEC						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2008-12-07		이규식			최초생성
   2009-05-08		김동수			페이징
   2012-03-02						WITH(NOLOCK) 추가
   2014-03-05						FN_ AIR_SPLIT_PARAMETER -> FN_SPLIT 으로 변경
   2016-08-03		김성호			CNT_TYPE 고정맵 타입 추가에 따른 수정 (APP 사용)
================================================================================================================*/ 

CREATE PROCEDURE [dbo].[SP_INF_MASTER_LIST_SELECT_20190430]
	@FLAG			char(1),
	@PAGE_SIZE		int	= 10,
	@PAGE_INDEX		int = 0,	
	@REGION_CODE	char(3),
	@NATION_CODE	char(2),
	@STATE_CODE		varchar(4),
	@CITY_CODE		char(3),
	@ATTRIBUTE_CODE	varchar(100),
	@TITLE			varchar(100),
	@CNT_TYPE		INT
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @SQLSTRING NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000),	@FROM INT,	@TO INT;
	SET @SQLSTRING = '';

	SET @FROM = @PAGE_INDEX * @PAGE_SIZE + 1;
	SET @TO = @PAGE_INDEX * @PAGE_SIZE + @PAGE_SIZE;

--	SET @FROM = ((@PAGE_INDEX - 1) * @PAGE_SIZE) + 1;
--	SET @TO = ((@PAGE_INDEX - 1) + 1) * @PAGE_SIZE
	
	IF (@TITLE <> '')
	BEGIN
	SET @SQLSTRING = @SQLSTRING + '
			AND KOR_TITLE LIKE ''%'' + @TITLE + ''%'''
	END
	IF(@REGION_CODE <> '' AND @REGION_CODE IS NOT NULL AND @REGION_CODE  <> '000')
	BEGIN
	SET @SQLSTRING = @SQLSTRING + ' 
			AND REGION_CODE = @REGION_CODE';
	END
	IF(@NATION_CODE <> '' AND @NATION_CODE IS NOT NULL AND @NATION_CODE  <> '00')
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' 
			AND NATION_CODE = @NATION_CODE';
	END
	IF(@STATE_CODE <> '' AND @STATE_CODE <> '0000' AND @STATE_CODE <> '000')
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' 
			AND STATE_CODE = @STATE_CODE';
	END
	IF(@CITY_CODE <> '' AND @CITY_CODE <> '000' AND @CITY_CODE IS NOT NULL)
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' 
				AND CITY_CODE = @CITY_CODE';
	END
				
	IF (@ATTRIBUTE_CODE <> '' AND @ATTRIBUTE_CODE IS NOT NULL )
		SET @SQLSTRING = @SQLSTRING + ' 
			AND A.CNT_CODE IN (SELECT CNT_CODE FROM INF_TYPE B WITH(NOLOCK) WHERE CNT_ATT_CODE IN 
				(SELECT Data FROM dbo.FN_SPLIT(@ATTRIBUTE_CODE,'','')))';	
				
	-- 고정맵항목은 제외
	IF (@CNT_TYPE = 0)
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' 
			AND A.CNT_TYPE < 9';
	END
	ELSE
	BEGIN
		SET @SQLSTRING = @SQLSTRING + ' 
			AND A.CNT_TYPE = @CNT_TYPE';
	END

	-- 검색된 데이타의 카운트를 돌려준다.
	IF @FLAG = 'C'
	BEGIN
			SET @SQLSTRING = N'
			SELECT 
				COUNT(*) AS COUNT
			FROM 
				INF_MASTER A WITH(NOLOCK)
			WHERE 1 = 1
				 --KOR_TITLE LIKE ''%'' + ISNULL(@TITLE, '''') + ''%''
			' + @SQLSTRING;
	END
	-- 검색된 데이타의 리스트를 돌려준다.
	ELSE IF @FLAG = 'L'
	BEGIN
		SET @SQLSTRING = N'WITH TMP_INF_MASTER AS (
				SELECT 
					ROW_NUMBER() OVER (ORDER BY CNT_CODE DESC) AS ROWNUMBER,
					CNT_CODE
				FROM 
					INF_MASTER A WITH(NOLOCK)
				WHERE 1 = 1
					--KOR_TITLE LIKE ''%'' + ISNULL(@TITLE, '''') + ''%''
				' + @SQLSTRING +
		')
		SELECT 
			*,
			(SELECT KOR_NAME FROM PUB_REGION B WITH(NOLOCK) WHERE B.REGION_CODE = A.REGION_CODE) AS REGION_NAME,
			(SELECT KOR_NAME FROM PUB_NATION B WITH(NOLOCK) WHERE B.NATION_CODE = A.NATION_CODE) AS NATION_NAME,
			(SELECT KOR_NAME FROM PUB_STATE B WITH(NOLOCK) WHERE B.STATE_CODE = A.STATE_CODE AND B.NATION_CODE = A.NATION_CODE) AS STATE_NAME,
			(SELECT KOR_NAME FROM PUB_CITY B WITH(NOLOCK) WHERE B.CITY_CODE = A.CITY_CODE) AS CITY_NAME,
			(SELECT KOR_NAME FROM EMP_MASTER B WITH(NOLOCK) WHERE B.EMP_CODE = A.NEW_CODE) AS NEW_NAME,
			(SELECT KOR_NAME FROM EMP_MASTER B WITH(NOLOCK) WHERE B.EMP_CODE = A.EDT_CODE) AS EDT_NAME,
			(SELECT TOP 1
				''/'' + B.REGION_CODE + ''/'' + B.NATION_CODE + ''/'' + 
				B.STATE_CODE + ''/'' + B.CITY_CODE + ''/IMAGE/'' + B.FILE_NAME_S
			FROM INF_FILE_MASTER B WITH(NOLOCK)
			INNER JOIN INF_FILE_MANAGER C WITH(NOLOCK) ON C.FILE_CODE = B.FILE_CODE
			WHERE C.CNT_CODE = A.CNT_CODE AND B.FILE_TYPE = 1
			ORDER BY SHOW_ORDER
			) AS IMAGE_NAME

		FROM 
			INF_MASTER A WITH(NOLOCK)
		WHERE
			A.CNT_CODE IN (
				SELECT 
					CNT_CODE
				FROM TMP_INF_MASTER
				WHERE ROWNUMBER BETWEEN @FROM AND @TO
				)
		ORDER BY CNT_CODE DESC
		';
	END
	--SELECT @SQLSTRING
	SET @PARMDEFINITION=N'@FROM INT, @TO INT, @REGION_CODE CHAR(3), @NATION_CODE CHAR(2), @STATE_CODE VARCHAR(4), @CITY_CODE CHAR(3), @ATTRIBUTE_CODE VARCHAR(100), @TITLE VARCHAR(100), @CNT_TYPE INT ';
	--PRINT @SQLSTRING + ' ' + @PARMDEFINITION
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @FROM, @TO, @REGION_CODE, @NATION_CODE, @STATE_CODE, @CITY_CODE, @ATTRIBUTE_CODE, @TITLE, @CNT_TYPE;
END

--EXEC SP_INF_MASTER_LIST_SELECT 'C', 10, 1, '340', 'AU','AUNW', 'SYD', '', '', 0
--EXEC SP_INF_MASTER_LIST_SELECT 'L', 10, 1, '340', 'AU','AUNW', 'SYD', '', '', 0
GO
