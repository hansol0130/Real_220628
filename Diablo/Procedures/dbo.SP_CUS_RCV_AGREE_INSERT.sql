USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*==================================================================================
	SQL.함수_이메일SMS수신동의_입력
====================================================================================
- SP 명 : SP_CUS_RCV_AGREE_INSERT
- 기 능 : SMS,이메일 수신동의 정보 입력
====================================================================================
	참고내용
====================================================================================
- 예제
EXEC SP_CUS_RCV_AGREE_INSERT 
	@CUS_NAME = '박형만', 
	@EMAIL = 'abc@verygoodtour.com', 
	@NOR_TEL1 = '010', 
	@NOR_TEL2 = '9185',  
	@NOR_TEL3= '2481',  
	@RCV_EMAIL_YN = 'Y',   -- N:수신거부  , Y:수신동의 , 빈값:갱신안함 
	@RCV_SMS_YN = 'N',    --  N:수신거부  , Y:수신동의 , 빈값:갱신안함 
	@AGREE_DATE = '2012-11-04 10:00:00',  -- 동의 , 거부 날짜
	@INFLOW_TYPE =  '12' -- 공항회원 

EXEC SP_CUS_RCV_AGREE_INSERT 
	@CUS_NAME = '', 
	@EMAIL = '', 
	@NOR_TEL1 = '010', 
	@NOR_TEL2 = '9185',  
	@NOR_TEL3= '2481',  
	@RCV_EMAIL_YN = '',   -- N:수신거부  , Y:수신동의 , 빈값:갱신안함 
	@RCV_SMS_YN = 'N',    --  N:수신거부  , Y:수신동의 , 빈값:갱신안함 
	@AGREE_DATE = GETDATe(),  -- 동의 , 거부 날짜
	@INFLOW_TYPE =  '90', -- 휴대폰으로 수신거부  
	@CUS_NO = 11524494 ,
	@EMP_CODE = '2013007' 

====================================================================================
	변경내역
====================================================================================
- 2012-11-02 박형만 신규 작성 
- 2014-02-28 박형만 EMAIL = CUS_NAME 버그 수정 
- 2015-09-04 정지용	휴면계정으로 인해 회원테이블 업데이트 분기
- 2019-03-12 박형만	INFLOW_TYPE = 90 -- 휴대폰으로 수신거부 
- 2019-03-18 박형만 검색된 회원 이름,휴대폰,이메일 수정안함 
===================================================================================*/
CREATE PROC [dbo].[SP_CUS_RCV_AGREE_INSERT] 
	@CUS_NAME	VARCHAR(20)	,--	성명
	@BIRTH_DAY	datetime = NULL , --생년월일 YYYYMMDD
	@GENDER		CHAR(1) = NULL ,  -- 성별 M-남자,F-여자
	@EMAIL	VARCHAR(100) = NULL ,--	이메일
	@NOR_TEL1	VARCHAR(6)	,--	핸드폰1
	@NOR_TEL2	VARCHAR(5)	,--	핸드폰2
	@NOR_TEL3	VARCHAR(4)	,--	핸드폰3
	@RCV_EMAIL_YN	CHAR(1)	,--	이메일수신동의여부  -- N:수신거부  , Y:수신동의 , 빈값:갱신안함 
	@RCV_SMS_YN		CHAR(1)	,--	휴대폰수신동의여부 -- N:수신거부  , Y:수신동의 , 빈값:갱신안함 
	@AGREE_DATE		datetime = NULL ,--	수신동의,거부날짜
	@INFLOW_TYPE	VARCHAR(2)	, --	유입구분
	@CUS_NO			INT = 0 ,-- 고객번호 (선택사항), CTI , 고객수정(마이페이지) 에서 필요 
	@EMP_CODE		EMP_CODE 
AS

--DECLARE 
--@CUS_NAME	VARCHAR(20)	,--	성명
--@BIRTH_DAY	datetime, --생년월일 YYYYMMDD
--@GENDER		CHAR(1) ,  -- 성별 M-남자,F-여자
--@EMAIL	VARCHAR(100)	,--	이메일
--@NOR_TEL1	VARCHAR(6)	,--	핸드폰1
--@NOR_TEL2	VARCHAR(5)	,--	핸드폰2
--@NOR_TEL3	VARCHAR(4)	,--	핸드폰3
--@RCV_EMAIL_YN	CHAR(1)	,--	이메일수신동의여부  -- N:수신거부  , Y:수신동의 , 빈값:갱신안함 
--@RCV_SMS_YN		CHAR(1)	,--	휴대폰수신동의여부 -- N:수신거부  , Y:수신동의 , 빈값:갱신안함 
--@AGREE_DATE		datetime	,--	수신동의,거부날짜
--@INFLOW_TYPE	VARCHAR(2)	, --	유입구분
--@CUS_NO			INT ,-- 고객번호 (선택사항), CTI , 고객수정(마이페이지) 에서 필요 
--@EMP_CODE		EMP_CODE 
----SELECT 
----@CUS_NAME = '박형만', 
----@EMAIL = 'jerryhm@naver.com', 
----@NOR_TEL1 = '010', 
----@NOR_TEL2 = '9185',  
----@NOR_TEL3= '2481',  
----@RCV_EMAIL_YN = 'Y',   -- N 수신거부  , Y 수신동의 
----@RCV_SMS_YN = 'Y',    --  N 수신거부
----@AGREE_DATE = '2012-11-07 10:00:00',  -- 동의 , 거부 날짜
----@INFLOW_TYPE =  '11' , -- cTI
----@CUS_NO =  4228549 

--select @CUS_NAME='',@BIRTH_DAY=NULL,@GENDER='',@EMAIL='angekj@daum.net',
--@NOR_TEL1='',@NOR_TEL2='',@NOR_TEL3='',@RCV_EMAIL_YN='Y',@RCV_SMS_YN='N',
--@AGREE_DATE='2012-04-26 00:00:00',@INFLOW_TYPE='12',@CUS_NO=0,@EMP_CODE=NULL

--정보가 있는지 없는지 체크 
--중복처리 기준 처리 
--1) 이름, 휴대폰번호가 같을 경우 최신정보로 덮어 쓰기
--2) 이름, 이메일주소가 같을 경우 최신정보로 덮어 쓰기                 
--3) 이메일주소가 같을 경우 최신정보로 덮어 쓰기

----------------------------------------
DECLARE @RCV_NO INT -- 기존 고객 번호 
DECLARE @TMP_CUS_NO INT 
DECLARE @TMP_CUS_ID VARCHAR(20)
----------------------------------------
-- 고객 번호 있을때 고객명 가져오기. CUS_MEMBER.CUS_CUSTOMER 의 고객명이 서로 틀린경우가 있기 때문
IF @CUS_NO > 0 
BEGIN
	--고객명은 CTI 가 아닐때만 갱신 
	--생년월일,성별은 변수값이 없을때만 갱신
	SELECT TOP 1 @CUS_NAME = ( CASE WHEN ISNULL(@INFLOW_TYPE,'') <> '11' THEN  CUS_NAME ELSE @CUS_NAME END )  , 
		@BIRTH_DAY = (CASE WHEN ISNULL(@BIRTH_DAY,'') = '' THEN BIRTHDAY ELSE @BIRTH_DAY END )  ,
		@GENDER = ( CASE WHEN ISNULL(@GENDER,'') = '' THEN GENDER  ELSE @GENDER   END )
	FROM CUS_CUSTOMER_DAMO WITH(NOLOCK)
	WHERE CUS_NO = @CUS_NO
END 

--SET @TMP_CUS_NO = 1 
-- [고객정보 체크시작]
IF (@TMP_CUS_NO  = 0 OR @TMP_CUS_NO IS NULL ) AND ISNULL(@CUS_NAME,'') <> ''
BEGIN
	-- 이름, 휴대폰 OR 이메일이 같을때
	SELECT TOP 1 @TMP_CUS_NO = CUS_NO , @TMP_CUS_ID = CUS_ID FROM 
	( 
		SELECT CUS_NO , CUS_ID , 
			CASE WHEN ISNULL(CUS_ID,'') <> '' THEN 1 ELSE 0 END IS_MEM ,  --1:정회원
			CASE WHEN (NOR_TEL1 = @NOR_TEL1 AND NOR_TEL2 = @NOR_TEL2 AND NOR_TEL3 = @NOR_TEL3) THEN 1 
				WHEN EMAIL = @EMAIL THEN 2 
			END AS DUP_ORDER , 
			CASE WHEN (NOR_TEL1 = @NOR_TEL1 AND NOR_TEL2 = @NOR_TEL2 AND NOR_TEL3 = @NOR_TEL3) THEN SMS_AGREE_DATE 
				WHEN EMAIL = @EMAIL THEN  EMAIL_AGREE_DATE 
			END AS AGREE_DATE 
		FROM CUS_CUSTOMER_DAMO WITH(NOLOCK)
		WHERE CUS_NAME = @CUS_NAME 
		AND ((NOR_TEL1 = @NOR_TEL1 AND NOR_TEL2 = @NOR_TEL2 AND NOR_TEL3 = @NOR_TEL3) 
			OR EMAIL = @EMAIL )
	) AS TBL
	ORDER BY IS_MEM DESC, TBL.DUP_ORDER , TBL.AGREE_DATE DESC --정회원우선순, [휴대폰,이메일] 순 , 최근동의순 
END
IF @TMP_CUS_NO IS NULL AND ISNULL(@EMAIL,'') <> ''
BEGIN
	-- 이메일주소만 같을때
	SELECT TOP 1 @TMP_CUS_NO = CUS_NO , @TMP_CUS_ID = CUS_ID FROM
	(
		SELECT CUS_NO , CUS_ID , EMAIL_AGREE_DATE  ,
			CASE WHEN ISNULL(CUS_ID,'') <> '' THEN 1 ELSE 0 END IS_MEM
		FROM CUS_CUSTOMER_DAMO WITH(NOLOCK)
		WHERE EMAIL = @EMAIL
	) AS TBL
	ORDER BY IS_MEM DESC , EMAIL_AGREE_DATE DESC  --정회원우선순 , 최근동의순 
END 
-- [고객정보 체크종료]
----------------------------------------
-- [기존동의정보 체크시작]
IF @RCV_NO IS NULL 
BEGIN
	-- 이름, 휴대폰 OR 이메일이 같을때
	SELECT TOP 1 @RCV_NO = RCV_NO	FROM ( 
		SELECT RCV_NO ,
			CASE WHEN (NOR_TEL1 = @NOR_TEL1 AND NOR_TEL2 = @NOR_TEL2 AND NOR_TEL3 = @NOR_TEL3) THEN 1 
				WHEN EMAIL = @EMAIL THEN 2 
			END AS DUP_ORDER , 
			CASE WHEN (NOR_TEL1 = @NOR_TEL1 AND NOR_TEL2 = @NOR_TEL2 AND NOR_TEL3 = @NOR_TEL3) THEN SMS_AGREE_DATE 
				WHEN EMAIL = @EMAIL THEN  EMAIL_AGREE_DATE 
			END AS AGREE_DATE 
		FROM CUS_RCV_AGREE WITH(NOLOCK)
		WHERE CUS_NAME = @CUS_NAME 
		AND ((NOR_TEL1 = @NOR_TEL1 AND NOR_TEL2 = @NOR_TEL2 AND NOR_TEL3 = @NOR_TEL3) 
			OR EMAIL = @EMAIL )
	) AS TBL
	ORDER BY TBL.DUP_ORDER , TBL.AGREE_DATE DESC 
END
IF @RCV_NO IS NULL 
BEGIN
	IF ISNULL(@EMAIL,'') <> '' AND ISNULL(@EMAIL,'') <> '@'
	BEGIN
		-- 이메일주소만 같을때
		SELECT TOP 1 @RCV_NO = RCV_NO FROM CUS_RCV_AGREE WITH(NOLOCK)
		WHERE EMAIL = @EMAIL
		ORDER BY EMAIL_AGREE_DATE DESC 
	END 
END 
-- [기존동의정보 체크끝]
----------------------------------------

IF( @AGREE_DATE IS NULL )
BEGIN
	SET @AGREE_DATE = GETDATE() 
END 

--EMAIL,SMS 각각의 동의일, 각각의 유입경로 
DECLARE @EMAIL_AGREE_DATE DATETIME ,
		@SMS_AGREE_DATE DATETIME ,
		@EMAIL_INFLOW_TYPE VARCHAR(2),
		@SMS_INFLOW_TYPE VARCHAR(2)
---- 수신정보가 Y , N 으로 입력 된것만 갱신 . 빈값은 갱신 안함
--SET @EMAIL_AGREE_DATE = CASE WHEN  @RCV_EMAIL_YN IN ('Y','N') THEN @AGREE_DATE ELSE NULL END 
--SET @SMS_AGREE_DATE = CASE WHEN  @RCV_SMS_YN IN ('Y','N') THEN @AGREE_DATE ELSE NULL END  
--SET @EMAIL_INFLOW_TYPE = CASE WHEN  @RCV_EMAIL_YN  IN ('Y','N') THEN @INFLOW_TYPE ELSE NULL END   
--SET @SMS_INFLOW_TYPE = CASE WHEN  @RCV_SMS_YN IN ('Y','N') THEN @INFLOW_TYPE ELSE NULL END  
SET @EMAIL_AGREE_DATE = @AGREE_DATE 
SET @SMS_AGREE_DATE = @AGREE_DATE
SET @EMAIL_INFLOW_TYPE = @INFLOW_TYPE
SET @SMS_INFLOW_TYPE = @INFLOW_TYPE
----------------------------------------
-- [신규 등록] (기존동의정보 없음)
IF @RCV_NO IS NULL 
BEGIN
	-- *최신동의정보 입력 . 빈값일때는 N 으로 들어가도록 
	INSERT INTO CUS_RCV_AGREE(CUS_NO,CUS_ID,CUS_NAME,BIRTH_DAY,GENDER,EMAIL,NOR_TEL1,NOR_TEL2,NOR_TEL3,
		RCV_EMAIL_YN,RCV_SMS_YN,
		EMAIL_AGREE_DATE,SMS_AGREE_DATE,
		EMAIL_INFLOW_TYPE,SMS_INFLOW_TYPE,NEW_DATE)
	VALUES ( @TMP_CUS_NO , @TMP_CUS_ID , @CUS_NAME,@BIRTH_DAY,@GENDER,@EMAIL,@NOR_TEL1,@NOR_TEL2,@NOR_TEL3,
		CASE WHEN ISNULL(@RCV_EMAIL_YN,'') = '' THEN 'N' ELSE @RCV_EMAIL_YN END,
		CASE WHEN ISNULL(@RCV_SMS_YN,'') = '' THEN 'N' ELSE @RCV_SMS_YN END,
		CASE WHEN ISNULL(@RCV_EMAIL_YN,'') = '' THEN NULL ELSE @EMAIL_AGREE_DATE END ,
		CASE WHEN ISNULL(@RCV_SMS_YN,'') = '' THEN  NULL ELSE @SMS_AGREE_DATE END ,
		CASE WHEN ISNULL(@RCV_EMAIL_YN,'') = '' THEN NULL ELSE @EMAIL_INFLOW_TYPE END ,
		CASE WHEN ISNULL(@RCV_SMS_YN,'') = '' THEN NULL ELSE @SMS_INFLOW_TYPE END ,
		GETDATE() ) 
	
	SET @RCV_NO = @@IDENTITY

	-- *동의정보 이력 입력 
	INSERT INTO CUS_RCV_AGREE_HISTORY (RCV_NO,CUS_NO,CUS_ID,CUS_NAME,BIRTH_DAY,GENDER,EMAIL,NOR_TEL1,NOR_TEL2,NOR_TEL3,
		RCV_EMAIL_YN,RCV_SMS_YN,AGREE_DATE,INFLOW_TYPE,NEW_DATE)
	VALUES ( @RCV_NO,@TMP_CUS_NO,@TMP_CUS_ID,@CUS_NAME,@BIRTH_DAY,@GENDER,@EMAIL,@NOR_TEL1,@NOR_TEL2,@NOR_TEL3,
		@RCV_EMAIL_YN,@RCV_SMS_YN,@AGREE_DATE,@INFLOW_TYPE,GETDATE()
	)

END 
 -- [정보 갱신] (기존동의정보 있음)
ELSE IF @RCV_NO IS NOT NULL AND @RCV_NO > 0 
BEGIN 
	-- *동의 정보 갱신
	-- 각 변수에 정보가 있는것만 갱신
	UPDATE CUS_RCV_AGREE 
	SET CUS_NAME = CASE WHEN ISNULL(@CUS_NAME,'') = '' THEN CUS_NAME ELSE @CUS_NAME END ,
		EMAIL = CASE WHEN ISNULL(@EMAIL,'') = '' THEN EMAIL ELSE @EMAIL END ,
		NOR_TEL1 = CASE WHEN ISNULL(@NOR_TEL1,'') = '' THEN NOR_TEL1 ELSE @NOR_TEL1 END ,
		NOR_TEL2 = CASE WHEN ISNULL(@NOR_TEL2,'') = '' THEN NOR_TEL2 ELSE @NOR_TEL2 END ,
		NOR_TEL3 = CASE WHEN ISNULL(@NOR_TEL3,'') = '' THEN NOR_TEL3 ELSE @NOR_TEL3 END ,
		
		RCV_EMAIL_YN = CASE WHEN ISNULL(@RCV_EMAIL_YN,'') = '' THEN RCV_EMAIL_YN ELSE @RCV_EMAIL_YN END ,
		RCV_SMS_YN = CASE WHEN ISNULL(@RCV_SMS_YN,'') = '' THEN RCV_SMS_YN ELSE @RCV_SMS_YN END ,
		EMAIL_AGREE_DATE = CASE WHEN ISNULL(@RCV_EMAIL_YN,'') = '' THEN EMAIL_AGREE_DATE ELSE @EMAIL_AGREE_DATE END ,
		SMS_AGREE_DATE = CASE WHEN ISNULL(@RCV_SMS_YN,'') = '' THEN SMS_AGREE_DATE ELSE @SMS_AGREE_DATE END ,
		EMAIL_INFLOW_TYPE = CASE WHEN ISNULL(@RCV_EMAIL_YN,'') = '' THEN EMAIL_INFLOW_TYPE ELSE @EMAIL_INFLOW_TYPE END ,
		SMS_INFLOW_TYPE = CASE WHEN ISNULL(@RCV_SMS_YN,'') = ''  THEN SMS_INFLOW_TYPE ELSE @SMS_INFLOW_TYPE END ,
		/*
		RCV_EMAIL_YN = @RCV_EMAIL_YN,
		RCV_SMS_YN = @RCV_SMS_YN,
		EMAIL_AGREE_DATE = CASE WHEN ISNULL(@RCV_EMAIL_YN,'N') = 'N' THEN EMAIL_AGREE_DATE ELSE @EMAIL_AGREE_DATE END ,
		SMS_AGREE_DATE = CASE WHEN ISNULL(@RCV_SMS_YN,'N') = 'N' THEN SMS_AGREE_DATE ELSE @SMS_AGREE_DATE END ,
		EMAIL_INFLOW_TYPE = CASE WHEN ISNULL(@RCV_EMAIL_YN,'N') = 'N' THEN EMAIL_INFLOW_TYPE ELSE @EMAIL_INFLOW_TYPE END ,
		SMS_INFLOW_TYPE = CASE WHEN ISNULL(@RCV_SMS_YN,'N') = 'N'  THEN SMS_INFLOW_TYPE ELSE @SMS_INFLOW_TYPE END ,
		*/
		BIRTH_DAY = CASE WHEN ISNULL(@BIRTH_DAY,'') = '' THEN BIRTH_DAY ELSE @BIRTH_DAY END ,
		GENDER = CASE WHEN ISNULL(@GENDER,'') = '' THEN GENDER ELSE @GENDER END ,
		EDT_DATE = GETDATE() , 
		CUS_NO = @TMP_CUS_NO ,
		CUS_ID = @TMP_CUS_ID 
	WHERE RCV_NO  = @RCV_NO
		
	-- *동의정보 이력 입력 
	INSERT INTO CUS_RCV_AGREE_HISTORY (RCV_NO,CUS_NO,CUS_ID,CUS_NAME,BIRTH_DAY,GENDER,EMAIL,NOR_TEL1,NOR_TEL2,NOR_TEL3,
		RCV_EMAIL_YN,RCV_SMS_YN,AGREE_DATE,INFLOW_TYPE,NEW_DATE)
	VALUES ( @RCV_NO,@TMP_CUS_NO,@TMP_CUS_ID,@CUS_NAME,@BIRTH_DAY,@GENDER,@EMAIL,@NOR_TEL1,@NOR_TEL2,@NOR_TEL3,
		@RCV_EMAIL_YN,@RCV_SMS_YN,@AGREE_DATE,@INFLOW_TYPE,GETDATE()
	)
END 

-- CTI 로 수신동의 된 고객일땐 
-- 휴대폰번호로 수신거부 된 고객일경우 
IF( @INFLOW_TYPE ='11' OR  @INFLOW_TYPE ='90') 
BEGIN

	-- HISTORY 넣기 
	-- 기록남기기 
	EXEC XP_CUS_CUSTOMER_HISTORY_INSERT  
		@CUS_NO = @CUS_NO, 
		--@CUS_NAME = @CUS_NAME,
		
		--@NOR_TEL1 = @NOR_TEL1,
		--@NOR_TEL2 = @NOR_TEL2,
		--@NOR_TEL3 = @NOR_TEL3,

		@RCV_SMS_YN = @RCV_SMS_YN,

		@EMP_CODE = @EMP_CODE , 
		@EDT_REMARK = '동의변경' , 
		@EDT_TYPE  = 8 --'동의변경' , 
		

	--고객번호 찾기 
	--해당 고객의 고객정보 업데이트 
	--각각의 수신동의가 Y,N 일때만 업데이트
	UPDATE CUS_CUSTOMER_damo
	SET RCV_EMAIL_YN = CASE WHEN ISNULL(@RCV_EMAIL_YN,'') = '' THEN RCV_EMAIL_YN ELSE @RCV_EMAIL_YN END ,
		RCV_SMS_YN = CASE WHEN ISNULL(@RCV_SMS_YN,'') = '' THEN RCV_SMS_YN ELSE @RCV_SMS_YN END ,
		EMAIL_AGREE_DATE = CASE WHEN ISNULL(@RCV_EMAIL_YN,'') = '' THEN EMAIL_AGREE_DATE ELSE @EMAIL_AGREE_DATE END ,
		SMS_AGREE_DATE = CASE WHEN ISNULL(@RCV_SMS_YN,'') = '' THEN SMS_AGREE_DATE ELSE @SMS_AGREE_DATE END ,
		EMAIL_INFLOW_TYPE = CASE WHEN ISNULL(@RCV_EMAIL_YN,'') = '' THEN EMAIL_INFLOW_TYPE ELSE @EMAIL_INFLOW_TYPE END ,
		SMS_INFLOW_TYPE = CASE WHEN ISNULL(@RCV_SMS_YN,'') = ''  THEN SMS_INFLOW_TYPE ELSE @SMS_INFLOW_TYPE END ,
		--NOR_TEL1 =CASE WHEN ISNULL(@NOR_TEL1 ,'') = '' THEN NOR_TEL1  ELSE  @NOR_TEL1 END ,
		--NOR_TEL2 =CASE WHEN ISNULL(@NOR_TEL2 ,'') = '' THEN NOR_TEL2  ELSE  @NOR_TEL2 END ,
		--NOR_TEL3 =CASE WHEN ISNULL(@NOR_TEL3 ,'') = '' THEN NOR_TEL3  ELSE  @NOR_TEL3 END ,
		EMAIL =CASE WHEN ISNULL(@EMAIL ,'') = '' THEN EMAIL  ELSE  @EMAIL END ,
		RCV_EMP_CODE = CASE WHEN ISNULL(@EMP_CODE ,'') = '' THEN RCV_EMP_CODE ELSE @EMP_CODE END , -- 처리자 수정 

		--CUS_NAME = CASE WHEN ISNULL(@CUS_NAME ,'') = '' THEN CUS_NAME  ELSE  @CUS_NAME END,  --  회원정보에 이름 업데이트 
		EDT_DATE = GETDATe() 
		
	WHERE CUS_NO = @CUS_NO 

	IF EXISTS(SELECT 1 FROM Diablo.dbo.CUS_MEMBER WITH(NOLOCK) WHERE CUS_NO = @CUS_NO AND CUS_ID IS NULL)
	BEGIN
		UPDATE CUS_MEMBER_SLEEP
		SET RCV_EMAIL_YN = CASE WHEN ISNULL(@RCV_EMAIL_YN,'') <> '' THEN @RCV_EMAIL_YN ELSE RCV_EMAIL_YN END 
			, RCV_SMS_YN = CASE WHEN ISNULL(@RCV_SMS_YN,'') <> '' THEN @RCV_SMS_YN  ELSE RCV_SMS_YN END 
		WHERE CUS_NO = @CUS_NO 
	END
	ELSE
	BEGIN
		UPDATE CUS_MEMBER
		SET RCV_EMAIL_YN = CASE WHEN ISNULL(@RCV_EMAIL_YN,'') <> '' THEN @RCV_EMAIL_YN ELSE RCV_EMAIL_YN END 
			, RCV_SMS_YN = CASE WHEN ISNULL(@RCV_SMS_YN,'') <> '' THEN @RCV_SMS_YN  ELSE RCV_SMS_YN END 
		WHERE CUS_NO = @CUS_NO 
	END
END 
GO
