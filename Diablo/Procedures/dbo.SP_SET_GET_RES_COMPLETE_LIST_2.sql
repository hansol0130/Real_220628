USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






-- =============================================
-- Author:		이규식
-- Create date: 2009-11-16
-- Description:	예약자별 수익현황
-- =============================================
CREATE PROCEDURE [dbo].[SP_SET_GET_RES_COMPLETE_LIST_2]
(
	@DATE_TYPE	INT,
	@START_DATE	DATETIME,
	@END_DATE	DATETIME,
	@REGION	CHAR(1),
	@CITY_CODE	CHAR(3),
	@ATTRIBUTE	CHAR(1),
	@TEAM_CODE	VARCHAR(3),
	@EMP_CODE	VARCHAR(7),
	@ORDER	INT,
	@NATION_CODE	VARCHAR(30)	-- 국가 검색때문에 같이 들어감
)
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	SET NOCOUNT ON
	DECLARE @SQLSTRING NVARCHAR(4000)
	DECLARE @PARMDEFINITION NVARCHAR(1000)
	DECLARE @PRO_CODE VARCHAR(20)
	DECLARE @DEP_DATE DATETIME

	DECLARE @TEMP_TABLE  TABLE 
	(
		PRO_CODE	VARCHAR(20),
		PRO_TYPE	INT,
		RES_CODE	VARCHAR(20),
		SEQ_NO		INT,
		CUS_NAME	VARCHAR(40), 
		LAST_NAME	VARCHAR(20),
		FIRST_NAME	VARCHAR(20),
		AGE_TYPE	INT,
		GENDER		CHAR(1),
		SALE_PRICE	MONEY,
		RES_STATE	INT,
		PROFIT_EMP_CODE VARCHAR(10),
		PROFIT_TEAM_CODE VARCHAR(10),
		PROFIT_TEAM_NAME VARCHAR(50),
		PERSON_PRICE	MONEY,
		PERSON_PROFIT	MONEY,
		PERSON_ETC_PRICE	MONEY,
		AIR_PROFIT	MONEY,
		AIR_PRICE	MONEY,
		AIR_SALE_PRICE	MONEY,
		GROUP_PRICE	MONEY,
		GROUP_PROFIT	MONEY,
		AGENT_COM_PRICE	MONEY,
		PAY_COM_PRICE	MONEY,
		AIR_ETC_PROFIT	MONEY,
		AIR_ETC_PRICE	MONEY,
		AIR_ETC_COM_PRICE	MONEY,
		AIR_ETC_COM_PROFIT	MONEY,
		LAND_COM_PRICE	MONEY,
		LAND_PRICE	MONEY,
		IS_PROFIT CHAR(1)
	);

	SET @SQLSTRING =
		N'SELECT 
		A.PRO_CODE, A.DEP_DATE
		FROM SET_MASTER A  WITH (NOLOCK) 
		INNER JOIN PKG_DETAIL B WITH (NOLOCK) ON B.PRO_CODE = A.PRO_CODE
		INNER JOIN VIEW_PRO_MASTER C WITH (NOLOCK) ON C.MASTER_CODE = B.MASTER_CODE
		WHERE 1 =1 '
	
	-- DATE_TYPE(0 출발일, 1 - 도착일)
	IF (@DATE_TYPE = 1) 
	BEGIN
		SET @SQLSTRING =  @SQLSTRING + ' AND A.ARR_DATE >= @START_DATE AND A.ARR_DATE < @END_DATE + 1 ' 
	END
	ELSE
	BEGIN
		SET @SQLSTRING =  @SQLSTRING + ' AND A.DEP_DATE >= @START_DATE AND A.DEP_DATE < @END_DATE + 1 ' 
	END

	-- 속성코드
	IF (ISNULL(@ATTRIBUTE, '') <> '')
	BEGIN
		SET @SQLSTRING =  @SQLSTRING + ' AND C.ATT_CODE = @ATTRIBUTE ' 
	END

	-- 지역코드
	IF (ISNULL(@REGION, '') <> '')
	BEGIN
		SET @SQLSTRING =  @SQLSTRING + ' AND C.SIGN_CODE = @REGION ' 
	END

	-- 도시코드
	IF (ISNULL(@CITY_CODE, '') <> '')
	BEGIN
		SET @SQLSTRING =  @SQLSTRING + ' AND EXISTS (SELECT CITY_CODE FROM PKG_DETAIL_SCH_CITY Z WHERE Z.PRO_CODE = A.PRO_CODE AND CITY_CODE = @CITY_CODE ' 
	END

	-- 팀코드
	IF (ISNULL(@TEAM_CODE, '') <> '')
	BEGIN
		SET @SQLSTRING =  @SQLSTRING + ' AND EXISTS (SELECT * FROM RES_MASTER_damo Z WHERE Z.PRO_CODE = A.PRO_CODE AND Z.RES_STATE <= 7 ' +
			'AND Z.PROFIT_TEAM_CODE = @TEAM_CODE) '
	END

	SET @SQLSTRING =   'DECLARE USER_CURSOR2 CURSOR FOR ' + @SQLSTRING + ' AND DBO.FN_SET_GET_PRO_COUNT(A.PRO_CODE) > 0 ' 

	SET @PARMDEFINITION = N'@DATE_TYPE	INT,@START_DATE	DATETIME,@END_DATE	DATETIME,@REGION	CHAR(1),@CITY_CODE	CHAR(3),@ATTRIBUTE	CHAR(1), @TEAM_CODE VARCHAR(4)';

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @DATE_TYPE,	@START_DATE	,@END_DATE, @REGION, @CITY_CODE, @ATTRIBUTE, @TEAM_CODE;
	
	OPEN USER_CURSOR2 
	FETCH NEXT FROM USER_CURSOR2 INTO @PRO_CODE, @DEP_DATE

	WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO @TEMP_TABLE
		SELECT * FROM DBO.FN_SET_GET_PRO_COMPLETE(@PRO_CODE)

		FETCH NEXT FROM USER_CURSOR2 INTO @PRO_CODE, @DEP_DATE
	END

	CLOSE USER_CURSOR2
	DEALLOCATE USER_CURSOR2


	SELECT 
		A.PRO_CODE,
		A.PRO_TYPE,
		A.RES_CODE,
		B.PRO_NAME,
		B.DEP_DATE,
		(SELECT KOR_NAME FROM PUB_REGION Z WHERE Z.SIGN = C.SIGN_CODE) AS REGION_NAME,
		DBO.FN_RES_GET_RES_COUNT(A.RES_CODE) AS RES_COUNT,
		SUM(ISNULL(SALE_PRICE, 0)) AS SALE_PRICE,
		PROFIT_EMP_CODE,
		PROFIT_TEAM_CODE,
		PROFIT_TEAM_NAME,
		(SELECT KOR_NAME FROM EMP_MASTER WHERE EMP_CODE = PROFIT_EMP_CODE) AS PROFIT_EMP_NAME,
		SUM(ISNULL(PERSON_PRICE, 0)) AS PERSON_PRICE,
		SUM(ISNULL(PERSON_PROFIT, 0)) AS PERSON_PROFIT,
		SUM(ISNULL(PERSON_ETC_PRICE, 0)) AS PERSON_ETC_PRICE,
		SUM(ISNULL(AIR_PROFIT, 0)) AS AIR_PROFIT,
		SUM(ISNULL(AIR_PRICE, 0)) AS AIR_PRICE,
		SUM(ISNULL(AIR_SALE_PRICE, 0)) AS AIR_SALE_PRICE,
		SUM(ISNULL(GROUP_PRICE, 0)) AS GROUP_PRICE,
		SUM(ISNULL(GROUP_PROFIT, 0)) AS GROUP_PROFIT,
		SUM(ISNULL(AGENT_COM_PRICE, 0)) AS AGENT_COM_PRICE,
		SUM(ISNULL(PAY_COM_PRICE, 0)) AS PAY_COM_PRICE,
		SUM(ISNULL(AIR_ETC_PROFIT, 0)) AS AIR_ETC_PROFIT,
		SUM(ISNULL(AIR_ETC_PRICE, 0)) AS AIR_ETC_PRICE,
		SUM(ISNULL(AIR_ETC_COM_PRICE, 0)) AS AIR_ETC_COM_PRICE,
		SUM(ISNULL(AIR_ETC_COM_PROFIT, 0)) AS AIR_ETC_COM_PROFIT,
		SUM(ISNULL(LAND_COM_PRICE, 0)) AS LAND_COM_PRICE,
		SUM(ISNULL(LAND_PRICE, 0)) AS LAND_PRICE,
		IS_PROFIT
	FROM @TEMP_TABLE A
	INNER JOIN PKG_DETAIL B WITH(NOLOCK) ON B.PRO_CODE = A.PRO_CODE
	INNER JOIN VIEW_PRO_MASTER C WITH (NOLOCK) ON C.MASTER_CODE= B.MASTER_CODE
	WHERE 1 = 1 
	AND CASE WHEN ISNULL(@TEAM_CODE, '') <> '' THEN A.PROFIT_TEAM_CODE  ELSE ISNULL(@TEAM_CODE, '') END  = ISNULL(@TEAM_CODE, '')
	AND CASE WHEN ISNULL(@EMP_CODE, '') <> '' THEN A.PROFIT_EMP_CODE ELSE ISNULL(@EMP_CODE , '') END = ISNULL(@EMP_CODE , '')
	GROUP BY 
		A.PRO_CODE,
		A.PRO_TYPE,
		A.RES_CODE,
		B.PRO_NAME,
		B.DEP_DATE,
		C.SIGN_CODE,
		A.PROFIT_EMP_CODE,
		A.PROFIT_TEAM_CODE,
		A.PROFIT_TEAM_NAME,
		A.IS_PROFIT
	ORDER BY 
		CASE WHEN @ORDER = 0 THEN C.SIGN_CODE ELSE PROFIT_TEAM_NAME END , B.DEP_DATE

	SET NOCOUNT OFF
END







GO
