USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*================================================================================================================
■ USP_NAME					: XP_LAND_PAY_INSERT_SELECT
■ DESCRIPTION				: 랜드사 지상비 입력
■ INPUT PARAMETER			: 
■ OUTPUT PARAMETER			: 
■ EXEC						: 

	EXEC DBO.XP_LAND_PAY_INSERT_SELECT 'CPP317-131204', '92794', 0, 500000, 0, 500000, 500000, 0, 0, 3, 0, 0, '', 'L130142', 0

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2013-09-01		이규식			최초생성    
   2014-01-09		박형만			SET_LAND_AGENT.@FOREIGN_PRICE,@@KOREAN_PRICE 에 개별 금액 들어가도록 , @FOC_COUNT 금액나누기에서 제외 
   2014-01-13		박형만			금액 버그 수정
   2014-04-09		김성호			신규 스키마에 맞춰 수정
   2015-01-22		김성호			PAY_PRICE 형 변환 (INT -> DECIMAL(12,2)
================================================================================================================*/ 
 CREATE PROCEDURE [dbo].[XP_LAND_PAY_INSERT_SELECT] 
 ( 
	@LAND_SEQ_NO	INT OUTPUT,
	@PRO_CODE	VARCHAR(20), 
	@AGT_CODE	VARCHAR(10),
	@CUR_TYPE	INT, 
	--@PAY_PRICE	INT, 
	@PAY_PRICE	DECIMAL(12,2),
	@FOC_COUNT	INT, 
	@FOREIGN_PRICE	MONEY,  --총금액
	@KOREAN_PRICE	MONEY,  --총금액
	@EXC_RATE	DECIMAL(8,2), 
	@VAT_PRICE	MONEY, 
	@RES_COUNT	INT, 
	@COM_RATE	NUMERIC(5,2), 
	@COM_PRICE	INT, 
	@REMARK		VARCHAR(300), 
	@NEW_CODE	CHAR(7),
	@XML		XML
) 
AS 
BEGIN

	IF NOT EXISTS(SELECT 1 FROM SET_MASTER WHERE PRO_CODE = @PRO_CODE)
	BEGIN
		SET @LAND_SEQ_NO = -1
	END
	ELSE
	BEGIN
		SELECT @LAND_SEQ_NO = ISNULL(MAX(LAND_SEQ_NO) + 1, 1) FROM SET_LAND_AGENT WHERE PRO_CODE = @PRO_CODE

		DECLARE @PERSON_FOREIGN MONEY
		DECLARE @PERSON_KOREAN MONEY
		DECLARE @PERSON_VAT MONEY
		DECLARE @PERSON_COMM MONEY
		DECLARE @PERSON_PAY MONEY

		--SET @PERSON_FOREIGN = @FOREIGN_PRICE * @RES_COUNT / (@RES_COUNT + @FOC_COUNT)
		SET @PERSON_FOREIGN = @FOREIGN_PRICE  / (@RES_COUNT) -- + @FOC_COUNT)
		SET @PERSON_KOREAN =  @KOREAN_PRICE / (@RES_COUNT)
		--SET @PERSON_VAT = @VAT_PRICE * @RES_COUNT / (@RES_COUNT + @FOC_COUNT)
		SET @PERSON_VAT = @VAT_PRICE / (@RES_COUNT) -- + @FOC_COUNT)
		SET @PERSON_COMM = @PERSON_KOREAN * @COM_RATE / 100
		SET @PERSON_PAY = @PERSON_KOREAN + @PERSON_VAT

		-- 정산 지상비 등록
		INSERT INTO SET_LAND_AGENT(
			PRO_CODE, LAND_SEQ_NO, AGT_CODE, CUR_TYPE, PAY_PRICE, FOC_COUNT, FOREIGN_PRICE, KOREAN_PRICE, EXC_RATE, VAT_PRICE, RES_COUNT, COM_RATE, COM_PRICE, REMARK, NEW_CODE)
		VALUES (
			@PRO_CODE, @LAND_SEQ_NO, @AGT_CODE, @CUR_TYPE, @PAY_PRICE, @FOC_COUNT, @PERSON_FOREIGN, @PERSON_KOREAN, @EXC_RATE, @VAT_PRICE, @RES_COUNT, @COM_RATE, @COM_PRICE, @REMARK, @NEW_CODE
		);

		-- 정산 고객 등록
		INSERT INTO SET_LAND_CUSTOMER (
			PRO_CODE, LAND_SEQ_NO, 
			RES_CODE, RES_SEQ_NO, 
			CUR_TYPE, FOREIGN_PRICE, KOREAN_PRICE, EXC_RATE, VAT_PRICE, COM_RATE, COM_PRICE, PAY_PRICE, NEW_CODE
		)
		SELECT
			@PRO_CODE, @LAND_SEQ_NO, 
			B.RES_CODE, B.SEQ_NO,
			@CUR_TYPE, @PERSON_FOREIGN, @PERSON_KOREAN, @EXC_RATE, @PERSON_VAT, @COM_RATE, @PERSON_COMM, @PERSON_PAY, @NEW_CODE
		FROM (
			SELECT
				t1.col.value('./ArrangeCode[1]', 'varchar(12)') as [ArrangeCode],
				t1.col.value('./CustomerSeqNo[1]', 'int') as [CustomerSeqNo]
			FROM @xml.nodes('/ArrayOfArrangeCustomerRQ/ArrangeCustomerRQ') as t1(col)
		) A
		INNER JOIN ARG_CUSTOMER B ON A.ArrangeCode = B.ARG_CODE AND A.CustomerSeqNo = B.CUS_SEQ_NO

	END
END 

/*

 ALTER PROCEDURE [dbo].[XP_LAND_PAY_INSERT_SELECT] 
 ( 
	@PRO_CODE	VARCHAR(20), 
	@AGT_CODE	VARCHAR(10),
	@CUR_TYPE	INT, 
	@PAY_PRICE	INT, 
	@FOC_COUNT	INT, 
	@FOREIGN_PRICE	MONEY,  --총금액
	@KOREAN_PRICE	MONEY,  --총금액
	@EXC_RATE	DECIMAL(8,2), 
	@VAT_PRICE	MONEY, 
	@RES_COUNT	INT, 
	@COM_RATE	NUMERIC(5,2), 
	@COM_PRICE	INT, 
	@REMARK		VARCHAR(300), 
	@NEW_CODE	CHAR(7),
	@LAND_SEQ_NO	INT OUTPUT
) 
AS 
BEGIN 
	
	IF (SELECT COUNT(*) FROM SET_MASTER WHERE PRO_CODE = @PRO_CODE) < 1
		BEGIN
			SET @LAND_SEQ_NO = -1
		END
	ELSE
		BEGIN
			SELECT @LAND_SEQ_NO = ISNULL(MAX(LAND_SEQ_NO) + 1, 1) FROM SET_LAND_AGENT WHERE PRO_CODE = @PRO_CODE

			DECLARE @PERSON_FOREIGN MONEY
			DECLARE @PERSON_KOREAN MONEY
			DECLARE @PERSON_VAT MONEY
			DECLARE @PERSON_COMM MONEY
			DECLARE @PERSON_PAY MONEY

			--SET @PERSON_FOREIGN = @FOREIGN_PRICE * @RES_COUNT / (@RES_COUNT + @FOC_COUNT)
			SET @PERSON_FOREIGN = @FOREIGN_PRICE  / (@RES_COUNT) -- + @FOC_COUNT)
			SET @PERSON_KOREAN =  @KOREAN_PRICE / (@RES_COUNT)
			--SET @PERSON_VAT = @VAT_PRICE * @RES_COUNT / (@RES_COUNT + @FOC_COUNT)
			SET @PERSON_VAT = @VAT_PRICE / (@RES_COUNT) -- + @FOC_COUNT)
			SET @PERSON_COMM = @PERSON_KOREAN * @COM_RATE / 100
			SET @PERSON_PAY = @PERSON_KOREAN + @PERSON_VAT

			INSERT INTO SET_LAND_AGENT(PRO_CODE, LAND_SEQ_NO, AGT_CODE, CUR_TYPE, 
			PAY_PRICE, FOC_COUNT, FOREIGN_PRICE, KOREAN_PRICE, EXC_RATE, VAT_PRICE, RES_COUNT, COM_RATE, COM_PRICE, 
			REMARK, NEW_CODE)
			VALUES (@PRO_CODE, @LAND_SEQ_NO, @AGT_CODE, @CUR_TYPE, 
			@PAY_PRICE, @FOC_COUNT, @PERSON_FOREIGN, @PERSON_KOREAN, @EXC_RATE, @VAT_PRICE, @RES_COUNT, @COM_RATE, @COM_PRICE, 
			@REMARK, @NEW_CODE);
			

			INSERT INTO SET_LAND_CUSTOMER(PRO_CODE, LAND_SEQ_NO, RES_CODE, RES_SEQ_NO, CUR_TYPE, 
			FOREIGN_PRICE, KOREAN_PRICE, EXC_RATE, VAT_PRICE, COM_RATE, COM_PRICE, PAY_PRICE,
			NEW_CODE)
			SELECT 
			@PRO_CODE,
			@LAND_SEQ_NO,
			A.RES_CODE, A.SEQ_NO, @CUR_TYPE,
			@PERSON_FOREIGN, 
			@PERSON_KOREAN, 
			@EXC_RATE, 
			@PERSON_VAT, 
			@COM_RATE, 
			@PERSON_COMM, 
			@PERSON_PAY,
			@NEW_CODE
			FROM RES_CUSTOMER_damo A
			INNER JOIN RES_MASTER_damo B ON B.RES_CODE = A.RES_CODE
			WHERE B.PRO_CODE = @PRO_CODE
			AND  B.RES_STATE NOT IN (8,9) AND A.RES_STATE IN (0, 3, 4)
			ORDER  BY A.RES_CODE, A.SEq_NO 
		END


SELECT @LAND_SEQ_NO

END 

*/
GO
