USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*==================================================================================
	기본내용
====================================================================================
- SP 명 : SP_SMARTCARE_STATICMAP_IS_YN
- 기 능 :행사의 일정순번에 대한 일정정보가 행사마스터의 스테틱맵에 일치되는게 있는지 확인
		 하고 일치된 정보가 있다면 스테틱맵 생성여부 확인하여 결과를 알려줌
====================================================================================
	참고내용
====================================================================================
- 예제

 EXEC SP_SMARTCARE_STATICMAP_IS_YN 'EPF014-160605AF' , 1 ,1, 0
 EXEC SP_SMARTCARE_STATICMAP_IS_YN 'AFF111-150116SQ4' , 7,1
 EXEC SP_SMARTCARE_STATICMAP_IS_YN 'AFF111-140603A' , 2,1
====================================================================================
	변경내역
====================================================================================
- 2016-04-22 아이비솔루션 이인왕 최초작성
- 2016-08-07 아이비솔루션 이인왕 
	- CUR2 제거
	- CUR 쿼리문 수정 
	- NOT EXIST -> NOT IN .. TOP 1 으로 수정
- 2018-08-23	김성호	WITH(NOLOCK) 구문 추가
===================================================================================*/
CREATE PROCEDURE [dbo].[SP_SMARTCARE_STATICMAP_IS_YN]
(
	@PRO_CODE	VARCHAR(20),
	@SCH_SEQ	INTEGER,
	@DAY_NUMBER	INTEGER,
	@CHECK_TYPE INTEGER  --  0 : 전체일정   1: 일차 
)

AS
BEGIN
	DECLARE @MASTER_CODE VARCHAR(20)
	DECLARE	@MAP_SEQ INTEGER
	DECLARE	@MATCH_OK CHAR(1)  -- Y :일치됨  N : 일치된 일정 없음
	
	SET @MATCH_OK = 'N'
	SET @MASTER_CODE = SUBSTRING(@PRO_CODE,1,CHARINDEX('-',@PRO_CODE)-1)

	DECLARE CUR CURSOR FOR
		SELECT MAP_SEQ 
		FROM PKG_MASTER_SCH_MAP B WITH(NOLOCK)
		WHERE MASTER_CODE = @MASTER_CODE
	OPEN CUR

	FETCH NEXT FROM CUR INTO @MAP_SEQ

	WHILE @@FETCH_STATUS = 0 AND @MATCH_OK = 'N'
	BEGIN
		DECLARE	@DIFF_CNT INTEGER    -- 행사와 마스터 맵과  차이나는 갯수
		BEGIN
			-- 행사와 마스터 맵과 비교
			IF @CHECK_TYPE = 1	
				BEGIN
			--	DECLARE CUR2 CURSOR FOR				
				 -- 일차별
					SELECT @DIFF_CNT= COUNT(*) FROM (
						SELECT SUBSTRING(A.PRO_CODE,1,CHARINDEX('-',A.PRO_CODE)-1) MASTER_CODE,A.DAY_NUMBER ,C.CNT_CODE,
							RANK() OVER (PARTITION BY A.DAY_NUMBER ORDER BY A.DAY_NUMBER,B.CITY_SHOW_ORDER,C.CNT_SHOW_ORDER) CNT_ORDER
						FROM PKG_DETAIL_SCH_DAY A WITH(NOLOCK),PKG_DETAIL_SCH_CITY B WITH(NOLOCK),PKG_DETAIL_SCH_CONTENT C WITH(NOLOCK),INF_MASTER D WITH(NOLOCK)
						WHERE A.PRO_CODE = B.PRO_CODE AND A.SCH_SEQ = B.SCH_SEQ AND A.DAY_SEQ = B.DAY_SEQ
							AND B.PRO_CODE = C.PRO_CODE AND B.SCH_SEQ = C.SCH_SEQ AND B.DAY_SEQ = C.DAY_SEQ AND B.CITY_SEQ = C.CITY_SEQ
							AND C.CNT_CODE > 0 AND C.CNT_CODE = D.CNT_CODE AND D.GPS_X IS NOT NULL AND D.GPS_Y IS NOT NULL  AND D.SHOW_YN = 'Y'
							AND A.PRO_CODE = @PRO_CODE AND A.SCH_SEQ = @SCH_SEQ AND A.DAY_NUMBER = @DAY_NUMBER
						) AA
					WHERE  AA.MASTER_CODE NOT IN ( 
							SELECT TOP 1 BB.MASTER_CODE
							FROM PKG_MASTER_SCH_MAP_CONTENT BB WITH(NOLOCK)
							WHERE AA.MASTER_CODE = BB.MASTER_CODE AND BB.MAP_SEQ = @MAP_SEQ AND BB.MAP_SEQ > 0
							AND AA.DAY_NUMBER = BB.DAY_NUMBER AND AA.CNT_ORDER = BB.CNT_ORDER AND AA.CNT_CODE = BB.CNT_CODE)
				END 
			ELSE
				BEGIN
			--	DECLARE CUR2 CURSOR FOR
				-- 전체일정
				SELECT @DIFF_CNT=COUNT(*) FROM (
					SELECT * FROM(
						SELECT SUBSTRING(A.PRO_CODE,1,CHARINDEX('-',A.PRO_CODE)-1) MASTER_CODE,0 DAY_NUMBER ,C.CNT_CODE,
							RANK() OVER (PARTITION BY A.DAY_NUMBER ORDER BY A.DAY_NUMBER,B.CITY_SHOW_ORDER,C.CNT_SHOW_ORDER) CNT_ORDER
						FROM PKG_DETAIL_SCH_DAY A WITH(NOLOCK),PKG_DETAIL_SCH_CITY B WITH(NOLOCK),PKG_DETAIL_SCH_CONTENT C WITH(NOLOCK),INF_MASTER D WITH(NOLOCK)
						WHERE A.PRO_CODE = B.PRO_CODE AND A.SCH_SEQ = B.SCH_SEQ AND A.DAY_SEQ = B.DAY_SEQ
							AND B.PRO_CODE = C.PRO_CODE AND B.SCH_SEQ = C.SCH_SEQ AND B.DAY_SEQ = C.DAY_SEQ AND B.CITY_SEQ = C.CITY_SEQ
							AND C.CNT_CODE > 0 AND C.CNT_CODE = D.CNT_CODE AND D.GPS_X IS NOT NULL AND D.GPS_Y IS NOT NULL AND D.SHOW_YN = 'Y'
							AND A.PRO_CODE = @PRO_CODE AND A.SCH_SEQ = @SCH_SEQ 
						) A WHERE A.CNT_ORDER = 1) AA
				WHERE  AA.MASTER_CODE NOT IN ( 
						SELECT BB.MASTER_CODE
						FROM PKG_MASTER_SCH_MAP_CONTENT BB WITH(NOLOCK)
						WHERE AA.MASTER_CODE = BB.MASTER_CODE AND BB.MAP_SEQ = @MAP_SEQ AND BB.DAY_NUMBER = 0
						AND AA.DAY_NUMBER = BB.DAY_NUMBER AND AA.CNT_CODE = BB.CNT_CODE )
				END
		--	OPEN CUR2

		--	FETCH NEXT FROM CUR2 INTO @DIFF_CNT
			
		--	CLOSE CUR2
		--	DEALLOCATE CUR2
		END

		PRINT 'MATCH_OK = ' + @MATCH_OK + ' MATCH_MAP_SEQ = ' + CONVERT(VARCHAR(6) , @MAP_SEQ) + ' DIFF_CNT = ' + CONVERT(VARCHAR(6) , @DIFF_CNT)
		
		IF @DIFF_CNT = 0 -- 행사의 일정콘텐츠와 마스터행사의 콘텐츠가 같음
			BEGIN
				SET @MATCH_OK = 'Y'
			END
		ELSE -- 행사의 일정콘텐츠와 마스터행사의 콘텐츠가 다름
			BEGIN
				SET @MAP_SEQ = -1
				FETCH NEXT FROM CUR INTO @MAP_SEQ	
			END
	END
	CLOSE CUR
	DEALLOCATE CUR



	-- PRO_CODE : 행사코드
	-- SCH_SEQ	: 일정순번
	-- DAY_NUMBER : 여행일차
	-- MATCH_OK	: 일치여부 Y/N
	-- MASTER_CODE	:  마스터행사코드
	-- MATCH_MAP_SEQ	: 일치된 마스터행사 맵 순번
	-- MAX_MAP_SEQ	: 마스터행사코드의 최대 맵순번 값
	-- MAP_CNT : 행사 일정의 맵 등록값 0 : 등록된 내용없음 1: 등록된 값 있음
	SELECT @PRO_CODE PRO_CODE,@SCH_SEQ SCH_SEQ, @DAY_NUMBER DAY_NUMBER,
		@MATCH_OK MATCH_OK,@MASTER_CODE MASTER_CODE,@MAP_SEQ MATCH_MAP_SEQ,
		ISNULL(MAX(MAP_SEQ),0) MAX_MAP_SEQ ,(SELECT COUNT(*) FROM PKG_DETAIL_SCH_MAP WITH(NOLOCK) WHERE PRO_CODE = @PRO_CODE AND SCH_SEQ = @SCH_SEQ AND DAY_NUMBER = @DAY_NUMBER) MAP_CNT
	FROM PKG_MASTER_SCH_MAP WITH(NOLOCK) WHERE MASTER_CODE = @MASTER_CODE

END

GO
