USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_WEB_PKG_RESERVE_INFO_SELECT
■ DESCRIPTION				: 예약된 상품 정보 OR 상품정보 보기 
■ INPUT PARAMETER			:
■ OUTPUT PARAMETER			: 
■ EXEC						: 
	XP_WEB_PKG_RESERVE_INFO_SELECT 'FPP153-190507',0,''
	XP_WEB_PKG_RESERVE_INFO_SELECT '',0,'RP1902200997'
	XP_WEB_PKG_RESERVE_INFO_SELECT '',0,'RP1311121772'
	
	RP1211268184
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2013-04-09		박형만			최초생성
   2013-07-04		박형만			미팅장소,센딩정보 추가 ,공항코드추가, EMP_CODE 버그 수정
   2013-09-11		박형만			행사정보 좌석없는것 출발일시,도착일시 표시 ,PKG_SHOW_YN 행사표시여부 추가
   2013-11-12		박형만			외부예약상품 URL 필드 추가(ALT_PRO_URL) 
   2014-01-27		박형만			QCHARGE_PRICE 유류할증료 추가
   2014-02-27		박형만			XN_PRO_GET_QCHARGE_PRICE 파라미터 변경
   2014-05-09		박형만			PKG_CONTRACT 필드 추가 
   2014-06-20		정지용			가격 정찰제 관련 쿼리 수정
   2014-06-23		정지용			공동 경비 정보 추가
   2015-08-10		김성호			유류할증료 FN 변경
   2015-09-15		정지용			TOUR_JOURNEY / DEP_TRANS_NAME / MIN_COUNT / RES_COUNT / FAKE_COUNT 추가
   2016-08-11		박형만			BTMS복지몰 ,접수시 담당자가 접수자가 나오도록 수정 
   2016-09-08		박형만			PKG_MASTER LEFT JOIN 으로 변경 , PKG_MASTER 없을경우 기본값 처리 
   2019-02-28		박형만			롯데카드는 접수자가 나오도록 
   2019-04-10		박형만			현대카드는 접수자가 나오도록 
   2019-04-24		박형만			현지도착,한국도착편 표기 
================================================================================================================*/ 
CREATE  PROC [dbo].[XP_WEB_PKG_RESERVE_INFO_SELECT]
	@PRO_CODE	PRO_CODE ,
	@PRICE_SEQ	INT ,
	@RES_CODE	RES_CODE 
AS 
BEGIN

	DECLARE @PROVIDER INT --유입처
	DECLARE @RES_STATE INT --예약상태
	
	IF( ISNULL(@RES_CODE,'') <> '' )
	BEGIN
		
		--예약정보로 상품 코드 , 유입처,상태 담기
		SELECT @PRO_CODE = PRO_CODE , @PRICE_SEQ = PRICE_SEQ , @PROVIDER = PROVIDER , @RES_STATE  = RES_STATE FROM RES_MASTER_damo A WITH(NOLOCK)
		WHERE A.RES_CODE = @RES_CODE

		--[예약]예약된행사정보
		SELECT 
			A.RES_CODE ,		A.PRO_NAME,			A.LAST_PAY_DATE	,	A.DEP_DATE,		A.ARR_DATE,		A.RES_NAME,-- 예약데이터 
			ISNULL(C.BRANCH_CODE,0) AS BRANCH_CODE,		ISNULL(C.ATT_CODE,'P') AS ATT_CODE,		ISNULL(C.SIGN_CODE,SUBSTRING(B.PRO_CODE,1,1)) AS SIGN_CODE , 
			B.PRO_CODE,			B.MASTER_CODE,		B.TOUR_NIGHT,		B.TOUR_DAY,			
			B.SEAT_CODE ,		B.MAX_COUNT,		B.RES_ADD_YN,		B.DEP_CFM_YN,		B.CONFIRM_YN,
			B.FIRST_MEET ,		B.MEET_COUNTER ,	B.SENDING_YN ,		B.SENDING_DATE ,	
			
			CASE WHEN D.SEAT_CODE IS NULL THEN B.DEP_DATE ELSE D.DEP_DEP_DATE END AS DEP_DEP_DATE ,
			CASE WHEN D.SEAT_CODE IS NULL AND B.DEP_DATE IS NOT NULL  
				THEN RIGHT(CONVERT(VARCHAR(16),B.DEP_DATE,121),5)  ELSE D.DEP_DEP_TIME END AS DEP_DEP_TIME ,
			D.DEP_ARR_DATE,		D.DEP_ARR_TIME,
			CASE WHEN D.SEAT_CODE IS NULL THEN B.ARR_DATE ELSE D.ARR_DEP_DATE END AS ARR_DEP_DATE ,
			CASE WHEN D.SEAT_CODE IS NULL AND B.ARR_DATE IS NOT NULL  
				THEN RIGHT(CONVERT(VARCHAR(16),B.ARR_DATE,121),5)  ELSE D.ARR_DEP_TIME END AS ARR_DEP_TIME ,
			D.ARR_ARR_DATE,		D.ARR_ARR_TIME,

			D.DEP_TRANS_CODE,	D.DEP_TRANS_NUMBER,		D.DEP_DEP_AIRPORT_CODE, 
			D.DEP_SPEND_TIME,	D.DEP_ARR_AIRPORT_CODE, 
			D.ARR_TRANS_CODE,	D.ARR_TRANS_NUMBER,			D.ARR_DEP_AIRPORT_CODE, 
			D.ARR_SPEND_TIME , D.ARR_ARR_AIRPORT_CODE,  

			ISNULL(( SELECT TOP 1 AIRLINE_CODE FROM PRO_TRANS_SEAT_SEGMENT WITH(NOLOCK) WHERE SEAT_CODE = D.SEAT_CODE AND TRANS_SEQ=1 ORDER BY SEG_NO DESC ),D.DEP_TRANS_CODE) AS DEP_ARR_TRANS_CODE ,
			ISNULL(( SELECT TOP 1 FLIGHT FROM PRO_TRANS_SEAT_SEGMENT WITH(NOLOCK) WHERE SEAT_CODE = D.SEAT_CODE AND TRANS_SEQ=1 ORDER BY SEG_NO DESC ),D.DEP_TRANS_NUMBER) AS DEP_ARR_TRANS_NUMBER ,
			ISNULL(( SELECT TOP 1 AIRLINE_CODE FROM PRO_TRANS_SEAT_SEGMENT WITH(NOLOCK) WHERE SEAT_CODE = D.SEAT_CODE AND TRANS_SEQ=2 ORDER BY SEG_NO DESC ),D.DEP_TRANS_CODE) AS ARR_ARR_TRANS_CODE, 
			ISNULL(( SELECT TOP 1 FLIGHT FROM PRO_TRANS_SEAT_SEGMENT WITH(NOLOCK) WHERE SEAT_CODE = D.SEAT_CODE AND TRANS_SEQ=2 ORDER BY SEG_NO DESC ),D.DEP_TRANS_NUMBER) AS ARR_ARR_TRANS_NUMBER ,
			
			dbo.FN_RES_GET_RES_AGE_COUNT(A.RES_CODE, 0) AS ADT_COUNT,
			dbo.FN_RES_GET_RES_AGE_COUNT(A.RES_CODE, 1) AS CHD_COUNT,
			dbo.FN_RES_GET_RES_AGE_COUNT(A.RES_CODE, 2) AS INF_COUNT,
			DBO.FN_RES_GET_TOTAL_PRICE(A.RES_CODE) AS TOTAL_PRICE ,

			B.SHOW_YN AS [PKG_SHOW_YN],
			E.ALT_PRO_URL ,
			B.PKG_CONTRACT 
		FROM DBO.RES_MASTER_damo A WITH(NOLOCK)
			INNER JOIN PKG_DETAIL B WITH(NOLOCK)
				ON A.PRO_CODE = B.PRO_CODE 
			LEFT JOIN PKG_MASTER C WITH(NOLOCK) 
				ON B.MASTER_CODE = C.MASTER_CODE
			LEFT JOIN PRO_TRANS_SEAT D  WITH(NOLOCK) 
				ON B.SEAT_CODE = D.SEAT_CODE
			LEFT JOIN RES_ALT_MATCHING E WITH(NOLOCK)
				ON A.RES_CODE = E.RES_CODE 

		WHERE A.RES_CODE = @RES_CODE
				
	END 
	ELSE 
	BEGIN
		--행사정보
		SELECT 
			'' AS RES_CODE ,	B.PRO_NAME,			B.LAST_PAY_DATE	,	B.DEP_DATE,   B.ARR_DATE,	'' AS RES_NAME ,
			ISNULL(C.BRANCH_CODE,0) AS BRANCH_CODE,		ISNULL(C.ATT_CODE,'P') AS ATT_CODE,		ISNULL(C.SIGN_CODE,SUBSTRING(B.PRO_CODE,1,1)) AS SIGN_CODE , 
			B.PRO_CODE,			B.MASTER_CODE,		B.TOUR_NIGHT,		B.TOUR_DAY,		B.TOUR_JOURNEY,
			B.SEAT_CODE ,		B.MAX_COUNT,		B.RES_ADD_YN,		B.DEP_CFM_YN,		B.CONFIRM_YN,
			B.FIRST_MEET ,		B.MEET_COUNTER ,	B.SENDING_YN ,		B.SENDING_DATE ,
			B.MIN_COUNT,		B.FAKE_COUNT,		DBO.FN_PRO_GET_RES_COUNT(B.PRO_CODE) AS [RES_COUNT],
			
			CASE WHEN D.SEAT_CODE IS NULL THEN B.DEP_DATE ELSE D.DEP_DEP_DATE END AS DEP_DEP_DATE ,
			CASE WHEN D.SEAT_CODE IS NULL AND B.DEP_DATE IS NOT NULL  
				THEN RIGHT(CONVERT(VARCHAR(16),B.DEP_DATE,121),5)  ELSE D.DEP_DEP_TIME END AS DEP_DEP_TIME ,
			D.DEP_ARR_DATE,		D.DEP_ARR_TIME,
			CASE WHEN D.SEAT_CODE IS NULL THEN B.ARR_DATE ELSE D.ARR_DEP_DATE END AS ARR_DEP_DATE ,
			CASE WHEN D.SEAT_CODE IS NULL AND B.ARR_DATE IS NOT NULL  
				THEN RIGHT(CONVERT(VARCHAR(16),B.ARR_DATE,121),5)  ELSE D.ARR_DEP_TIME END AS ARR_DEP_TIME ,
			D.ARR_ARR_DATE,		D.ARR_ARR_TIME,

			D.DEP_TRANS_CODE,	D.DEP_TRANS_NUMBER,		D.DEP_DEP_AIRPORT_CODE, 
			D.DEP_SPEND_TIME,	D.DEP_ARR_AIRPORT_CODE, 
			D.ARR_TRANS_CODE,	D.ARR_TRANS_NUMBER,		D.ARR_DEP_AIRPORT_CODE, 
			D.ARR_SPEND_TIME , D.ARR_ARR_AIRPORT_CODE,  

			ISNULL(( SELECT TOP 1 AIRLINE_CODE FROM PRO_TRANS_SEAT_SEGMENT WITH(NOLOCK) WHERE SEAT_CODE = D.SEAT_CODE AND TRANS_SEQ=1 ORDER BY SEG_NO DESC ),D.DEP_TRANS_CODE) AS DEP_ARR_TRANS_CODE ,
			ISNULL(( SELECT TOP 1 FLIGHT FROM PRO_TRANS_SEAT_SEGMENT WITH(NOLOCK) WHERE SEAT_CODE = D.SEAT_CODE AND TRANS_SEQ=1 ORDER BY SEG_NO DESC ),D.DEP_TRANS_NUMBER) AS DEP_ARR_TRANS_NUMBER ,
			ISNULL(( SELECT TOP 1 AIRLINE_CODE FROM PRO_TRANS_SEAT_SEGMENT WITH(NOLOCK) WHERE SEAT_CODE = D.SEAT_CODE AND TRANS_SEQ=2 ORDER BY SEG_NO DESC ),D.DEP_TRANS_CODE) AS ARR_ARR_TRANS_CODE, 
			ISNULL(( SELECT TOP 1 FLIGHT FROM PRO_TRANS_SEAT_SEGMENT WITH(NOLOCK) WHERE SEAT_CODE = D.SEAT_CODE AND TRANS_SEQ=2 ORDER BY SEG_NO DESC ),D.DEP_TRANS_NUMBER) AS ARR_ARR_TRANS_NUMBER ,

			E.KOR_NAME AS [DEP_TRANS_NAME],

			0 AS ADT_COUNT,
			0 AS CHD_COUNT,
			0 AS INF_COUNT ,
			0 AS TOTAL_PRICE ,

			B.SHOW_YN AS [PKG_SHOW_YN],

			NULL AS ALT_PRO_URL , 
			B.PKG_CONTRACT 

		FROM PKG_DETAIL B WITH(NOLOCK)
			LEFT JOIN PKG_MASTER C WITH(NOLOCK) 
				ON B.MASTER_CODE = C.MASTER_CODE
			LEFT JOIN PRO_TRANS_SEAT D  WITH(NOLOCK) 
				ON B.SEAT_CODE = D.SEAT_CODE
			LEFT JOIN PUB_AIRLINE E WITH(NOLOCK) 
				ON D.DEP_TRANS_CODE = E.AIRLINE_CODE
		WHERE B.PRO_CODE = @PRO_CODE
	END 

	--패키지 해당 가격 정보
	/*
	SELECT TOP 1 
		PRO_CODE ,PRICE_SEQ,PRICE_NAME,SEASON,SCH_SEQ,
		PKG_INCLUDE,PKG_NOT_INCLUDE,
		ADT_PRICE,CHD_PRICE,INF_PRICE,SGL_PRICE,
		CUR_TYPE,EXC_RATE,FLOATING_YN,
		POINT_RATE,POINT_PRICE,POINT_YN,
		DBO.XN_PRO_GET_QCHARGE_PRICE(PRO_CODE,'') AS QCHARGE_PRICE 
	FROM PKG_DETAIL_PRICE WITH(NOLOCK) 
	WHERE PRO_CODE = @PRO_CODE AND PRICE_SEQ = @PRICE_SEQ
	*/
	SELECT TOP 1 
		A.PRO_CODE ,A.PRICE_SEQ, A.PRICE_NAME,A.SEASON,A.SCH_SEQ,
		A.PKG_INCLUDE,A.PKG_NOT_INCLUDE,
		ISNULL(B.ADT_PRICE, 0) AS ADT_PRICE,
		ISNULL(B.CHD_PRICE, 0) AS CHD_PRICE,
		ISNULL(B.INF_PRICE, 0) AS INF_PRICE,
		B.QCHARGE_TYPE,
		ISNULL(B.ADT_SALE_PRICE, 0) AS ADT_SALE_PRICE, ISNULL(B.CHD_SALE_PRICE, 0) AS CHD_SALE_PRICE, ISNULL(B.INF_SALE_PRICE, 0) AS INF_SALE_PRICE,
		ISNULL(B.ADT_SALE_QCHARGE, 0) AS ADT_SALE_QCHARGE,
		ISNULL(B.CHD_SALE_QCHARGE, 0) AS CHD_SALE_QCHARGE,
		ISNULL(B.INF_SALE_QCHARGE, 0) AS INF_SALE_QCHARGE,
		 B.SALE_QCHARGE_DATE,
		ISNULL(B.ADT_TAX, 0) AS ADT_TAX,
		ISNULL(B.CHD_TAX, 0) AS CHD_TAX,
		ISNULL(B.INF_TAX, 0) AS INF_TAX,
		A.SGL_PRICE,
		A.CUR_TYPE,A.EXC_RATE,A.FLOATING_YN,
		A.POINT_RATE,A.POINT_PRICE,A.POINT_YN,
--		DBO.XN_PRO_GET_QCHARGE_PRICE(A.PRO_CODE,'') AS QCHARGE_PRICE
		DBO.XN_PRO_DETAIL_QCHARGE_PRICE(A.PRO_CODE) AS QCHARGE_PRICE
	FROM PKG_DETAIL_PRICE A WITH(NOLOCK) 
	INNER JOIN XN_PKG_DETAIL_PRICE(@PRO_CODE, @PRICE_SEQ) B ON A.PRO_CODE = B.PRO_CODE AND A.PRICE_SEQ = B.PRICE_SEQ
	WHERE A.PRO_CODE = @PRO_CODE AND A.PRICE_SEQ = @PRICE_SEQ

	--담당자정보
	DECLARE @EMP_CODE EMP_CODE 
	
	IF( ISNULL(@RES_CODE,'') = '' )
	BEGIN
		-- 행사담당
		SET @EMP_CODE = (SELECT TOP 1 NEW_CODE FROM PKG_DETAIL WITH(NOLOCK) WHERE PRO_CODE = @PRO_CODE)
	END 
	ELSE 
	BEGIN
		-- 예약담당

		--복지몰 & 예약접수시 
		-- 또는 롯데카드 , 현대카드 
		IF((@PROVIDER = 35 AND @RES_STATE = 0) OR @PROVIDER IN( 17,29) ) 
		BEGIN
			SET @EMP_CODE = (SELECT TOP 1 SALE_EMP_CODE FROM RES_MASTER_DAMO WITH(NOLOCK) WHERE RES_CODE = @RES_CODE) -- 접수자가 표시 되도록 
		END 
		ELSE 
		BEGIN
			SET @EMP_CODE = (SELECT TOP 1 NEW_CODE FROM RES_MASTER_DAMO WITH(NOLOCK) WHERE RES_CODE = @RES_CODE)
		END 

		
	END 
	
	--담당자정보
	SELECT 
		EMP_CODE, KOR_NAME, INNER_NUMBER1, INNER_NUMBER2, INNER_NUMBER3, 
		FAX_NUMBER1, FAX_NUMBER2, FAX_NUMBER3, EMAIL, GREETING , TEAM_CODE,
		DBO.XN_COM_GET_TEAM_NAME(TEAM_CODE) AS TEAM_NAME ,
		( SELECT KEY_NUMBER FROM EMP_TEAM WHERE TEAM_CODE = A.TEAM_CODE )  AS KEY_NUMBER  
	FROM EMP_MASTER A WITH(NOLOCK)
	WHERE EMP_CODE = @EMP_CODE 
	

	-- 공동경비정보
	SELECT * fROM XN_PKG_DETAIL_PRICE_GROUP_COST_SUMMARY(@PRO_CODE, @PRICE_SEQ)

END 


GO
