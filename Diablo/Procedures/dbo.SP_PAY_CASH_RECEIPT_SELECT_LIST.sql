USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*==================================================================================
	기본내용
====================================================================================
- SP 명 : SP_PAY_CASH_RECEIPT_SELECT_LIST
- 기 능 : 현금영수증 신청 내역 리스트 조회
====================================================================================
	참고내용
====================================================================================
- 예제
-- EXEC SP_PAY_CASH_RECEIPT_SELECT_LIST_DEFAULT  @PAY_SEQ_MCH_SEQ =  '14201_1,18088_1,28021_1,28482_1,46547_1,'
====================================================================================
	변경내역
====================================================================================
- 2010-05-20 박형만 신규 작성 
- 2010-06-03 박형만 암호화 적용
- 2010-06-08 박형만 PAY_NUM 암호화 적용
===================================================================================*/
CREATE PROC [dbo].[SP_PAY_CASH_RECEIPT_SELECT_LIST]
	@PAY_NAME VARCHAR(20),
	@SOC_NUM1 VARCHAR(6),
	@SOC_NUM2 VARCHAR(7),
	@NOR_TEL1 VARCHAR(3),
	@NOR_TEL2 VARCHAR(4),
	@NOR_TEL3 VARCHAR(4),
	@MNG_NAME VARCHAR(20), --요청자임
	@RES_CODE RES_CODE ,
	@START_DATE VARCHAR(10) ,
	@END_DATE VARCHAR(10) ,
	@STATUS_TYPE INT , -- 처리 타입 0=미처리(신청),1=처리,2=반려
	@ORDER_TYPE INT -- 1담당자순,2예약번호순,3금액순,4시간순,5신청일순
AS

--DECLARE @PAY_NAME VARCHAR(20),
--@SOC_NUM1 VARCHAR(6),
--@SOC_NUM2 VARCHAR(7),
--@NOR_TEL1 VARCHAR(3),
--@NOR_TEL2 VARCHAR(4),
--@NOR_TEL3 VARCHAR(4),
--@MNG_NAME VARCHAR(20),
--@RES_CODE RES_CODE ,
--@START_DATE VARCHAR(10) ,
--@END_DATE VARCHAR(10) ,
--@STATUS_TYPE INT , -- 처리 타입 0=미처리(신청),1=처리,2=반려
--@ORDER_TYPE INT -- 1담당자순,2예약번호순,3금액순,4시간순,5신청일순

--SELECT @PAY_NAME='' , @ORDER_TYPE = 3  , @RES_CODE = 'RP1005196963'

DECLARE @SQLSTRING NVARCHAR(4000)

DECLARE @WHERE NVARCHAR(1000)
DECLARE @ORDER_BY NVARCHAR(1000) --정렬문자열
DECLARE @PARMDEFINITION NVARCHAR(1000)
SET @WHERE =''
SET @ORDER_BY = ''

--고객명
IF ISNULL(@PAY_NAME, '') <> ''
	SET @WHERE = @WHERE + ' AND PM1.PAY_NAME = @PAY_NAME '
--주민번호1
IF ISNULL(@SOC_NUM1, '') <> ''
BEGIN
	SET @WHERE = @WHERE + ' AND CRR.SOC_NUM1 = @SOC_NUM1 '
END 
--주민번호2
IF ISNULL(@SOC_NUM2, '') <> ''
BEGIN
	--SET @WHERE = @WHERE + ' AND CRR.SOC_NUM2 = @SOC_NUM2 '
	SET @WHERE = @WHERE + '
	AND CRR.SEC1_SOC_NUM2 = damo.dbo.pred_meta_plain_v (@SOC_NUM2,''DIABLO'',''dbo.PAY_CASH_RECEIPT'',''SOC_NUM2'') '
END 
--전화번호1
IF ISNULL(@NOR_TEL1, '') <> ''
	SET @WHERE = @WHERE + ' AND CRR.NOR_TEL1 = @NOR_TEL1 '
--전화번호2
IF ISNULL(@NOR_TEL2, '') <> ''
	SET @WHERE = @WHERE + ' AND CRR.NOR_TEL2 = @NOR_TEL2 '
--전화번호3
IF ISNULL(@NOR_TEL3, '') <> ''
	SET @WHERE = @WHERE + ' AND CRR.NOR_TEL3 = @NOR_TEL3 '

--요청자 이름으로 사번  찾기 ;;
IF ISNULL(@MNG_NAME, '') <> ''
BEGIN
	--SELECT KOR_NAME FROM EMP_MASTER GROUP BY KOR_NAME  HAVING COUNT(*) > 1 
	DECLARE @TMP_EMP TABLE ( SEQ INT IDENTITY(1,1) , EMP_CODE VARCHAR(7) ) 
	INSERT INTO @TMP_EMP 
	SELECT EMP_CODE FROM EMP_MASTER WHERE KOR_NAME = @MNG_NAME

	IF EXISTS( SELECT 1 FROM @TMP_EMP)
	BEGIN 
	DECLARE @TMP_STR VARCHAR(200)	
		DECLARE @ROWCOUNT INT 
		SET @ROWCOUNT = 1 
		SET @TMP_STR = '' 
		WHILE @ROWCOUNT <=(SELECT COUNT(*) FROM @TMP_EMP ) 
		BEGIN
			SET @TMP_STR = @TMP_STR +  ''''+(
			SELECT TOP 1 EMP_CODE FROM @TMP_EMP 
			WHERE SEQ = @ROWCOUNT ) + ''','
			SET @ROWCOUNT = @ROWCOUNT + 1 
		END 

		SET @TMP_STR =  SUBSTRING( @TMP_STR , 0 , LEN(@TMP_STR) ) 
		IF( @TMP_STR <> '' )
			SET @WHERE = @WHERE + ' AND CRR.NEW_CODE IN (' + @TMP_STR +') '
	END 
END 
	
--예약번호
IF ISNULL(@RES_CODE, '') <> ''
	SET @WHERE = @WHERE + ' AND CRR.RES_CODE = @RES_CODE '
	
--기간
IF ISNULL(@START_DATE, '') <> ''  
	SET @WHERE = @WHERE + ' AND CRR.NEW_DATE >= CONVERT(DATETIME,@START_DATE)'
IF ISNULL(@END_DATE, '') <> ''  
	SET @WHERE = @WHERE + ' AND CRR.NEW_DATE < DATEADD(DD,1,@END_DATE)'
	
--처리상태
IF ISNULL(@STATUS_TYPE, -1) > -1 
	SET @WHERE = @WHERE + ' AND CRR.STATUS_TYPE = @STATUS_TYPE '

--정렬방법
--0=기본 1담당자순,2예약번호순,3금액순,4시간순,5신청일순
IF @ORDER_TYPE = 0 
	SET @ORDER_BY = 'ORDER BY GROUP_NO DESC,REQ_NO ASC '
IF @ORDER_TYPE = 1  
	SET @ORDER_BY = 'ORDER BY MNG_CODE ASC ,PAY_SEQ DESC , MCH_SEQ , REQ_VER DESC '
IF @ORDER_TYPE = 2
	SET @ORDER_BY = 'ORDER BY RES_CODE DESC ,PAY_SEQ DESC , MCH_SEQ , REQ_VER DESC '
IF @ORDER_TYPE = 3
	SET @ORDER_BY = 'ORDER BY TARGET_PRICE DESC ,PAY_SEQ DESC , MCH_SEQ , REQ_VER DESC '
IF @ORDER_TYPE = 4
	SET @ORDER_BY = 'ORDER BY EDT_DATE DESC ,PAY_SEQ DESC , MCH_SEQ , REQ_VER DESC '
IF @ORDER_TYPE = 5
	SET @ORDER_BY = 'ORDER BY NEW_DATE DESC ,PAY_SEQ DESC , MCH_SEQ , REQ_VER DESC '

SET @SQLSTRING= 
'
SELECT * FROM 
(
SELECT 
	CRR.RECEIPT_NO ,
	
	CRR.GROUP_NO ,
	CRR.PAY_SEQ ,
	CRR.MCH_SEQ ,
	CRR.REQ_NO , 
	CRR.REQ_VER , 
	CRR.NEW_DATE ,
	PM1.PAY_NAME ,
	CRR.RES_CODE , 
	PM2.PRO_CODE ,
	CRR.SOC_NUM1 , 
	--CRR.SOC_NUM2 , 
	damo.dbo.dec_varchar(''DIABLO'',''dbo.PAY_CASH_RECEIPT'',''SOC_NUM2'', CRR.SEC_SOC_NUM2) AS SOC_NUM2 ,
	CRR.NOR_TEL1 ,
	CRR.NOR_TEL2,
	CRR.NOR_TEL3,
	CRR.TARGET_PRICE , 
	PM2.PART_PRICE , 
	CRR.NEW_CODE ,
	CRR.STATUS_TYPE ,
	CRR.REQ_COMMENT  ,
	CPREV.REQ_COMMENT AS REQ_COMMENT_PREV ,
	CRR.MNG_COMMENT  ,
	CPREV.MNG_COMMENT AS MNG_COMMENT_PREV ,
	CRR.EDT_DATE ,
	CRR.MNG_CODE ,
	EMP.KOR_NAME ,
	CPREV.REQ_VER  AS REQ_VER_PREV
FROM PAY_CASH_RECEIPT_OLD_damo AS CRR WITH(NOLOCK)
	LEFT JOIN PAY_MASTER_damo AS PM1 WITH(NOLOCK)
		ON CRR.PAY_SEQ = PM1.PAY_SEQ 
	LEFT JOIN PAY_MATCHING AS PM2 WITH(NOLOCK)
		ON CRR.PAY_SEQ = PM2.PAY_SEQ 
		AND CRR.MCH_SEQ = PM2.MCH_SEQ 
	LEFT JOIN PAY_CASH_RECEIPT_OLD_damo AS  CPREV WITH(NOLOCK)
		ON CPREV.PAY_SEQ = CRR.PAY_SEQ 
		AND CPREV.MCH_SEQ = CRR.MCH_SEQ 
		AND CPREV.REQ_VER = CRR.REQ_VER -1  --바로이전 차수
	LEFT JOIN EMP_MASTER AS EMP WITH(NOLOCK)
		ON CRR.NEW_CODE = EMP.EMP_CODE 
		
WHERE 1=1
' + @WHERE + '
)TBL
'+ @ORDER_BY 

SET @PARMDEFINITION = N'@PAY_NAME VARCHAR(20),
@SOC_NUM1 VARCHAR(6),
@SOC_NUM2 VARCHAR(7),
@NOR_TEL1 VARCHAR(3),
@NOR_TEL2 VARCHAR(4),
@NOR_TEL3 VARCHAR(4),
@MNG_NAME VARCHAR(20),
@RES_CODE RES_CODE ,
@START_DATE VARCHAR(10) ,
@END_DATE VARCHAR(10) ,
@STATUS_TYPE INT ,
@ORDER_TYPE INT '
EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,@PAY_NAME,@SOC_NUM1,@SOC_NUM2,@NOR_TEL1,@NOR_TEL2,@NOR_TEL3,@MNG_NAME,@RES_CODE,@START_DATE,@END_DATE,@STATUS_TYPE,@ORDER_TYPE

--PRINT( @SQLSTRING )


GO
