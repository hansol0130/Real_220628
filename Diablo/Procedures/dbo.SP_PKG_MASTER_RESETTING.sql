USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*-------------------------------------------------------------------------------------------------
■ Database					: DIABLO
■ USP_Name					: SP_PKG_MASTER_RESETTING  
■ Description				: 
■ Input Parameter			:                  
		@MASTER_CODE		: 마스터 코드
■ Output Parameter			:                  
■ Output Value				:                 
■ Exec						: EXEC SP_PKG_MASTER_RESETTING [마스터 코드]  
■ Author					: 
■ Date						: 
---------------------------------------------------------------------------------------------------
■ Change History                   
---------------------------------------------------------------------------------------------------
	Date			Author			Description           
---------------------------------------------------------------------------------------------------
									최초생성  
	2010-06-15		박형만			포인트 율 추가
	2010-07-22		임형민			포인트 율 수정
	2014-07-02		김성호			총액표시제에 따른 최소가, 최고가 계산 식 수정
	2014-09-30		김성호			남은 행사가 존재하지 않을때 NEXT_DATE, LAST_DATE 어제날짜로 세팅
	2018-02-09		박형만			최저가 날짜 계산 
-------------------------------------------------------------------------------------------------*/ 

CREATE PROCEDURE [dbo].[SP_PKG_MASTER_RESETTING]
(
	@MASTER_CODE VARCHAR(10)
)

AS

	BEGIN
		SET NOCOUNT ON;

		IF EXISTS(SELECT 1 FROM PKG_DETAIL A WITH(NOLOCK) WHERE MASTER_CODE = @MASTER_CODE AND A.DEP_DATE > GETDATE() AND A.SHOW_YN = 'Y')
		BEGIN

			UPDATE PKG_MASTER
				SET LOW_PRICE = X.MIN_ADT_PRICE,
					HIGH_PRICE = X.MAX_ADT_PRICE,
					NEXT_DATE = X.MIN_DEP_DATE,
					LAST_DATE = X.MAX_DEP_DATE,
					LOW_POINT_RATE = X.MAX_LOW_POINT_RATE,
					HIGH_POINT_RATE = X.MAX_HIGH_POINT_RATE,
					LOW_PRICE_DATE = X.LOW_PRICE_DATE --18-02-12 추가 
			FROM (
				--SELECT A.MASTER_CODE, 
				--	MIN(A.DEP_DATE) AS MIN_DEP_DATE, 
				--	MAX(A.DEP_DATE) AS MAX_DEP_DATE,
				--	DBO.XN_PRO_SALE_PRICE_CUTTING(MIN(B.ADT_PRICE + B.ADT_TAX + (CASE B.QCHARGE_TYPE WHEN 0 THEN 0 WHEN 1 THEN B.ADT_SYS_QCHARGE ELSE B.ADT_QCHARGE END))) AS [MIN_ADT_PRICE],
				--	DBO.XN_PRO_SALE_PRICE_CUTTING(MAX(B.ADT_PRICE + B.ADT_TAX + (CASE B.QCHARGE_TYPE WHEN 0 THEN 0 WHEN 1 THEN B.ADT_SYS_QCHARGE ELSE B.ADT_QCHARGE END))) AS [MAX_ADT_PRICE],
				--	ISNULL(MIN(CASE WHEN ISNULL(B.POINT_RATE,0) = 0 AND ISNULL(B.POINT_PRICE, 0) <> 0 THEN ROUND(((CONVERT(DECIMAL(15, 2), B.POINT_PRICE) / CONVERT(DECIMAL(15, 2), B.ADT_PRICE)) * 100), 2) ELSE ISNULL(B.POINT_RATE, 0) END), 0) AS MAX_LOW_POINT_RATE,
				--	ISNULL(MAX(CASE WHEN ISNULL(B.POINT_RATE,0) = 0 AND ISNULL(B.POINT_PRICE, 0) <> 0 THEN ROUND(((CONVERT(DECIMAL(15, 2), B.POINT_PRICE) / CONVERT(DECIMAL(15, 2), B.ADT_PRICE)) * 100), 2) ELSE ISNULL(B.POINT_RATE, 0) END), 0) AS MAX_HIGH_POINT_RATE
				--FROM PKG_DETAIL A WITH(NOLOCK)
				--INNER JOIN (
				--	SELECT *, [dbo].[XN_PRO_DETAIL_QCHARGE_PRICE](AA.PRO_CODE) AS [ADT_SYS_QCHARGE]
				--	FROM PKG_DETAIL_PRICE AA WITH(NOLOCK)
				--) B ON B.PRO_CODE = A.PRO_CODE
				--WHERE A.MASTER_CODE = @MASTER_CODE AND A.DEP_DATE > GETDATE() AND A.SHOW_YN = 'Y'  
				--GROUP BY A.MASTER_CODE
				SELECT 
					MASTER_CODE, 
					MIN(DEP_DATE) AS MIN_DEP_DATE, 
					MAX(DEP_DATE) AS MAX_DEP_DATE,
					MAX(CASE WHEN LOW_PRICE_DATE_NUM = 1 THEN DEP_DATE ELSE NULL END) AS LOW_PRICE_DATE,
					DBO.XN_PRO_SALE_PRICE_CUTTING(MIN(ADT_PRICE)) AS [MIN_ADT_PRICE],
					DBO.XN_PRO_SALE_PRICE_CUTTING(MAX(ADT_PRICE)) AS [MAX_ADT_PRICE],
					MIN(POINT_RATE) AS MAX_LOW_POINT_RATE , 
					MAX(POINT_RATE) AS MAX_HIGH_POINT_RATE
				FROM (
					SELECT 
						A.MASTER_CODE, 
						ROW_NUMBER() OVER ( ORDER BY B.ADT_PRICE + B.ADT_TAX + (CASE B.QCHARGE_TYPE WHEN 0 THEN 0 WHEN 1 THEN B.ADT_SYS_QCHARGE ELSE B.ADT_QCHARGE END)  ASC ) AS LOW_PRICE_DATE_NUM, 
						A.DEP_DATE, --) AS MIN_DEP_DATE, 
						(B.ADT_PRICE + B.ADT_TAX + (CASE B.QCHARGE_TYPE WHEN 0 THEN 0 WHEN 1 THEN B.ADT_SYS_QCHARGE ELSE B.ADT_QCHARGE END)) AS [ADT_PRICE],
						ISNULL(CASE WHEN ISNULL(B.POINT_RATE,0) = 0 AND ISNULL(B.POINT_PRICE, 0) <> 0 THEN ROUND(((CONVERT(DECIMAL(15, 2), B.POINT_PRICE) / CONVERT(DECIMAL(15, 2), B.ADT_PRICE)) * 100), 2) ELSE ISNULL(B.POINT_RATE, 0) END, 0) AS POINT_RATE
					FROM PKG_DETAIL A WITH(NOLOCK)
					INNER JOIN (
						SELECT *, [dbo].[XN_PRO_DETAIL_QCHARGE_PRICE](AA.PRO_CODE) AS [ADT_SYS_QCHARGE]
						FROM PKG_DETAIL_PRICE AA WITH(NOLOCK)
					) B ON B.PRO_CODE = A.PRO_CODE
					WHERE A.MASTER_CODE = @MASTER_CODE AND A.DEP_DATE > GETDATE() AND A.SHOW_YN = 'Y'  
				) T 
				GROUP BY MASTER_CODE
			) X
			WHERE PKG_MASTER.MASTER_CODE = X.MASTER_CODE
		END
		ELSE
		BEGIN
			-- 행사가 없으면 어제날짜로 세팅
			UPDATE PKG_MASTER SET NEXT_DATE = DATEADD(DD, -1, CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),  120)))
				, LAST_DATE = DATEADD(DD, -1, CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),  120))) 
			WHERE MASTER_CODE = @MASTER_CODE
		END
	END
	 
GO
