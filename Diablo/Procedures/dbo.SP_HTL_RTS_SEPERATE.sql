USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
 
CREATE PROCEDURE [dbo].[SP_HTL_RTS_SEPERATE]
	@P_CITY_CODE VARCHAR(255),
	@P_HOTEL_CODE VARCHAR(255)
AS
BEGIN
	SET NOCOUNT ON;



--RTS 매핑쿼리
DECLARE @CITY_CODE VARCHAR(255)
DECLARE @HOTEL_CODE VARCHAR(255)
DECLARE @MASTER_CODE VARCHAR(20)
DECLARE @BASE_CODE VARCHAR(20)
DECLARE @CNT_CODE INT

DECLARE USER_CURSOR CURSOR FOR 
	SELECT 도시코드, 호텔코드 FROM TMP_RTS_HOTEL_LIST
	WHERE 도시코드 = @P_CITY_CODE AND 호텔코드 = @P_HOTEL_CODE


OPEN USER_CURSOR

FETCH NEXT FROM USER_CURSOR INTO @CITY_CODE, @HOTEL_CODE

-- 호텔전체루프를돈다
WHILE @@FETCH_STATUS = 0 

--BEGIN TRY

	BEGIN
		PRINT '===================================================='
		PRINT '호텔: ' + @CITY_CODE + '/' +  @HOTEL_CODE 
		SET @MASTER_CODE = NULL;
		
		SET @BASE_CODE = NULL


		-- 베이스마스터코드를구한다. (지역+ 'H' + 'H')
		-- 참좋은도시코드와매칭이안되는도시들은일단버린다.
		SELECT @BASE_CODE = D.SIGN + 'HH' FROM TMP_RTS_HOTEL_LIST A
		INNER JOIN HTL_CITY_CONNECT Z ON Z.PROVIDER_CITY_CODE = @CITY_CODE AND Z.SUP_CODE = 'RTS' 
		INNER JOIN PUB_CITY B ON Z.CITY_CODE = B.CITY_CODE
		INNER JOIN PUB_NATION C ON C.NATION_CODE = B.NATION_CODE
		INNER JOIN PUB_REGION D ON D.REGION_CODE = C.REGION_CODE
		WHERE A.도시코드= @CITY_CODE AND A.호텔코드= @HOTEL_CODE
		
		PRINT '기본코드: ' + ISNULL(@BASE_CODE, '')
		
		IF ISNULL(@BASE_CODE, '') <> ''
		BEGIN
			-- 호텔입력을위한새로운마스터코드를할당받는다.
			SELECT @BASE_CODE = dbo.FN_GET_HOTEL_MASTER_CODE(@BASE_CODE)
			PRINT '신규입력: ' + ISNULL(@BASE_CODE, '')
		
			-- 신규호텔을입력한다.
			INSERT INTO HTL_MASTER(MASTER_CODE, MASTER_NAME, REGION_CODE, NATION_CODE, CITY_CODE, NEW_CODE, HTL_GRADE)
			SELECT @BASE_CODE, A.호텔명, D.REGION_CODE, C.NATION_CODE, B.CITY_CODE, '9999999', A.등급 FROM TMP_RTS_HOTEL_LIST A
			INNER JOIN HTL_CITY_CONNECT Z ON Z.PROVIDER_CITY_CODE = @CITY_CODE AND Z.SUP_CODE = 'RTS' 
			INNER JOIN PUB_CITY B ON Z.CITY_CODE = B.CITY_CODE
			INNER JOIN PUB_NATION C ON C.NATION_CODE = B.NATION_CODE
			INNER JOIN PUB_REGION D ON D.REGION_CODE = C.REGION_CODE
			WHERE A.도시코드= @CITY_CODE AND A.호텔코드= @HOTEL_CODE		
			
			-- 호텔컨텐츠를입력한다.
			INSERT INTO INF_MASTER(CNT_TYPE, KOR_TITLE, ENG_TITLE, REGION_CODE, NATION_CODE, STATE_CODE, CITY_CODE, GPS_X, GPS_Y, 
			SHORT_DESCRIPTION, DESCRIPTION, NEW_CODE, COPYRIGHT_REMARK, NEW_DATE)
			SELECT 2 AS CNT_TYPE, 호텔명, 호텔명, D.REGION_CODE, C.NATION_CODE, B.STATE_CODE, B.CITY_CODE, A.[x 좌표], A.[Y 좌표], 
			NULL, 설명, '9999999' AS NEW_CODE, 'RTS', GETDATE() FROM TMP_RTS_HOTEL_LIST A
			INNER JOIN HTL_CITY_CONNECT Z ON Z.PROVIDER_CITY_CODE = @CITY_CODE AND Z.SUP_CODE = 'RTS' 
			INNER JOIN PUB_CITY B ON Z.CITY_CODE = B.CITY_CODE
			INNER JOIN PUB_NATION C ON C.NATION_CODE = B.NATION_CODE
			INNER JOIN PUB_REGION D ON D.REGION_CODE = C.REGION_CODE
			WHERE A.도시코드= @CITY_CODE AND A.호텔코드= @HOTEL_CODE		
			
			-- 새로추가된컨텐츠고유키번호를가져온다.
			SET @CNT_CODE = @@IDENTITY
			
			-- 호텔컨텐츠확장정보를입력한다.
			INSERT INTO INF_HOTEL(CNT_CODE, STAY_CODE, TEL_NUMBER, FAX_NUMBER, HOMEPAGE, ADDRESS,
			GRADE, CHECK_IN_TIME, DETAIL_LOCATION, FLR_COUNT, ROOM_COUNT)
			SELECT @CNT_CODE, 'B' AS STAY_CODE, 전화번호, 팩스번호, [홈페이지URL], 주소,
				   ISNULL(A.등급, 0), A.[체크인 시간], A.교통정보, ISNULL(A.층수, 0), ISNULL(A.룸수, 0)
			FROM TMP_RTS_HOTEL_LIST A
			WHERE A.도시코드= @CITY_CODE AND A.호텔코드= @HOTEL_CODE		
			
			-- 컨텐츠의분류를입력한다.
			-- 분류: 숙박
			INSERT INTO INF_TYPE(CNT_CODE, CNT_ATT_CODE)
			VALUES(@CNT_CODE, 89)
			
			-- 분류: 호텔
			INSERT INTO INF_TYPE(CNT_CODE, CNT_ATT_CODE)
			VALUES(@CNT_CODE, 90)
			
			-- 호텔정보에컨텐츠코드를업데이트한다. 
			UPDATE HTL_MASTER 
			SET CNT_CODE = @CNT_CODE
			WHERE MASTER_CODE = @BASE_CODE
			
			-- HTL_CONNECT에새로생성된마스터코드를업데이트해준다
			UPDATE HTL_CONNECT			
			SET MASTER_CODE = @BASE_CODE, SHOW_YN = 'Y'
			WHERE SUP_CODE = 'RTS' AND CONNECT_CODE = @HOTEL_CODE AND PROVIDER_CITY_CODE = @CITY_CODE
	
		END
		
		PRINT '===================================================='
		PRINT ''
		PRINT ''
		FETCH NEXT FROM USER_CURSOR INTO @CITY_CODE, @HOTEL_CODE
		
	END

CLOSE USER_CURSOR
DEALLOCATE USER_CURSOR

END
GO
