USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_CUS_CLEAR
■ DESCRIPTION				: 고객정보 통합
■ INPUT PARAMETER			:
■ OUTPUT PARAMETER			: 
■ EXEC						: 
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
	DATE			AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
	2015-10-08		김성호			최초생성
	2015-10-13		정지용			예외테이블 추가(업데이트안되는테이블 및 제외테이블) / 예외처리 / 에러 수정
	2016-05-02		김성호			업데이트 테이블 최소화
	2017-03-07		정지용			고객병합 업데이트 테이블 추가
	2017-03-15		정지용			업데이트 항목 추가 ( 영문명 / 여권번호 / 우편번호/ 주소 )
	2017-12-06		정지용			모바일 신규테이블 CUVE 에 CUS_NO FORIGN KEY 로 되어있어서 삭제 쿼리 추가
	2018-03-27		박형만			모바일 신규테이블 DEVICE_MASTER CUS_NO FORIGN KEY 로 되어있어서 삭제 쿼리 추가
	2021-08-20		김성호			정회원끼리 병합을 위해 신규 SP([dbo].[XP_CUS_MEM_CLEAR]) 생성 사용, 현 SP 사용 안하는 것으로 추정
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[XP_CUS_CLEAR]
	@ERROR_MSG		VARCHAR(1000) OUTPUT,
	@CUS_NO			INT,
	@CUS_NAME		VARCHAR(40),
	@CUS_NO_LIST	VARCHAR(1000),
	@EMP_CODE		VARCHAR(7),
	@CUS_CLASS		INT,
	@NOR_TEL1		VARCHAR(4),
	@NOR_TEL2		VARCHAR(4),
	@NOR_TEL3		VARCHAR(4),
	@COM_TEL1		VARCHAR(4),
	@COM_TEL2		VARCHAR(4),
	@COM_TEL3		VARCHAR(4),
	@HOM_TEL1		VARCHAR(4),
	@HOM_TEL2		VARCHAR(4),
	@HOM_TEL3		VARCHAR(4),
	@BIRTH_DATE		DATETIME,
	@GENDER			VARCHAR(1),
	@EMAIL			VARCHAR(40),
	@FIRST_NAME		VARCHAR(20),
	@LAST_NAME		VARCHAR(20),
	@PASS_NUM		VARCHAR(20),
	@ZIP_CODE		VARCHAR(7),
	@ADDRESS1		VARCHAR(100),
	@ADDRESS2		VARCHAR(100)

AS
BEGIN

DECLARE @SQLSTRING NVARCHAR(MAX), @FROM_CUS_NO INT, @CUS_CLEAR_SEQ INT

BEGIN TRY
	BEGIN TRAN
	
		-- 트리거 동작 제외
		SET CONTEXT_INFO 0x21884680;
		

		-- 기준 고객번호가 안넘아 왔을시 팅김
		IF ISNULL(@CUS_NO, '') = '' OR @CUS_NO = 0
		BEGIN
			SET @ERROR_MSG = '[통합 기준 고객번호가 없습니다.]';
			ROLLBACK TRAN;
			RETURN;
		END

		-- 정회원 조회되었을 시 RETURN;
		IF EXISTS ( SELECT 1 FROM CUS_MEMBER WITH(NOLOCK) WHERE CUS_NO IN (SELECT Data FROM DBO.FN_XML_SPLIT(@CUS_NO_LIST, ',')) )
		BEGIN
			SET @ERROR_MSG = '[통합고객 할 고객에 정회원이 존재합니다.]'
			ROLLBACK TRAN;
			RETURN;
		END

		-- 회원 정보 업데이트
		UPDATE CUS_CUSTOMER_DAMO SET NOR_TEL1 = @NOR_TEL1, NOR_TEL2 = @NOR_TEL2, NOR_TEL3 = @NOR_TEL3, COM_TEL1 = @COM_TEL1, COM_TEL2 = @COM_TEL2, COM_TEL3 = @COM_TEL3
			, HOM_TEL1 = @HOM_TEL1, HOM_TEL2 = @HOM_TEL2, HOM_TEL3 = @HOM_TEL3, BIRTH_DATE = @BIRTH_DATE, GENDER = @GENDER, EMAIL = @EMAIL, CUS_GRADE = @CUS_CLASS, CUS_NAME = @CUS_NAME
			, FIRST_NAME = @FIRST_NAME, LAST_NAME = @LAST_NAME, ZIP_CODE = @ZIP_CODE, ADDRESS1 = @ADDRESS1, ADDRESS2 = @ADDRESS2
			, SEC_PASS_NUM = damo.dbo.enc_varchar('DIABLO','dbo.CUS_CUSTOMER','PASS_NUM',@PASS_NUM)
			, SEC1_PASS_NUM = damo.dbo.pred_meta_plain_v( @PASS_NUM ,'DIABLO','dbo.CUS_CUSTOMER','PASS_NUM')
		WHERE CUS_NO = @CUS_NO

		-- DIABLO 업데이트
		DECLARE USER_CURSOR CURSOR FOR

			SELECT Data FROM DBO.FN_XML_SPLIT(@CUS_NO_LIST, ',')

		OPEN USER_CURSOR

		FETCH NEXT FROM USER_CURSOR	INTO @FROM_CUS_NO

		WHILE @@FETCH_STATUS = 0
		BEGIN
			
			UPDATE RES_CUSTOMER_damo SET CUS_NO = @CUS_NO WHERE CUS_NO = @FROM_CUS_NO;
			UPDATE RES_MASTER_damo SET CUS_NO = @CUS_NO WHERE CUS_NO = @FROM_CUS_NO;
			UPDATE RES_SND_SMS SET CUS_NO = @CUS_NO WHERE CUS_NO = @FROM_CUS_NO;

			--IF EXISTS(SELECT 1 FROM CUS_DEVICE WITH(NOLOCK) WHERE CUS_NO = @CUS_NO)
			--BEGIN
			--	DELETE FROM CUS_DEVICE WHERE CUS_NO = @FROM_CUS_NO
			--END
			--ELSE
			--BEGIN
			--	UPDATE CUS_DEVICE SET CUS_NO = @CUS_NO WHERE CUS_NO = @FROM_CUS_NO;		
			--END

			FETCH NEXT FROM USER_CURSOR	INTO @FROM_CUS_NO
		END

		CLOSE USER_CURSOR
		DEALLOCATE USER_CURSOR


		-- CTI 업데이트

		SELECT @SQLSTRING = N'
		-- 상담이력
		UPDATE SIRENS.CTI.CTI_CONSULT SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');
		-- 고객전화번호 별 고객번호
		--UPDATE SIRENS.CTI.CTI_CONSULT_CUS_TEL SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');
		-- 고객약속
		UPDATE SIRENS.CTI.CTI_CONSULT_RESERVATION SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');

		-- 고객평가
		-- UPDATE SIRENS.CTI.CTI_CUS_ESTI_MASTER SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');
		-- 고객평가
		-- UPDATE SIRENS.CTI.CTI_CUS_ESTI_LIST SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');'

		EXEC SP_EXECUTESQL @SQLSTRING;

		-- 2017-03-07 추가 업데이트 
		SET @SQLSTRING = '';
		SELECT @SQLSTRING = N'
			-- 앱관련 테이블
			UPDATE APP_ALBUM_SHARE SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');
			UPDATE APP_DOWNLOAD_LOG SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');
			UPDATE APP_MESSAGE SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');

			UPDATE APP_RECEIVE SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');
			UPDATE PPT_MASTER SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');   -- 추가사항			
			
			-- 3차 수정 추가 반영테이블

			UPDATE COM_EMPLOYEE_MATCHING SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');
			UPDATE CUS_RCV_AGREE SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');   
			UPDATE CUS_SPECIAL SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');
			UPDATE CUS_INTEREST SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');   
			--UPDATE CUS_DEVICE SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');	
			UPDATE HBS_DETAIL SET NEW_CODE = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE NEW_CODE IN (' + @CUS_NO_LIST + N');
			UPDATE DEVICE_MASTER SET CUS_NO = ' + CONVERT(VARCHAR(12), @CUS_NO) + N' WHERE CUS_NO IN (' + @CUS_NO_LIST + N');-- 18-03-27 추가 
		'
		EXEC SP_EXECUTESQL @SQLSTRING;

		-- 기록 저장
		INSERT INTO CUS_CLEAR (CUS_NO, CUS_NO_LIST, EMP_CODE, NEW_DATE)
		VALUES (@CUS_NO, @CUS_NO_LIST, @EMP_CODE, GETDATE())

		SET @CUS_CLEAR_SEQ = @@IDENTITY;
		
		-- 기록 히스토리 저장
		INSERT INTO CUS_CLEAR_HISTORY
		(CUS_SEQ, CUS_NO, CUS_NAME, CUS_GRADE, BIRTH_DATE, GENDER, EMAIL, NOR_TEL1, NOR_TEL2, NOR_TEL3, COM_TEL1, COM_TEL2, COM_TEL3, HOM_TEL1, HOM_TEL2, HOM_TEL3)
		SELECT 
			@CUS_CLEAR_SEQ,CUS_NO,CUS_NAME,CUS_GRADE,BIRTH_DATE,GENDER,EMAIL,
			NOR_TEL1,NOR_TEL2,NOR_TEL3,
			COM_TEL1,COM_TEL2,COM_TEL3,
			HOM_TEL1,HOM_TEL2,HOM_TEL3			
		FROM CUS_CUSTOMER_damo WITH(NOLOCK) 
		WHERE CUS_NO IN ( SELECT Data FROM DBO.FN_XML_SPLIT(@CUS_NO_LIST, ',') )

		-- 삭제
		SELECT @SQLSTRING = N'
		DELETE FROM CUVE WHERE CUS_NO IN (' + @CUS_NO_LIST + N'); 
		DELETE FROM CUS_CUSTOMER_DAMO WHERE CUS_NO IN (' + @CUS_NO_LIST + N');'
		print @CUS_NO_LIST
		EXEC SP_EXECUTESQL @SQLSTRING;
	COMMIT TRAN
END TRY
BEGIN CATCH

	SET @ERROR_MSG = @ERROR_MSG + '[' +  ERROR_MESSAGE() + ']';

	-- 커서 돌다 에러시 커서 종료하기 위해 추가
	IF CURSOR_STATUS('global', 'USER_CURSOR') > -1
	BEGIN
		CLOSE USER_CURSOR;
	END
	
	IF CURSOR_STATUS('global', 'USER_CURSOR') = -1
	BEGIN
		DEALLOCATE USER_CURSOR;
	END

	ROLLBACK TRAN
END CATCH

END



GO
