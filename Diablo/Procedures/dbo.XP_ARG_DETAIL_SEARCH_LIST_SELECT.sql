USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_ARG_DETAIL_SEARCH_LIST_SELECT
■ DESCRIPTION				: 수배현황상세 리스트 검색
■ INPUT PARAMETER			: SearchType 1 : 출발일, 2 : 작성일, 9 : 상품코드 검색시 상태와 문서타입도 같이 검색
■ OUTPUT PARAMETER			: 
■ EXEC						: 	
	declare @p5 int
	set @p5=2
	exec XP_ARG_DETAIL_SEARCH_LIST_SELECT @PAGE_INDEX=1,@PAGE_SIZE=10,@KEY=N'ProductCode=APP199-141228&ArrangeType=0&ArrangeStatus=0&ResCode=RP1412292027',@ORDER_BY=0,@TOTAL_COUNT=@p5 output
	select @p5
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------  
   2014-03-28		정지용			최초생성
   2014-04-28		정지용			팀 / 담당자 검색 추가
   2014-12-29		정지용			예약코드 조회 추가 / 수배현황에서는 상품 like 검색 / 행사 및 예약에서는 대입조회
================================================================================================================*/ 
CREATE PROC [dbo].[XP_ARG_DETAIL_SEARCH_LIST_SELECT]
 	@PAGE_INDEX  INT,
	@PAGE_SIZE  INT,
	@TOTAL_COUNT INT OUTPUT,
	@KEY	varchar(200),
	@ORDER_BY	int
AS 
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED	
	
	DECLARE @SQLSTRING NVARCHAR(4000), @WHERE NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000), @SORT_STRING VARCHAR(100);

	DECLARE @ARG_CODE VARCHAR(12)
	DECLARE @PRO_CODE VARCHAR(20)	
	DECLARE @RES_CODE CHAR(12)
	DECLARE @TITLE VARCHAR(200)	
	DECLARE @START_DATE VARCHAR(10)
	DECLARE @END_DATE VARCHAR(10)
	DECLARE @AGT_CODE VARCHAR(10)
	DECLARE @AGT_NAME VARCHAR(50)
	DECLARE @ARG_TYPE INT
	DECLARE @ARG_STATUS INT
	DECLARE @SEARCH_TYPE CHAR(1)
	DECLARE @TEAM_CODE	VARCHAR(4)
	DECLARE @EMP_CODE	VARCHAR(7)

	SELECT
		@ARG_CODE = DBO.FN_PARAM(@KEY, 'ArrangeCode'),
		@PRO_CODE = DBO.FN_PARAM(@KEY, 'ProductCode'),
		@RES_CODE = DBO.FN_PARAM(@KEY, 'ResCode'),
		@TITLE = DBO.FN_PARAM(@KEY, 'Title'),
		@ARG_STATUS = DBO.FN_PARAM(@KEY, 'ArrangeStatus'),
		@START_DATE = DBO.FN_PARAM(@KEY, 'StartDate'),
		@END_DATE = DBO.FN_PARAM(@KEY, 'EndDate'),
		@AGT_CODE = DBO.FN_PARAM(@KEY, 'AgentCode'),
		@AGT_NAME = DBO.FN_PARAM(@KEY, 'AgentName'),
		@ARG_TYPE = DBO.FN_PARAM(@KEY, 'ArrangeType'),		
		@SEARCH_TYPE = DBO.FN_PARAM(@KEY, 'SearchType'),
		@TEAM_CODE = DBO.FN_PARAM(@KEY, 'TeamCode'),
		@EMP_CODE = DBO.FN_PARAM(@KEY, 'EmpCode')

	SET @WHERE = ''	
	IF ISNULL(@PRO_CODE, '') <> ''
	BEGIN
		IF ISNULL(@SEARCH_TYPE, '') <> ''
		BEGIN
			SET @WHERE = @WHERE + ' AND B.PRO_CODE LIKE @PRO_CODE + ''%'''
		END
		ELSE
		BEGIN
			SET @WHERE = @WHERE + ' AND B.PRO_CODE = @PRO_CODE'
		END

		IF ISNULL(@SEARCH_TYPE, '') = '9'
		BEGIN
			IF ISNULL(@ARG_TYPE, '') <> ''
				SET @WHERE = @WHERE + ' AND A.ARG_TYPE = @ARG_TYPE'

			IF ISNULL(@ARG_STATUS, '') <> ''
				SET @WHERE = @WHERE + ' AND A.ARG_STATUS = @ARG_STATUS'
		END
	END
	IF ISNULL(@RES_CODE, '') <> ''
	BEGIN
		SET @WHERE = @WHERE + ' AND GRP_SEQ_NO IN ( SELECT B.GRP_SEQ_NO FROM ARG_CUSTOMER A INNER JOIN ARG_CONNECT B ON A.ARG_CODE = B.ARG_CODE AND A.CUS_SEQ_NO = B.CUS_SEQ_NO WHERE A.RES_CODE = @RES_CODE GROUP BY B.GRP_SEQ_NO)'		
	END
	ELSE
	BEGIN
		IF ISNULL(@ARG_CODE, '') <> ''
			SET @WHERE = @WHERE + ' AND A.ARG_CODE = @ARG_CODE'

		IF ISNULL(@AGT_NAME, '') <> ''
			SET @WHERE = @WHERE + ' AND C.KOR_NAME LIKE ''%'' + @AGT_NAME + ''%'''

		IF ISNULL(@TITLE, '') <> ''
			SET @WHERE = @WHERE + ' AND A.TITLE LIKE ''%'' + @TITLE + ''%'''

		IF ISNULL(@SEARCH_TYPE, '') = '1'
		BEGIN
			IF ISNULL(@START_DATE, '') <> ''
				SET @WHERE = @WHERE + ' AND CONVERT(VARCHAR(10), A.DEP_DATE, 120) >= @START_DATE'

			IF ISNULL(@END_DATE, '') <> ''
				SET @WHERE = @WHERE + ' AND CONVERT(VARCHAR(10), A.DEP_DATE, 120) <= @END_DATE'
		END
		ELSE IF ISNULL(@SEARCH_TYPE, '') = '2'
		BEGIN
			IF ISNULL(@START_DATE, '') <> ''
				SET @WHERE = @WHERE + ' AND CONVERT(VARCHAR(10), A.NEW_DATE, 120) >= @START_DATE'

			IF ISNULL(@END_DATE, '') <> ''
				SET @WHERE = @WHERE + ' AND CONVERT(VARCHAR(10), A.NEW_DATE, 120) <= @END_DATE'
		END

		IF ISNULL(@ARG_TYPE, '') <> ''
			SET @WHERE = @WHERE + ' AND A.ARG_TYPE = @ARG_TYPE'

		IF ISNULL(@ARG_STATUS, '') <> ''
			SET @WHERE = @WHERE + ' AND A.ARG_STATUS = @ARG_STATUS'

	END

	IF ISNULL(@EMP_CODE, '') <> ''
		BEGIN
			SET @WHERE = @WHERE + ' AND P.NEW_CODE = @EMP_CODE'
		END
	ELSE
		BEGIN
			IF ISNULL(@TEAM_CODE, '') <> ''
				BEGIN
					SET @WHERE = @WHERE + ' AND P.NEW_CODE IN (SELECT EMP_CODE FROM EMP_MASTER WITH(NOLOCK) WHERE TEAM_CODE = @TEAM_CODE)'
				END
		END

	IF ISNULL(@AGT_CODE, '') <> ''
		SET @WHERE = @WHERE + ' AND B.AGT_CODE = @AGT_CODE'

	IF LEN(@WHERE) > 0
	BEGIN
		SELECT @WHERE = ('WHERE ' + SUBSTRING(@WHERE, 6, 4000))
	END

	-- SORT 조건 만들기  
	SELECT @SORT_STRING = (  
		CASE @ORDER_BY  
			WHEN 1 THEN ' A.NEW_DATE DESC'
			ELSE ' A.NEW_DATE DESC'
		END
	)

	SET @SQLSTRING = N'
	SELECT 
		@TOTAL_COUNT = COUNT(*)
	FROM ARG_DETAIL A WITH(NOLOCK)
	INNER JOIN ARG_MASTER B WITH(NOLOCK) ON A.ARG_CODE = B.ARG_CODE
	INNER JOIN AGT_MASTER C WITH(NOLOCK) ON B.AGT_CODE = C.AGT_CODE
	LEFT OUTER JOIN PKG_DETAIL P WITH(NOLOCK) ON B.PRO_CODE = P.PRO_CODE
	' + @WHERE + ';
	
	WITH LIST AS
	(
		SELECT A.*
		FROM (
			SELECT 
				A.ARG_CODE,
				A.GRP_SEQ_NO,
				A.TITLE,
				B.PRO_CODE,
				B.AGT_CODE,
				A.ARG_TYPE,
				A.ARG_STATUS,
				A.NIGHTS,
				A.DAY,
				A.DEP_DATE,
				A.ARR_DATE,
				ADT_COUNT +CHD_COUNT+INF_COUNT+FOC_COUNT  AS TOT_COUNT,
				A.NEW_CODE,
				A.CFM_CODE,
				A.NEW_DATE,
				C.KOR_NAME
			FROM ARG_DETAIL A WITH(NOLOCK)
			INNER JOIN ARG_MASTER B WITH(NOLOCK) ON A.ARG_CODE = B.ARG_CODE
			INNER JOIN AGT_MASTER C WITH(NOLOCK) ON B.AGT_CODE = C.AGT_CODE
			LEFT OUTER JOIN PKG_DETAIL P WITH(NOLOCK) ON B.PRO_CODE = P.PRO_CODE
			' + @WHERE + '
		) A
		ORDER BY ' + @SORT_STRING + '
		OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
		ROWS ONLY
	)

	SELECT 
		A.ARG_CODE,
		A.GRP_SEQ_NO,
		A.TITLE,
		A.PRO_CODE,
		A.AGT_CODE,
		A.ARG_TYPE,
		A.ARG_STATUS,
		A.NIGHTS,
		A.DAY,
		A.DEP_DATE,
		A.ARR_DATE,
		A.TOT_COUNT,
		A.KOR_NAME AS AGT_NAME,
		DBO.XN_COM_GET_EMP_NAME(A.NEW_CODE) AS NEW_NAME,
		DBO.XN_COM_GET_TEAM_NAME(A.NEW_CODE) AS NEW_TEAM_NAME,
		DBO.XN_COM_GET_EMP_NAME(A.CFM_CODE) AS CFM_NAME,
		DBO.XN_COM_GET_TEAM_NAME(A.CFM_CODE) AS CFM_TEAM_NAME,
		A.NEW_DATE		
	FROM LIST A WITH(NOLOCK)
	ORDER BY ' + @SORT_STRING;

	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@TOTAL_COUNT INT OUTPUT,
		@ARG_CODE VARCHAR(12),
		@PRO_CODE VARCHAR(20),
		@RES_CODE CHAR(12),
		@TITLE VARCHAR(200),
		@START_DATE VARCHAR(10),
		@END_DATE VARCHAR(10),
		@AGT_CODE VARCHAR(10),
		@AGT_NAME VARCHAR(50),
		@ARG_TYPE INT,
		@ARG_STATUS INT,
		@SEARCH_TYPE CHAR(1),
		@TEAM_CODE	VARCHAR(4),
		@EMP_CODE	VARCHAR(7)';

--	PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, 
		@PAGE_INDEX,
		@PAGE_SIZE,
		@TOTAL_COUNT OUTPUT,
		@ARG_CODE,
		@PRO_CODE,
		@RES_CODE,
		@TITLE,
		@START_DATE,
		@END_DATE,
		@AGT_CODE,
		@AGT_NAME,
		@ARG_TYPE,
		@ARG_STATUS,
		@SEARCH_TYPE,
		@TEAM_CODE,
		@EMP_CODE;
END
GO
