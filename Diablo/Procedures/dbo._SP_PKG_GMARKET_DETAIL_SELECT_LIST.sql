USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: SP_PKG_GMARKET_SELECT_LIST  --사용안함
■ DESCRIPTION				: <G마켓 상품연동 XML 생성 GProductMakeXML.exe >
■ INPUT PARAMETER			: 
	@MASTER_CODE_STRING		: 마스터 코드  --사용안함
■ OUTPUT PARAMETER			: 
■ EXEC						: 

	exec SP_PKG_GMARKET_DETAIL_SELECT_LIST 'UPP603'
	
	'EPP200-140128OZ', 4
	'EPP471'
	SELECT * INTO #TMP_LIST FROM 
	SP_PKG_GMARKET_SELECT_LIST '' 
	exec SP_PKG_GMARKET_SELECT_LIST 'EPP426'

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
2015-10-15			박형만			마스터별로 행사 조회되도록
2016-10-15			박형만			 --사용안함
================================================================================================================*/ 
CREATE PROC [dbo].[_SP_PKG_GMARKET_DETAIL_SELECT_LIST]
	@MASTER_CODE VARCHAR(20)
AS 
BEGIN

	DECLARE @SQLSTRING NVARCHAR(MAX), @PARMDEFINITION NVARCHAR(100)
	
	SET @SQLSTRING = N'
SELECT
	UPPER(A.MASTER_CODE) AS [GD_CD]
	, (CONVERT(VARCHAR(10), B.DEP_DEP_DATE, 120)) AS [DEPAR_DAY]
	, B.DEP_DEP_TIME AS [DEPAR_TIME]
	, RTRIM(B.DEP_TRANS_NUMBER) AS [DEPAR_FLIGHT_NO]
	, B.DEP_TRANS_CODE AS [AIR_COMP_CD]
	, CASE WHEN TRANSFER_TYPE = 2 THEN ''선박'' ELSE C.KOR_NAME END AS [AIR_COMP_NAME]
	, D.ADT_PRICE AS [PRICE]
	, D.ADT_PRICE AS [ADULT_PRICE]
	, D.CHD_PRICE AS [CHILD_PRICE]
	, D.INF_PRICE AS [BABY_PRICE]
	--, ISNULL(DBO.XN_PRO_DETAIL_SALE_PRICE_CUTTING(A.PRO_CODE,0),0)  AS [TAX_PRICE]
	, ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',1),''0'') AS TAX_PRICE
	, 0 AS ADULT_TAX_PRICE    
	, 0 AS CHILD_TAX_PRICE    
	, 0 AS BABY_TAX_PRICE    
	--, dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ) AS QCHARGE_PRICE_ALL
	, ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',1),''0'') AS ADULT_FUEL_SURCHARGE
	, ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',2),''0'') AS CHILD_FUEL_SURCHARGE
	, ISNULL(dbo.FN_ARR_SPLIT(dbo.XN_PRO_DETAIL_QCHARGE_PRICE_ALL(A.PRO_CODE,D.PRICE_SEQ),''|'',3),''0'') AS BABY_FUEL_SURCHARGE
	--, (CASE WHEN A.MAX_COUNT = 0 THEN 99 WHEN A.MAX_COUNT = -1 THEN 0 ELSE A.MAX_COUNT END) AS [RSV_REMAIN_CNT]
	--, DBO.FN_PRO_GET_RES_COUNT(A.PRO_CODE) AS [RES_COUNT]
	, CASE WHEN A.RSV_REMAIN_CNT > 0 AND A.RES_ADD_YN =''Y'' THEN A.RSV_REMAIN_CNT ELSE 0 END AS [RSV_REMAIN_CNT]
	, CASE WHEN A.RSV_REMAIN_CNT > 0 AND A.RES_ADD_YN =''Y'' THEN (A.RSV_REMAIN_CNT - A.RES_COUNT) ELSE 0 END  AS [REMAIN_SEAT_CNT]
	, CASE WHEN A.RSV_REMAIN_CNT > 0 AND A.RES_ADD_YN =''Y'' THEN A.MIN_COUNT ELSE 0 END AS [MIN_CNT]
	, ''1'' AS  [RSV_YN]
	, CASE WHEN A.RES_ADD_YN =''Y'' THEN ''Y'' ELSE ''N'' END AS [ONOFF]
	, (''http://www.verygoodtour.com/Product/Package/PackageDetail?&IsProvider=Y&ProCode='' + A.PRO_CODE + ''&PriceSeq='' + CONVERT(VARCHAR(3), D.PRICE_SEQ)) AS [TOUR_SCHEDULE_URL]
	, (A.PRO_CODE + ''|'' + CONVERT(VARCHAR(3), D.PRICE_SEQ)) AS [SERIES_NO]
	, A.TOUR_NIGHT AS [TOUR_SLEEP_DAYS]
	, A.TOUR_DAY AS [TOUR_DAYS]
	, (CONVERT(VARCHAR(10), B.ARR_ARR_DATE, 120)) AS [ARRIVAL_DAY]
	, B.ARR_ARR_TIME AS [ARRIVAL_TIME]
	, RTRIM(B.ARR_TRANS_NUMBER) AS [ARRIVAL_FLIGHT_NO]
	, B.DEP_ARR_AIRPORT_CODE , B.SEAT_CODE
FROM PKG_MASTER Z
INNER JOIN (
	SELECT AA.*
		, (CASE WHEN DATEADD(DAY, -2, AA.DEP_DATE) <= GETDATE() THEN -1 
			WHEN AA.MAX_COUNT = 0 THEN 99
			WHEN AA.MAX_COUNT = -1 THEN 0 ELSE AA.MAX_COUNT END
		) AS [RSV_REMAIN_CNT]
		, DBO.FN_PRO_GET_RES_COUNT(AA.PRO_CODE) AS [RES_COUNT]
	FROM PKG_DETAIL AA WITH(NOLOCK)
	WHERE AA.MASTER_CODE = @MASTER_CODE 
	--AND AA.SHOW_YN =''Y'' 
	--AND AA.RES_ADD_YN =''Y''
) A ON Z.MASTER_CODE = A.MASTER_CODE
INNER JOIN PRO_TRANS_SEAT B WITH(NOLOCK) ON A.SEAT_CODE = B.SEAT_CODE
INNER JOIN PKG_DETAIL_PRICE D WITH(NOLOCK) ON A.PRO_CODE = D.PRO_CODE
LEFT JOIN PUB_AIRLINE C WITH(NOLOCK) ON B.DEP_TRANS_CODE = C.AIRLINE_CODE
	
WHERE A.DEP_DATE > GETDATE()
AND  Z.MASTER_CODE  =  @MASTER_CODE;'

	SET @PARMDEFINITION = N'@MASTER_CODE VARCHAR(1000)';
	--PRINT @SQLSTRING
	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION, @MASTER_CODE;
END 
GO
