USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
1 : 고객 이벤트 참여로 추가 UPDATE 
2 : 해당 예약코드 이벤트 INSERT 
3 : 해당 이벤트 취소 처리가능 UPDATE 
EXEC XP_EVT_OKCASHBAG 5425948,'',2

*/
CREATE PROC [dbo].[XP_EVT_OKCASHBAG]
@CUS_NO  INT,
@RES_CODE  CHAR(12),
@STATE INT
AS 
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED	

	DECLARE @CUS_NO_ INT;
	DECLARE @CUS_CNT_ INT;
	DECLARE @BASE_PRICE_ INT;
	DECLARE @BASE_POINT_ INT;	
	DECLARE @RES_CODE_ CHAR(12);
	DECLARE @PRO_CODE_ VARCHAR(20);
	DECLARE @MOV_AFTER_CODE_ CHAR(12);
	DECLARE @TOTAL_POINT_ INT;

	
	/*	
	BASE_POINT
	500,000원 까지 5,000 포인트
	1,000,000 까지 10,000 포인트
	1,000,000 부터 20,000 포인트 
	*/
	
	
	IF @STATE = 1 -- 고객 이벤트 참여로 추가 UPDATE 
	BEGIN 
		SET @CUS_NO_ = (SELECT COUNT(CUS_NO) FROM EVT_OKCASHBAG WHERE CUS_NO = @CUS_NO)
			IF @CUS_NO_ = 1 
					--SET @RES_CODE_ =(SELECT RES_CODE FROM EVT_OKCASHBAG WHERE CUS_NO = @CUS_NO)

					SET @RES_CODE_ = @RES_CODE

					-- A.MOV_AFTER_CODE 이후예약코드가있는지 확인				
					SET @MOV_AFTER_CODE_ = (SELECT A.MOV_AFTER_CODE FROM RES_MASTER_DAMO A
					INNER JOIN PKG_DETAIL B ON A.PRO_CODE = B.PRO_CODE
					WHERE A.RES_CODE = @RES_CODE_)

					IF @MOV_AFTER_CODE_ <> NULL
					BEGIN
						SET @RES_CODE_ = @MOV_AFTER_CODE_
					END 

					SET @PRO_CODE_ = (SELECT A.PRO_CODE FROM RES_MASTER_DAMO A
					INNER JOIN PKG_DETAIL B ON A.PRO_CODE = B.PRO_CODE
					WHERE A.RES_CODE = @RES_CODE_)

					SET @CUS_CNT_ = (SELECT COUNT(RES_CODE) FROM RES_CUSTOMER_DAMO WHERE RES_CODE=@RES_CODE_) -- 예약자수
					SET @BASE_PRICE_ = (SELECT ADT_PRICE FROM PKG_DETAIL_PRICE WHERE PRO_CODE=@PRO_CODE_) -- 상품 가격

					IF @BASE_PRICE_ <= 500000							
						SET @BASE_POINT_ = 5000
					ELSE IF @BASE_PRICE_ > 500000 AND @BASE_PRICE_ <= 1000000				
						SET @BASE_POINT_ = 10000				
					ELSE IF @BASE_PRICE_ > 1000000 
						SET @BASE_POINT_ = 20000				
			 
					SET @TOTAL_POINT_ = @BASE_POINT_ * @CUS_CNT_

					UPDATE EVT_OKCASHBAG 
					SET RES_CODE = @RES_CODE_
					, OCB_CARD_NUM = (SELECT OCB_CARD_NUM FROM CUS_MEMBER WHERE CUS_NO = @CUS_NO) 
					, CUS_CNT = @CUS_CNT_
					, BASE_POINT = @BASE_POINT_ , BASE_PRICE = @BASE_PRICE_
					, TOTAL_POINT = @TOTAL_POINT_
					, IS_CXL = 0
					WHERE CUS_NO = @CUS_NO 
		END
	ELSE IF @STATE = 2 -- 해당 예약코드 이벤트 등록 
	 BEGIN
			SET @CUS_NO_ = (SELECT CUS_NO FROM RES_MASTER WHERE RES_CODE = @RES_CODE)
			--IF @CUS_NO_ <> NULL				
					SET @CUS_CNT_ = (SELECT COUNT(RES_CODE) FROM RES_CUSTOMER_DAMO WHERE RES_CODE = @RES_CODE) -- 예약자수
					
					SET @PRO_CODE_ = (SELECT A.PRO_CODE FROM RES_MASTER_DAMO A
					INNER JOIN PKG_DETAIL B ON A.PRO_CODE = B.PRO_CODE
					WHERE A.RES_CODE = @RES_CODE )

					SET @BASE_PRICE_ = (SELECT TOP 1 ADT_PRICE FROM PKG_DETAIL_PRICE WHERE PRO_CODE = @PRO_CODE_ ORDER BY PRICE_SEQ DESC) -- 상품 가격
			
					IF @BASE_PRICE_ <= 500000							
						SET @BASE_POINT_ = 5000
					ELSE IF @BASE_PRICE_ > 500000 AND @BASE_PRICE_ <= 1000000				
						SET @BASE_POINT_ = 10000				
					ELSE IF @BASE_PRICE_ > 1000000 
						SET @BASE_POINT_ = 20000	
			
					SET @TOTAL_POINT_ = @BASE_POINT_ * @CUS_CNT_

					INSERT INTO EVT_OKCASHBAG (CUS_NO, CONSENT_YN, CONSENT_DATE, RES_CODE, OCB_CARD_NUM, CUS_CNT, BASE_PRICE, BASE_POINT,TOTAL_POINT,IS_CXL) 
					VALUES(@CUS_NO_
					, 'Y'
					,GETDATE()
					,@RES_CODE
					, (SELECT TOP 1 OCB_CARD_NUM FROM CUS_MEMBER WHERE CUS_NO = @CUS_NO) 
					, @CUS_CNT_
					, @BASE_PRICE_
					, @BASE_POINT_
					, @TOTAL_POINT_
					, 0  )
		END 
	ELSE IF @STATE = 3 -- 해당 예약코드 이벤트 취소 처리 가능하게  
		BEGIN
			UPDATE EVT_OKCASHBAG SET 
			RES_CODE=NULL, 
			OCB_CARD_NUM=NULL, 
			CUS_CNT=NULL, 
			BASE_PRICE=NULL, 
			BASE_POINT=NULL, 
			TOTAL_POINT=NULL, 
			IS_CXL=NULL 
			WHERE CUS_NO=@CUS_NO AND RES_CODE=@RES_CODE	

			DELETE EVT_LOTTE_COUPON_damo WHERE RES_CODE = @RES_CODE
		END 

END
GO
