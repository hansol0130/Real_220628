USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_COM_EMPLOYEE_LIST_SELECT
■ DESCRIPTION				: BTMS 거래처 직원 상세정보 검색
■ INPUT PARAMETER			: 
	@PAGE_INDEX  INT		: 현재 페이지
	@PAGE_SIZE  INT			: 한 페이지 표시 게시물 수
	@KEY		VARCHAR(400): 검색 키
	@ORDER_BY	INT			: 정렬 순서
■ OUTPUT PARAMETER			: 
	@TOTAL_COUNT INT OUTPUT	: 총 항목 수
■ EXEC						: 
	EXEC XP_COM_EMPLOYEE_SELECT '93258', 102
■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2016-01-20		김성호			최초생성
   2016-02-02		정지용			사용여부 Y 인것만 가져오기
   2016-02-19		정지용			수정자 정보 추가
   2016-03-31		이유라			비자 비고 컬럼 추가
   2016-05-04		박형만			고객매핑 CUS_NO 정보 가져오기 
   2016-08-01		이유라			ERP 수정자 정보 가져오기
   2016-08-08		박형만			수정자 팀명,직급명 분리 ( EDT_TEAM_NAME , EDT_POS_NAME )  , 매핑된 CUS_NAME 추가 
   2016-08-08		박형만			거래처명 AGT_NAME 표시 
================================================================================================================*/ 
CREATE PROC [dbo].[XP_COM_EMPLOYEE_SELECT]
	@AGT_CODE	VARCHAR(10),
	@EMP_SEQ	INT
AS 
BEGIN		
	WITH AGT_EMP_LIST AS
	(
		SELECT 
			A.AGT_CODE, A.EMP_SEQ, A.KOR_NAME, B.TEAM_NAME, C.POS_NAME , D.KOR_NAME AS AGT_NAME 
		FROM COM_EMPLOYEE A WITH(NOLOCK)
		INNER JOIN AGT_MASTER D WITH(NOLOCK) ON A.AGT_CODE = D.AGT_CODE 
		LEFT JOIN COM_TEAM B WITH(NOLOCK) ON A.AGT_CODE = B.AGT_CODE AND A.TEAM_SEQ = B.TEAM_SEQ
		LEFT JOIN COM_POSITION C WITH(NOLOCK) ON A.AGT_CODE = C.AGT_CODE AND A.POS_SEQ = C.POS_SEQ

		WHERE A.AGT_CODE = @AGT_CODE
	)
	-- 기본정보
	SELECT A.AGT_CODE, B.AGT_NAME, A.EMP_SEQ, A.TEAM_SEQ, A.EMP_ID, A.KOR_NAME, A.LAST_NAME, A.FIRST_NAME, A.BIRTH_DATE, A.GENDER, A.PASS_WORD, A.POS_SEQ, A.WORK_TYPE
		, A.JOIN_DATE, A.OUT_DATE, A.EMAIL, A.COM_NUMBER, A.HP_NUMBER, A.FAX_NUMBER, A.SEAT_REMARK, A.AIR_REMARK, A.HOTEL_REMARK, A.FAIL_COUNT, A.MANAGER_YN, A.MAIL_RECEIVE_YN
		, A.NEW_DATE, A.NEW_SEQ
		, B.TEAM_NAME, B.POS_NAME
		, ISNULL(A.EDT_DATE, A.NEW_DATE) AS [EDT_DATE]
		, ISNULL(A.EDT_SEQ, A.NEW_SEQ) AS [EDT_SEQ]
		, E.TEAM_NAME AS EDT_TEAM_NAME, E.POS_NAME AS EDT_POS_NAME 
		, E.KOR_NAME AS [EDT_NAME]
		, C.CUS_NO
		, CASE WHEN C.CUS_NO IS NOT NULL THEN (SELECT TOP 1 CUS_NAME FROM CUS_CUSTOMER_damo WHERE CUS_NO = C.CUS_NO ) ELSE '' END AS CUS_NAME 
		, A.VGL_DATE, A.VGL_CODE, D.KOR_NAME AS VGL_NAME
	FROM COM_EMPLOYEE A WITH(NOLOCK)
	LEFT JOIN AGT_EMP_LIST B ON A.AGT_CODE = B.AGT_CODE AND  A.EMP_SEQ = B.EMP_SEQ	
	LEFT JOIN COM_EMPLOYEE_MATCHING C ON A.AGT_CODE = C.AGT_CODE AND A.EMP_SEQ = C.EMP_SEQ	
	LEFT JOIN EMP_MASTER D ON A.VGL_CODE = D.EMP_CODE
	LEFT JOIN AGT_EMP_LIST E ON A.AGT_CODE = E.AGT_CODE AND ISNULL(A.EDT_SEQ, A.NEW_SEQ) = E.EMP_SEQ	

	WHERE A.AGT_CODE = @AGT_CODE AND A.EMP_SEQ = @EMP_SEQ

	-- 여권정보
	SELECT A.AGT_CODE, A.EMP_SEQ, A.PASS_SEQ, A.NATION_CODE, B.KOR_NAME AS [NATION_NAME], A.PASS_BIRTHDATE, A.PASS_NUM, A.PASS_ISSUE, A.PASS_EXPIRE, A.NEW_DATE, A.NEW_SEQ
	FROM COM_EMP_PASSPORT A WITH(NOLOCK)
	INNER JOIN PUB_NATION B WITH(NOLOCK) ON A.NATION_CODE = B.NATION_CODE
	WHERE A.AGT_CODE = @AGT_CODE AND A.EMP_SEQ = @EMP_SEQ AND USE_YN = 'Y'

	-- 비자정보
	SELECT A.AGT_CODE, A.EMP_SEQ, A.VISA_SEQ, A.NATION_CODE, B.KOR_NAME AS [NATION_NAME], A.VISA_TYPE, A.VISA_NUM, A.VISA_ISSUE, A.VISA_EXPIRE, A.USE_YN, A.NEW_DATE, A.NEW_SEQ
	FROM COM_EMP_VISA A WITH(NOLOCK)
	INNER JOIN PUB_NATION B WITH(NOLOCK) ON A.NATION_CODE = B.NATION_CODE
	WHERE A.AGT_CODE = @AGT_CODE AND A.EMP_SEQ = @EMP_SEQ AND USE_YN = 'Y'

	-- 마일리지정보
	SELECT A.AGT_CODE, A.EMP_SEQ, A.MIL_SEQ, A.MIL_PRO_TYPE, A.MIL_CODE, A.MIL_NUM
	FROM COM_EMP_MILEAGE A WITH(NOLOCK)
	WHERE A.AGT_CODE = @AGT_CODE AND A.EMP_SEQ = @EMP_SEQ

END 

GO
