USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*================================================================================================================
■ USP_NAME					: XP_WEB_CUS_MEMBER_INTEREST_SELECT
■ DESCRIPTION				: 관심상품 LIST
■ INPUT PARAMETER			:
	@PAGE_INDEX  INT		: 현재 페이지
	@PAGE_SIZE  INT			: 한 페이지 표시 게시물 수
	@CUS_NO		INT			: 회원 관리 번호
■ OUTPUT PARAMETER			: 
	@TOTAL_COUNT INT OUTPUT	: 총 관심 상품 수        
■ EXEC						: 
	DECLARE @PAGE_INDEX INT,
	@PAGE_SIZE  INT,
	@TOTAL_COUNT INT, 
	@CUS_NO		INT,
	@ORDER_BY	INT

	SELECT @PAGE_INDEX=1,@PAGE_SIZE=30,@CUS_NO=15
	exec XP_WEB_CUS_MEMBER_INTEREST_SELECT @page_index, @page_size, @cus_no, @total_count output
	SELECT @TOTAL_COUNT
■ MEMO						: 
-----------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
-----------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
-----------------------------------------------------------------------------------------------------------------
   2013-04-25		이동호			최초생성
   2013-09-11		이동호			REGION_NAME 지역명 추가 불러옴
   2014-06-30		정지용			가격정찰제 관련 수정
   2015-01-18		정지용			마스터 추가 
================================================================================================================*/ 
CREATE PROCEDURE [dbo].[XP_WEB_CUS_MEMBER_INTEREST_SELECT]
(
	@PAGE_INDEX  INT,
	@PAGE_SIZE  INT,
	@CUS_NO		INT,
	@TOTAL_COUNT INT OUTPUT
)
AS  
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	DECLARE @SQLSTRING NVARCHAR(4000), @PARMDEFINITION NVARCHAR(1000), @WHERE NVARCHAR(4000), @SORT_STRING VARCHAR(50);
	SET @SQLSTRING = N'
	-- 전체 마스터 수
	SELECT @TOTAL_COUNT = COUNT(*)
	FROM CUS_INTEREST A WITH(NOLOCK) WHERE CUS_NO = @CUS_NO;
	WITH LIST AS
	(
		SELECT		
			INTE.INT_SEQ, INTE.PRO_CODE
		FROM CUS_INTEREST INTE WITH(NOLOCK)
		WHERE INTE.CUS_NO = @CUS_NO
		ORDER BY INTE.INT_SEQ DESC 
		OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
		ROWS ONLY
	)
		SELECT INTE.INT_SEQ, INTE.PRO_CODE,
			MST.PKG_COMMENT,
			IMG.FILE_CODE, IMG.REGION_CODE, IMG.NATION_CODE, IMG.STATE_CODE, IMG.CITY_CODE, IMG.FILE_NAME_S, IMG.FILE_NAME_M, 
			ISNULL(PKG.PRO_NAME, MST.MASTER_NAME) AS PRO_NAME, PKG.DEP_DATE, 
			CASE 
				WHEN PKG.TOUR_NIGHT IS NULL THEN				
				 DBO.FN_GET_TOUR_NIGHY_DAY_TEXT(MST.MASTER_CODE,1) 
				ELSE CONVERT(VARCHAR, PKG.TOUR_NIGHT) END AS TOUR_NIGHT,
			ISNULL(PKG.TOUR_DAY, MST.TOUR_DAY) AS TOUR_DAY, ISNULL(PRC.ADT_PRICE, MST.LOW_PRICE) AS ADT_PRICE, ISNULL(PRC.ADT_SALE_PRICE, MST.LOW_PRICE) AS ADT_SALE_PRICE, PRC.CUR_TYPE, PRC.PRICE_SEQ,
			SEAT.DEP_TRANS_CODE, SEAT.DEP_TRANS_NUMBER, SEAT.DEP_DEP_TIME,
			STUFF(
				(
				SELECT (''|'' + DBO.FN_PUB_GET_CITY_NAME(CITY_CODE)) AS [text()]
				FROM PKG_DETAIL_SCH_CITY WITH(NOLOCK)
				WHERE PRO_CODE = PKG.PRO_CODE AND MAINCITY_YN = ''Y'' FOR XML PATH('''')
				), 1, 1, ''''	) AS [MAIN_CITY]
				, (SELECT TOP 1 KOR_NAME FROM PUB_REGION WITH(NOLOCK) WHERE REGION_CODE = IMG.REGION_CODE) AS REGION_NAME
			,PE.EVT_NAME
			,MST.MASTER_CODE			
			, STUFF((   
				SELECT ('', ''+UPPER(SEARCH_VALUE)) as [text()] FROM PKG_MASTER_SUMMARY WHERE MASTER_CODE = MST.MASTER_CODE AND SEARCH_TYPE = ''W''   
				FOR XML PATH('''')), 1, 1, '''') AS WEEK_DAY 
		FROM LIST INTE WITH(NOLOCK)
			LEFT JOIN PKG_DETAIL PKG WITH(NOLOCK) ON INTE.PRO_CODE = PKG.PRO_CODE
			LEFT JOIN PKG_MASTER MST WITH(NOLOCK) ON ISNULL(PKG.MASTER_CODE, INTE.PRO_CODE) = MST.MASTER_CODE
			--LEFT JOIN PKG_MASTER MST WITH(NOLOCK) ON PKG.MASTER_CODE = MST.MASTER_CODE
			LEFT JOIN INF_FILE_MASTER IMG WITH(NOLOCK) ON MST.MAIN_FILE_CODE = IMG.FILE_CODE AND IMG.SHOW_YN = ''Y''
			--LEFT JOIN PKG_DETAIL_PRICE PRC WITH(NOLOCK) ON PKG.PRO_CODE = PRC.PRO_CODE AND PRC.PRICE_SEQ = 1
			LEFT JOIN (
				SELECT
					B.PRO_CODE,
					B.ADT_PRICE, 
					(SELECT ADT_SALE_PRICE FROM DBO.XN_PKG_DETAIL_PRICE(B.PRO_CODE, B.PRICE_SEQ)) AS ADT_SALE_PRICE,
					B.CUR_TYPE, 
					B.PRICE_SEQ
				FROM (SELECT PRO_CODE, MIN(PRICE_SEQ) AS PRICE_SEQ FROM PKG_DETAIL_PRICE WITH(NOLOCK) GROUP BY PRO_CODE) A
				INNER JOIN PKG_DETAIL_PRICE B WITH(NOLOCK) ON A.PRO_CODE = B.PRO_CODE AND A.PRICE_SEQ = B.PRICE_SEQ
			) PRC ON PKG.PRO_CODE = PRC.PRO_CODE
			LEFT JOIN PRO_TRANS_SEAT SEAT WITH(NOLOCK) ON PKG.SEAT_CODE = SEAT.SEAT_CODE
			LEFT JOIN PUB_EVENT PE WITH(NOLOCK) ON PKG.MASTER_CODE = PE.MASTER_CODE AND PE.SHOW_YN = ''Y''
			 AND (PE.END_DATE IS NULL OR CONVERT(VARCHAR(10), GETDATE(), 120) <= CONVERT(VARCHAR(10), PE.END_DATE, 120) )'

			
	SET @PARMDEFINITION = N'
		@PAGE_INDEX INT,
		@PAGE_SIZE INT,
		@CUS_NO INT,
		@TOTAL_COUNT INT OUTPUT';

--	PRINT @SQLSTRING

	EXEC SP_EXECUTESQL @SQLSTRING, @PARMDEFINITION,
		@PAGE_INDEX,
		@PAGE_SIZE,
		@CUS_NO,
		@TOTAL_COUNT OUTPUT;
END

GO
