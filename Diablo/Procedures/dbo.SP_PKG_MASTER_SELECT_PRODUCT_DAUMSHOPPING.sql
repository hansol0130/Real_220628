USE [Diablo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- ==========================================================================================
-- DESCRIPTION:	<포인트 적립 대상자 조회 DaumShoppingProductMakeText.exe >
--		 shopping.daum.net 여행 카테고리 상품 전송 
-- CREATE DATE: <2013-01-23>
-- AUTHOR:		<박형만>
-- exec SP_PKG_MASTER_SELECT_PRODUCT_DAUMSHOPPING 
-- 2013-01-17 박형만 최초생성
-- 2014-01-22 박형만 고정노출상품추가
-- 2014-04-08 박형만 상품URL 변경 
-- 2017-07-07 정지용 쿼리 튜닝 ( TEMP TABLE 생성후에 PK 인덱스 타도록 수정 )
-- ==========================================================================================
CREATE PROC [dbo].[SP_PKG_MASTER_SELECT_PRODUCT_DAUMSHOPPING]
	--@PROVIDER INT 
AS 
SET NOCOUNT ON 
 
--고정노출 상품 
DECLARE @TMP_FIXED_PRODUCT  TABLE 
(	MASTER_CODE VARCHAR(20),
	FCNT INT 
) 
--2014.01.22 고객만족팀 요청 , 고정적으로 베스트에 나오길 원하는 상품
--INSERT INTO @TMP_FIXED_PRODUCT 
--	SELECT 'JPP693', ABS(CHECKSUM(NewId())) % 100 + 360 
--UNION ALL SELECT 'JPP613', ABS(CHECKSUM(NewId())) % 100 + 360 
--UNION ALL SELECT 'JPP488',ABS(CHECKSUM(NewId())) % 100 + 360 
--UNION ALL SELECT 'JPP680',ABS(CHECKSUM(NewId())) % 100 + 360 
--UNION ALL SELECT 'JPP017',ABS(CHECKSUM(NewId())) % 100 + 360 

--2014.02-25 이세인씨 요청 
INSERT INTO @TMP_FIXED_PRODUCT 
	SELECT 'JPP018', ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'JPP091', ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'JPP6667',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'JPP6666',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'JPP677',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'JPP488',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'JPP677',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'CPP861',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'CPP3633',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'APP2035',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'APP5001',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'APP059',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'APP695',ABS(CHECKSUM(NewId())) % 100 + 360 

UNION ALL SELECT 'PPP257',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'JPP6699',ABS(CHECKSUM(NewId())) % 100 + 360 

--2014-06-16 서정선씨 요청
UNION ALL SELECT 'EPP600',ABS(CHECKSUM(NewId())) % 100 + 360 
UNION ALL SELECT 'EPP602',ABS(CHECKSUM(NewId())) % 100 + 360 


/*###### 부하로 인해 테이블 생성 2017-07-07 추가 ######*/
DECLARE @TMP_DAUM_RES_MASTER_CNT TABLE  
(
	MASTER_CODE VARCHAR(10) PRIMARY KEY NOT NULL,
	RCNT INT NULL
)
-- 마스터별 최근 한달 예약 판매량
INSERT INTO @TMP_DAUM_RES_MASTER_CNT
SELECT MASTER_CODE , COUNT(RC.RES_CODE) AS RCNT 
FROM RES_MASTER_DAMO RM WITH(NOLOCK)
	INNER JOIN RES_CUSTOMER_DAMO RC WITH(NOLOCK)
		ON RM.RES_CODE = RC.RES_CODE 
		AND RM.RES_STATE <= 7 
		AND RC.RES_STATE IN (0, 3, 4)
WHERE RM.NEW_DATE BETWEEN CONVERT(DATETIME,DATEADD(m,-1,GETDATE() ) )
	AND GETDATE()
GROUP BY MASTER_CODE 
/*###### 부하로 인해 테이블 생성 2017-07-07 추가 ######*/


SELECT 
A.PID,A.PNAME,A.PGURL,'http://contents.verygoodtour.com' + CONTENTS_PATH  + BIG_IMG AS IGURL, 
A.CATE1 , 
CASE WHEN A.SIGN_CODE = 'K' THEN '국내여행' ELSE '해외여행' END AS CATENAME1 ,
A.CATE1 + '00' + A.CATE2  AS CATE2 ,
CASE WHEN A.CATE2 = 'P' THEN '패키지' 
	 WHEN A.CATE2 = 'F' THEN '자유여행' 
	 WHEN A.CATE2 = 'H' THEN '호텔팩' 
	 WHEN A.CATE2 = 'W' THEN '허니문' 
	 WHEN A.CATE2 = 'R' THEN '실시간항공' 
	 WHEN A.CATE2 = 'G' THEN '골프' 
	 WHEN A.CATE2 = 'I' THEN '에어텔' 
	 WHEN A.CATE2 = 'T' THEN '티켓' 
	 WHEN A.CATE2 = 'C' THEN '크루즈' END AS CATENAME2, 
A.CATE1 + '00' + A.CATE2  
+ CASE WHEN A.SIGN_CODE = 'K' THEN B.CITY_CODE 
	ELSE D.REGION_CODE END AS CATE3 ,
CASE WHEN A.SIGN_CODE = 'K' THEN B.KOR_NAME 
	ELSE D.KOR_NAME END AS CATENAME3 ,
A.CATE1 + '00' + A.CATE2  + 
(CASE WHEN A.SIGN_CODE = 'K' THEN B.CITY_CODE 
	ELSE D.REGION_CODE END )+ 
CASE WHEN A.SIGN_CODE = 'K' THEN B.CITY_CODE 
	ELSE C.NATION_CODE END AS CATE4 ,
CASE WHEN A.SIGN_CODE = 'K' THEN B.KOR_NAME 
	ELSE C.KOR_NAME END AS CATENAME4 ,
	 
A.BEST_CATE1 , 
CASE WHEN A.SIGN_CODE = 'K' THEN '국내여행' ELSE '해외여행' END AS BEST_CATENAME1 ,

A.BEST_CATE1 + (CASE WHEN A.SIGN_CODE = 'K' THEN B.CITY_CODE 
	ELSE D.REGION_CODE END )  AS BEST_CATE2 ,
CASE WHEN A.SIGN_CODE = 'K' THEN B.KOR_NAME 
	ELSE D.KOR_NAME END AS BEST_CATENAME2 ,

ROW_NUMBER() OVER ( ORDER BY A.SALES DESC  ) AS TOPRANK ,  -- 전체 인기순위
ROW_NUMBER() OVER ( PARTITION BY A.CATE1 ORDER BY A.SALES DESC  ) AS CATE1RANK ,    -- 국내/해외별 인기순위
ROW_NUMBER() OVER ( PARTITION BY A.CATE1,D.REGION_CODE ORDER BY A.SALES DESC  ) AS CATE2RANK ,   -- 지역별 인기순위

ST_DATE +'^'+ED_DATE as DATE ,
A.AREA ,
A.PLACE ,
A.WEIGHT -1 AS WEIGHT ,
A.SALES ,
A.COUPON ,
A.PCARD ,
A.POINT ,
A.REVIEW ,
A.EVENT , 

A.SEAT , 
A.PRICE , 
A.DISCOUNT , 

A.REGION_ORDER  ,
A.FIXED_YN 
FROM 
(
	SELECT 
		UPPER(PM.MASTER_CODE)  AS PID,
		PM.MASTER_NAME  AS PNAME,
		--'http://daum.verygoodtour.com/Product/Package/PackageMaster.aspx?masterCode='+UPPER(PM.MASTER_CODE) AS PGURL ,
		'http://www.verygoodtour.com/Affiliate/DaumShop/PackageMaster?masterCode='+UPPER(PM.MASTER_CODE) AS PGURL ,
		--이미지링크
		'/CONTENT/' +  
		IFM.REGION_CODE +'/'+
		IFM.NATION_CODE +'/'+
		IFM.STATE_CODE +'/'+
		IFM.CITY_CODE +'/'+
		+ CASE WHEN IFM.FILE_TYPE = 1  THEN 'image'
			WHEN IFM.FILE_TYPE = 2  THEN 'movie'
			WHEN IFM.FILE_TYPE = 3 THEN 'document' 
		ELSE 'image' END  + '/'  AS CONTENTS_PATH ,
		--IFM.[FILE_NAME] + '.' + IFM.EXTENSION_NAME AS [FILE_NAME] , 
		--CASE WHEN ISNULL(IFM.[FILE_NAME_S],'') ='' THEN IFM.[FILE_NAME] + '.' + IFM.EXTENSION_NAME  ELSE IFM.[FILE_NAME_S] END AS SMALL_IMG,
		--CASE WHEN ISNULL(IFM.[FILE_NAME_M],'') ='' THEN IFM.[FILE_NAME] + '.' + IFM.EXTENSION_NAME  ELSE IFM.[FILE_NAME_M] END AS MIDDLE_IMG,
		CASE WHEN ISNULL(IFM.[FILE_NAME_L],'') ='' THEN IFM.[FILE_NAME] + '.' + IFM.EXTENSION_NAME  ELSE IFM.[FILE_NAME_L] END AS BIG_IMG,

		-------카테고리----------
		CASE WHEN PM.SIGN_CODE = 'K' THEN 'KOR' ELSE 'FOR' END AS CATE1 ,
		CASE WHEN PM.SIGN_CODE = 'K' THEN 'DO1' ELSE 'OU1' END AS BEST_CATE1 ,
		--CASE WHEN PM.SIGN_CODE = 'K' THEN '국내여행' ELSE '해외여행' END AS CATENAME1 ,
		CASE WHEN PM.ATT_CODE IN ('P') THEN 'P' --패키지
			 WHEN PM.ATT_CODE IN ('F','E','J','K','L','O','S','T','V','X','Y','D','A') THEN 'F' --자유여행
			 WHEN PM.ATT_CODE IN ('H','Z') THEN 'H' --호텔팩
			 WHEN PM.ATT_CODE IN ('W') THEN 'W' --허니문
			 WHEN PM.ATT_CODE IN ('R') THEN 'R' --실시간항공
			 WHEN PM.ATT_CODE IN ('G') THEN 'G'--골프
			 WHEN PM.ATT_CODE IN ('I','B') THEN 'I'--에어텔(항공+호텔)
			 WHEN PM.ATT_CODE IN ('T') THEN 'T'--티켓
			 WHEN PM.ATT_CODE IN ('C') THEN 'C'--크루즈
		ELSE 'P' END  --  그외 타입은 패키지
		AS CATE2 , 

		CONVERT(VARCHAR(10), PM.NEXT_DATE , 111) AS ST_DATE ,
		CONVERT(VARCHAR(10), DATEADD(DD,ISNULL(PM.TOUR_DAY,1) ,PM.LAST_DATE) ,111) AS ED_DATE, --도착일까지는 전시
		PM.TOUR_JOURNEY AS AREA ,
		KEYWORD AS PLACE , 
		ROW_NUMBER() OVER ( ORDER BY CASE WHEN FIX.MASTER_CODE IS NOT NULL THEN ISNULL(FIX.FCNT, 0) ELSE ISNULL(RES.RCNT, 0) END DESC , PM.REGION_ORDER DESC )   AS WEIGHT ,  -- 가중치 0~
		
		--RES.RCNT AS SALES  ,  --판매량
		CASE WHEN FIX.MASTER_CODE IS NOT NULL THEN FIX.FCNT ELSE RES.RCNT END AS SALES , --고정상품 일경우 판매량 가중치 증가
		'' AS COUPON , -- 쿠폰 
		'' AS PCARD , -- 무이자 할부 

		CASE WHEN ISNULL(PM.LOW_POINT_RATE,0) = 0 AND ISNULL(PM.HIGH_POINT_RATE,0) = 0 THEN '' 
		ELSE 
		CONVERT(VARCHAR,ISNULL(CONVERT(decimal(2,1),PM.LOW_POINT_RATE),0)) +'%' 
		+ '~'
		+ CONVERT(VARCHAR,ISNULL(CONVERT(decimal(2,1),PM.HIGH_POINT_RATE),0)) +'%' END AS POINT ,
		 
		'' AS REVIEW , 
		'' AS EVENT , 
		PM.SIGN_CODE , 
		(SELECT TOP 1 CITY_CODE FROM PKG_MASTER_SCH_CITY AS PMSC WITH(NOLOCK) 
		WHERE PM.MASTER_CODE = PMSC.MASTER_CODE 
		AND PMSC.MAINCITY_YN = 'Y' 
		AND PMSC.CITY_CODE NOT IN('ICN','PUS','GMP','SEL')  -- 메인도시 한국 출발 도시 제외
		ORDER BY CITY_SHOW_ORDER ASC ) AS CITY_CODE ,
		PM.REGION_ORDER  , 

		CASE WHEN FIX.MASTER_CODE IS NOT NULL THEN 'Y' ELSE 'N' END AS FIXED_YN ,

		-----------가격정보----------
		'최저가' AS SEAT,
		PM.LOW_PRICE  AS PRICE ,
		--PM.HIGH_PRICE  AS DP_MAX_PRICE ,
		'' AS DISCOUNT
		----------------------------

	FROM PKG_MASTER AS PM WITH(NOLOCK)
		
		--G상품은 마스터 이미지정보 반드시 있어야함 - 사전공지 AND ERP 시스템 체크 
		INNER JOIN PKG_FILE_MANAGER AS PFM WITH(NOLOCK )
			ON PM.MASTER_CODE = PFM.MASTER_CODE
			AND PFM.FILE_CODE = ( SELECT TOP 1 S1.FILE_CODE FROM PKG_FILE_MANAGER AS S1 WITH(NOLOCK)
							INNER JOIN INF_FILE_MASTER AS S2 WITH(NOLOCK)
								ON S1.FILE_CODE = S2.FILE_CODE 
							WHERE S1.MASTER_CODE = PFM.MASTER_CODE 
							AND S2.SHOW_YN = 'Y'
							ORDER BY SHOW_ORDER ) 
		INNER JOIN INF_FILE_MASTER AS IFM WITH(NOLOCK)
			ON PFM.FILE_CODE = IFM.FILE_CODE
		LEFT JOIN @TMP_DAUM_RES_MASTER_CNT RES ON PM.MASTER_CODE = RES.MASTER_CODE  -- 부하로 인해 TEMP TABLE로 조인해서 PK 인덱스 타게 유도 2017-07-07 추가 
		/* 부하 걸리는 부분 주석 처리
		LEFT JOIN 
		(
			-- 마스터별 최근 한달 예약 판매량
			SELECT MASTER_CODE , COUNT(RC.RES_CODE) AS RCNT 
			FROM RES_MASTER_DAMO RM WITH(NOLOCK)
				INNER JOIN RES_CUSTOMER_DAMO RC WITH(NOLOCK)
					ON RM.RES_CODE = RC.RES_CODE 
					AND RM.RES_STATE <= 7 
					AND RC.RES_STATE IN (0, 3, 4)
			WHERE RM.NEW_DATE BETWEEN CONVERT(DATETIME,DATEADD(m,-1,GETDATE() ) )
				AND GETDATE()
			GROUP BY MASTER_CODE 
		) AS RES
			ON PM.MASTER_CODE = RES.MASTER_CODE 
		*/
		LEFT JOIN @TMP_FIXED_PRODUCT AS FIX 
			ON PM.MASTER_CODE = FIX.MASTER_CODE 


		--INNER JOIN PKG_MASTER_AFFILIATE AS PMA WITH(NOLOCK)
		--	ON PM.MASTER_CODE = PMA.MASTER_CODE 
		--	--AND PMA.AFF_TYPE = 1 -- G마켓 
		--	AND PMA.PROVIDER = @PROVIDER -- G마켓 

	WHERE PM.NEXT_DATE > GETDATE()
	AND PM.LAST_DATE > GETDATE()
	AND PM.SHOW_YN  = 'Y' 

	--OR PM.MASTER_CODE IN ( 'APF203','APF205','APF102','APF185','APF352','APF317','APF432','APF111','APF899','APF530')

) AS A
INNER JOIN PUB_CITY AS B 
	ON A.CITY_CODE = B.CITY_CODE 
INNER JOIN PUB_NATION AS C 
	ON B.NATION_CODE = C.NATION_CODE 
INNER JOIN PUB_REGION AS D 
	ON C.REGION_CODE = D.REGION_CODE 

WHERE A.CITY_CODE IS NOT NULL  --메인도시 없는건 과감하게 제외

--AND A.FIXED_YN = 'Y' 
ORDER BY  A.WEIGHT, A.REGION_ORDER ASC 
GO
