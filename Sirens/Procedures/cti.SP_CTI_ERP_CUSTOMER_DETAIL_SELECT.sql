USE [Sirens]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*================================================================================================================
■ USP_NAME					: SP_CTI_ERP_CUSTOMER_DETAIL_SELECT
■ DESCRIPTION				: ERP 고객정보 세부조회
■ INPUT PARAMETER			: 
	@CUS_NO					: 고객번호
■ OUTPUT PARAMETER			: 
■ EXEC						: 

	exec cti.SP_CTI_ERP_CUSTOMER_DETAIL_SELECT 5911618

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2014-10-22		곽병삼			최초생성
   2014-10-23		박형만			카운트 가져오기 
   2014-10-27		박형만			SP_CTI_ERP_CUSTOMER_BASE_SELECT 와 합치기 
   2014-10-30		곽병삼			상담이력 SAVE TYPE이 초기저장(1) 은 조회 제외.
   2014-12-17		곽병삼			상담이력 SAVE TYPE이 0인 내용만 조회 제외.
   2015-09-04		정지용			회원테이블 조회 변경( 휴면 계정 )
   2016-08-03		김성호			OCB_CARD_NUM 관련 오류 수정
   2018-12-28       김남훈			고객 과거 등급 추가
   2020-12-09		김성호			고객 등급 위치 변경 (CUS_VIP_HISTRORY)
================================================================================================================*/ 
CREATE PROCEDURE [cti].[SP_CTI_ERP_CUSTOMER_DETAIL_SELECT]
--DECLARE
	@CUS_NO	INT
--SET @CUS_NO = 4284582
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

--DECLARE @CUS_NO INT 
--SET  @CUS_NO = 4284582

--DECLARE @ING_CNT INT   -- 미출발 진행중예약 
DECLARE @HISTORY_CNT INT -- 출발일 지난 결제중,결제완료,출발완료예약 

DECLARE @LAST_DEP_DATE DATETIME  -- 가장마지막 완료 예약 
DECLARE @BEFORE_DEP_DATE DATETIME -- 진행중인 출발전 예약 

--진행예약 건수 
DECLARE @PKG_CNT INT 
DECLARE @AIR_CNT INT 
DECLARE @HTL_CNT INT 
DECLARE @FREE_CNT INT 

DECLARE @ING_CNT INT 
--각타입별 상태(보류)
DECLARE @PKG_STATE INT 
DECLARE @AIR_STATE INT 
DECLARE @HTL_STATE INT 
DECLARE @FREE_STATE INT ;

---------------------- 고객의 예약 기본 정보 ( 예약자+출발자) ------------------------------
WITH RES_LIST AS 
( 
	SELECT 
	RES.RES_CODE ,
	CASE WHEN A.PRO_TYPE = 1 AND LEN(A.PRO_CODE) > 6 AND  SUBSTRING(A.PRO_CODE,3,1) = 'F' THEN 4 
		ELSE A.PRO_TYPE  END AS PRO_TYPE , 
	A.DEP_DATE , A.RES_STATE , 

	--2 완료: 출발일이 지난 예약 
	--1 진행: 출발전 예약 
	CASE WHEN A.DEP_DATE < GETDATE() /*A.RES_STATE IN (3,4,5,6) */  THEN 2 
		 WHEN A.DEP_DATE > GETDATE() /* A.RES_STATE IN (0,1,2,3,4) AND */ THEN 1 ELSE 0 END  AS RES_STATE_EXT
	FROM 
	( 
		SELECT A.RES_CODE   -- 예약자 
		FROM Diablo.dbo.RES_MASTER_damo A WITH(NOLOCK) 
		WHERE A.CUS_NO = @CUS_NO 
		--AND (( @MEM_YN = 'N' AND A.DEP_DATE > DATEADD(DD,-30,GETDATE()) ) OR @MEM_YN = 'Y' )  --비회원 출발일 30일 지난것은 표시 안함 
		AND A.VIEW_YN ='Y' --노출여부
		AND A.RES_STATE NOT IN ( 7,8,9 )
		UNION ALL 	
		SELECT A.RES_CODE  -- 출발자 
		FROM Diablo.dbo.RES_MASTER_damo A WITH(NOLOCK) 
		INNER JOIN Diablo.dbo.RES_CUSTOMER_DAMO B WITH(NOLOCK) 
			ON A.RES_CODE = B.RES_CODE 
			AND A.CUS_NO <> B.CUS_NO 
		WHERE B.CUS_NO = @CUS_NO 
		AND B.RES_STATE = 0  --정상출발자만 
		--AND (( @MEM_YN = 'N' AND A.DEP_DATE > DATEADD(DD,-30,GETDATE()) ) OR @MEM_YN = 'Y' )  --비회원 출발일 30일 지난것은 표시 안함 
		AND B.VIEW_YN ='Y' --노출여부
		AND A.RES_STATE NOT IN ( 7,8,9 )
	) RES 
		INNER JOIN Diablo.dbo.RES_MASTER_damo A
			ON RES.RES_CODE = A.RES_CODE 
)
--------------------------------------------------------------------------------------------------------------
-- 예약 집계정보 
SELECT 
	--SUM(1) TOTAL_CNT , 
	@PKG_CNT = SUM(CASE WHEN PRO_TYPE = 1 THEN 1 ELSE 0 END) , 
	@AIR_CNT = SUM(CASE WHEN PRO_TYPE = 2 THEN 1 ELSE 0 END) , 
	@HTL_CNT = SUM(CASE WHEN PRO_TYPE = 3 THEN 1 ELSE 0 END) ,
	@FREE_CNT = SUM(CASE WHEN PRO_TYPE = 4 THEN 1 ELSE 0 END),

	@ING_CNT = SUM(CASE WHEN RES_STATE_EXT = 1 THEN 1 ELSE 0 END) ,

	@HISTORY_CNT = SUM(CASE WHEN RES_STATE_EXT = 2 THEN 1 ELSE 0 END) ,  
		
	@LAST_DEP_DATE = MAX(CASE WHEN RES_STATE_EXT = 2 THEN A.DEP_DATE ELSE NULL END ) ,  -- 출발일 지난것중 가장큰값
	@BEFORE_DEP_DATE = MIN(CASE WHEN RES_STATE_EXT = 1 THEN A.DEP_DATE ELSE  NULL END ) -- 출발전인 것중 가장 작은값

FROM RES_LIST A
	
--------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM Diablo.DBO.CUS_MEMBER  WITH(NOLOCK) WHERE CUS_NO = @CUS_NO)
BEGIN
	-- 정회원 고객정보
	SELECT
		ISNULL(MEM.CUS_GRADE, 0) AS [CUS_GRADE],
		MEM.CUS_NO,
		MEM.CUS_ID,
		MEM.CUS_NAME,
		MEM.FIRST_NAME,
		MEM.LAST_NAME,
		MEM.BIRTH_DATE,
		DATEDIFF(YEAR,CAST(MEM.BIRTH_DATE AS DATETIME),GETDATE()) AS AGE,
		MEM.GENDER,
		CASE WHEN ISNULL(MEM.NOR_TEL3,'') <> '' THEN ISNULL(MEM.NOR_TEL1,'') + '-' +ISNULL(MEM.NOR_TEL2,'')+ '-' +ISNULL(MEM.NOR_TEL3,'') END AS NOR_TEL,
		MEM.NOR_TEL1 ,MEM.NOR_TEL2 ,MEM.NOR_TEL3 ,
		CASE WHEN ISNULL(MEM.HOM_TEL3,'') <> '' THEN ISNULL(MEM.HOM_TEL1,'') + '-' +ISNULL(MEM.HOM_TEL2,'')+ '-' +ISNULL(MEM.HOM_TEL3,'') END AS HOM_TEL,
		MEM.HOM_TEL1 ,MEM.HOM_TEL2 ,MEM.HOM_TEL3 ,
		CASE WHEN ISNULL(MEM.COM_TEL3,'') <> '' THEN ISNULL(MEM.COM_TEL1,'') + '-' +ISNULL(MEM.COM_TEL2,'')+ '-' +ISNULL(MEM.COM_TEL3,'') END AS COM_TEL,
		MEM.COM_TEL1 ,MEM.COM_TEL2 ,MEM.COM_TEL3 ,
		MEM.EMAIL,
		MEM.OCB_CARD_NUM,

		--(SELECT CARD_NUM FROM Diablo.dbo.CUS_OCB_AUTH WHERE CUS_NO = MEM.CUS_NO) AS OCB_CARD_NUM,

		CUS.RCV_EMAIL_YN,
		CUS.RCV_SMS_YN,
		CUS.ETC,

		--상단 고객 집계정보
		@ING_CNT AS ING_CNT ,  --진행중예약
		@HISTORY_CNT AS HISTORY_CNT , --지난여행
		@LAST_DEP_DATE AS LAST_DEP_DATE , --최근출발일 예약

		@BEFORE_DEP_DATE AS BEFORE_DEP_DATE , --가장마지막완료 예약 

		--우측 고객 집계정보
		(SELECT COUNT(HBS.BOARD_SEQ) FROM Diablo.dbo.HBS_DETAIL HBS WITH(NOLOCK) WHERE HBS.NEW_CODE = MEM.CUS_NO AND HBS.DEL_YN = 'N' AND HBS.MASTER_SEQ IN (4,12,15,17,24)) AS BOARD_CNT,
		(SELECT COUNT(HBS.BOARD_SEQ) FROM Diablo.dbo.HBS_DETAIL HBS WITH(NOLOCK) WHERE HBS.NEW_CODE = MEM.CUS_NO AND HBS.DEL_YN = 'N' AND HBS.MASTER_SEQ = 1) AS AFTER_CNT,
		(SELECT COUNT(HBS.BOARD_SEQ) FROM Diablo.dbo.HBS_DETAIL HBS WITH(NOLOCK) WHERE HBS.NEW_CODE = MEM.CUS_NO AND HBS.DEL_YN = 'N' AND HBS.MASTER_SEQ = 19) AS VOC_CNT,
		(SELECT COUNT(*) FROM Diablo.dbo.PRO_COMMENT WHERE CUS_NO = MEM.CUS_NO) AS COMMENT_CNT,
		CAST(ISNULL((SELECT TOP 1 TOTAL_PRICE FROM Diablo.dbo.CUS_POINT WHERE CUS_NO = MEM.CUS_NO ORDER BY POINT_NO DESC),0) AS INT) AS CUS_POINT,
		
		(SELECT COUNT(*) FROM cti.CTI_CONSULT WHERE CUS_NO = MEM.CUS_NO AND SAVE_TYPE <> '0' AND NEW_DATE > DATEADD(M,-1,GETDATE())  ) AS CONSULT_CNT , --최근상담

		@PKG_CNT AS PKG_CNT,
		@AIR_CNT AS AIR_CNT,
		@HTL_CNT AS HTL_CNT,
		@FREE_CNT AS FREE_CNT,

		@PKG_STATE AS PKG_STATE,
		@AIR_STATE AS AIR_STATE,
		@HTL_STATE AS HTL_STATE,
		@FREE_STATE AS FREE_STATE,
		ISNULL((SELECT CUS_GRADE_NAME FROM Diablo.dbo.CUS_VIP_HISTORY CVH WITH(NOLOCK) WHERE CVH.CUS_NO = CUS.CUS_NO AND CVH.VIP_YEAR = (YEAR(GETDATE()) - 1)), '일반') AS CUS_OLD_GRADE
		
		--CASE
		--	WHEN EXISTS(SELECT CUS_GRADE_NAME FROM Diablo.dbo.CUS_VIP_HISTORY WHERE CUS_NO = @CUS_NO AND VIP_YEAR = DATEPART(YEAR,GETDATE()) -1) THEN 
		--		(SELECT CUS_GRADE_NAME FROM Diablo.dbo.CUS_VIP_HISTORY WHERE CUS_NO = @CUS_NO AND VIP_YEAR = DATEPART(YEAR,GETDATE()) -1) 
		--ELSE '일반' END AS CUS_OLD_GRADE
		
	FROM Diablo.dbo.CUS_CUSTOMER_DAMO CUS WITH(NOLOCK)
	INNER JOIN (
		SELECT
			A.CUS_NO, A.CUS_ID, A.CUS_PASS, A.CUS_STATE, A.CUS_NAME, A.LAST_NAME, A.FIRST_NAME, A.NICKNAME, A.EMAIL, A.GENDER, A.SOC_NUM1, A.NOR_TEL1, A.NOR_TEL2, A.NOR_TEL3, 
			A.COM_TEL1, A.COM_TEL2, A.COM_TEL3, A.HOM_TEL1, A.HOM_TEL2, A.HOM_TEL3, A.FAX_TEL1, A.FAX_TEL2, A.FAX_TEL3, A.VISA_YN, A.PASS_YN, A.PASS_NUM, A.PASS_EXPIRE, A.PASS_ISSUE, 
			A.[NATIONAL], A.FOREIGNER_YN, CVH.CUS_GRADE, A.ETC, A.ETC2, A.BIRTHDAY, A.LUNAR_YN, A.RCV_EMAIL_YN, A.RCV_SMS_YN, A.ADDRESS1, A.ADDRESS2, A.ZIP_CODE, A.NEW_CODE,
			A.EDT_MESSAGE, A.OLD_YN, A.CU_YY, A.CU_SEQ, A.RCV_DM_YN, A.POINT_CONSENT, A.POINT_CONSENT_DATE, A.VSOC_NUM, 
			A.IPIN_DUP_INFO, A.IPIN_CONN_INFO, A.IPIN_ACC_DATE, A.TERMS2_YN, A.TERMS3_YN, A.SAFE_ID, A.BIRTH_DATE, A.OCB_AGREE_YN, A.OCB_AGREE_DATE, A.OCB_AGREE_EMP_CODE, A.OCB_CARD_NUM, 
			A.JOIN_TYPE, A.CERT_YN, A.LAST_LOGIN_DATE
		FROM Diablo.dbo.CUS_MEMBER A WITH(NOLOCK)
		LEFT JOIN Diablo.dbo.CUS_VIP_HISTORY CVH WITH(NOLOCK) ON A.CUS_NO = CVH.CUS_NO AND CVH.VIP_YEAR = YEAR(GETDATE())
		WHERE A.CUS_NO = @CUS_NO AND CUS_ID IS NOT NULL 
		UNION 
		SELECT
			A.CUS_NO, A.CUS_ID, A.CUS_PASS, A.CUS_STATE, A.CUS_NAME, A.LAST_NAME, A.FIRST_NAME, A.NICKNAME, A.EMAIL, A.GENDER, A.SOC_NUM1, A.NOR_TEL1, A.NOR_TEL2, A.NOR_TEL3, 
			A.COM_TEL1, A.COM_TEL2, A.COM_TEL3, A.HOM_TEL1, A.HOM_TEL2, A.HOM_TEL3, A.FAX_TEL1, A.FAX_TEL2, A.FAX_TEL3, A.VISA_YN, A.PASS_YN, A.PASS_NUM, A.PASS_EXPIRE, A.PASS_ISSUE, 
			A.[NATIONAL], A.FOREIGNER_YN, CVH.CUS_GRADE, A.ETC, A.ETC2, A.BIRTHDAY, A.LUNAR_YN, A.RCV_EMAIL_YN, A.RCV_SMS_YN, A.ADDRESS1, A.ADDRESS2, A.ZIP_CODE, A.NEW_CODE,
			A.EDT_MESSAGE, A.OLD_YN, A.CU_YY, A.CU_SEQ, A.RCV_DM_YN, A.POINT_CONSENT, A.POINT_CONSENT_DATE, A.VSOC_NUM, 
			A.IPIN_DUP_INFO, A.IPIN_CONN_INFO, A.IPIN_ACC_DATE, A.TERMS2_YN, A.TERMS3_YN, A.SAFE_ID, A.BIRTH_DATE, A.OCB_AGREE_YN, A.OCB_AGREE_DATE, A.OCB_AGREE_EMP_CODE, A.OCB_CARD_NUM, 
			A.JOIN_TYPE, A.CERT_YN, A.LAST_LOGIN_DATE
		FROM Diablo.dbo.CUS_MEMBER_SLEEP A WITH(NOLOCK)
		LEFT JOIN Diablo.dbo.CUS_VIP_HISTORY CVH WITH(NOLOCK) ON A.CUS_NO = CVH.CUS_NO AND CVH.VIP_YEAR = YEAR(GETDATE())
		WHERE A.CUS_NO = @CUS_NO
	) MEM ON CUS.CUS_NO = MEM.CUS_NO
	WHERE CUS.CUS_NO = @CUS_NO
END 
ELSE 
BEGIN
	-- 비회원 고객정보
	SELECT
		ISNULL(CVH.CUS_GRADE, 0) AS [CUS_GRADE],
		MEM.CUS_NO,
		MEM.CUS_ID,
		MEM.CUS_NAME,
		MEM.FIRST_NAME,
		MEM.LAST_NAME,
		MEM.BIRTH_DATE,
		DATEDIFF(YEAR,CAST(MEM.BIRTH_DATE AS DATETIME),GETDATE()) AS AGE,
		MEM.GENDER,
		CASE WHEN ISNULL(MEM.NOR_TEL3,'') <> '' THEN ISNULL(MEM.NOR_TEL1,'') + '-' +ISNULL(MEM.NOR_TEL2,'')+ '-' +ISNULL(MEM.NOR_TEL3,'') END AS NOR_TEL,
		MEM.NOR_TEL1 ,MEM.NOR_TEL2 ,MEM.NOR_TEL3 ,
		CASE WHEN ISNULL(MEM.HOM_TEL3,'') <> '' THEN ISNULL(MEM.HOM_TEL1,'') + '-' +ISNULL(MEM.HOM_TEL2,'')+ '-' +ISNULL(MEM.HOM_TEL3,'') END AS HOM_TEL,
		MEM.HOM_TEL1 ,MEM.HOM_TEL2 ,MEM.HOM_TEL3 ,
		CASE WHEN ISNULL(MEM.COM_TEL3,'') <> '' THEN ISNULL(MEM.COM_TEL1,'') + '-' +ISNULL(MEM.COM_TEL2,'')+ '-' +ISNULL(MEM.COM_TEL3,'') END AS COM_TEL,
		MEM.COM_TEL1 ,MEM.COM_TEL2 ,MEM.COM_TEL3 ,
		MEM.EMAIL,
		NULL AS OCB_CARD_NUM,
		--(SELECT CARD_NUM FROM Diablo.dbo.CUS_OCB_AUTH WHERE CUS_NO = MEM.CUS_NO) AS OCB_CARD_NUM,

		MEM.RCV_EMAIL_YN,
		MEM.RCV_SMS_YN,
		MEM.ETC,

		--상단 고객 집계정보
		@ING_CNT AS ING_CNT ,  --진행중예약
		@HISTORY_CNT AS HISTORY_CNT , --지난여행
		@LAST_DEP_DATE AS LAST_DEP_DATE , --최근출발일 예약

		@BEFORE_DEP_DATE AS BEFORE_DEP_DATE , --가장마지막완료 예약 

		--우측 고객 집계정보
		(SELECT COUNT(HBS.BOARD_SEQ) FROM Diablo.dbo.HBS_DETAIL HBS WITH(NOLOCK) WHERE HBS.NEW_CODE = MEM.CUS_NO AND HBS.DEL_YN = 'N' AND HBS.MASTER_SEQ IN (4,12,15,17,24)) AS BOARD_CNT,
		(SELECT COUNT(HBS.BOARD_SEQ) FROM Diablo.dbo.HBS_DETAIL HBS WITH(NOLOCK) WHERE HBS.NEW_CODE = MEM.CUS_NO AND HBS.DEL_YN = 'N' AND HBS.MASTER_SEQ = 1) AS AFTER_CNT,
		(SELECT COUNT(HBS.BOARD_SEQ) FROM Diablo.dbo.HBS_DETAIL HBS WITH(NOLOCK) WHERE HBS.NEW_CODE = MEM.CUS_NO AND HBS.DEL_YN = 'N' AND HBS.MASTER_SEQ = 19) AS VOC_CNT,
		(SELECT COUNT(*) FROM Diablo.dbo.PRO_COMMENT WHERE CUS_NO = MEM.CUS_NO) AS COMMENT_CNT,
		CAST(ISNULL((SELECT TOP 1 TOTAL_PRICE FROM Diablo.dbo.CUS_POINT WHERE CUS_NO = MEM.CUS_NO ORDER BY POINT_NO DESC),0) AS INT) AS CUS_POINT,
		
		(SELECT COUNT(*) FROM cti.CTI_CONSULT WHERE CUS_NO = MEM.CUS_NO AND SAVE_TYPE <> '0' AND NEW_DATE > DATEADD(M,-1,GETDATE())  ) AS CONSULT_CNT , --최근상담

		@PKG_CNT AS PKG_CNT,
		@AIR_CNT AS AIR_CNT,
		@HTL_CNT AS HTL_CNT,
		@FREE_CNT AS FREE_CNT,

		@PKG_STATE AS PKG_STATE,
		@AIR_STATE AS AIR_STATE,
		@HTL_STATE AS HTL_STATE,
		@FREE_STATE AS FREE_STATE,
		CASE WHEN EXISTS(SELECT CUS_GRADE_NAME FROM Diablo.dbo.CUS_VIP_HISTORY WHERE CUS_NO = @CUS_NO AND VIP_YEAR = DATEPART(YEAR,GETDATE()) -1) THEN 
		(SELECT CUS_GRADE_NAME FROM Diablo.dbo.CUS_VIP_HISTORY WHERE CUS_NO = @CUS_NO AND VIP_YEAR = DATEPART(YEAR,GETDATE()) -1) 
		ELSE '비회원' END AS CUS_OLD_GRADE
		
	FROM Diablo.dbo.CUS_CUSTOMER_DAMO MEM WITH(NOLOCK)
	LEFT JOIN Diablo.dbo.CUS_VIP_HISTORY CVH WITH(NOLOCK) ON MEM.CUS_NO = CVH.CUS_NO AND CVH.VIP_YEAR = YEAR(GETDATE())
	WHERE MEM.CUS_NO = @CUS_NO
END 
SET NOCOUNT OFF
GO
