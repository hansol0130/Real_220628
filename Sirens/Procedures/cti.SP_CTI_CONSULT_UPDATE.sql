USE [Sirens]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: SP_CTI_CONSULT_UPDATE
■ DESCRIPTION				: CTI 상담등록 추가
■ INPUT PARAMETER			: 
	@CONSULT_SEQ			: 상담SEQ
	@CONSULT_CALL_TYPE		: 수신/발신 구분 R:수신, S: 발신
	@CONSULT_TYPE			: 상담유형
	@CONSULT_DATE			:상담시간
	@DURATION_TIME			:상담소요시간
	@CUS_TYPE				:고객구분
	@CUS_NO					:고객번호
	@CUS_NAME				:고객명
	@CUS_TEL				:고객전화번호
	@RES_CODE				:예약코드
	@CONSULT_CONTENT		:상담내용
	@POINT_YN				:중요도
	@CONSULT_RESULT			:상담처리결과
	@SMS_SEND_YN			:SMS전송여부
	@FAX_SEND_YN			:FAX전송여부
	@CONSULT_FILE_NAME		:녹취파일명
	@INNER_NUMBER			:내선번호
	@TEAM_CODE				:팀코드
	@TEAM_NAME				:팀명
	@EMP_CODE				:직원코드
	@EMP_NAME				:직원명
	@SAVE_TYPE				:상담저장유형 (0:제외, 1:첫저장,2:추가저장, 3:전환저장, 8:긴급저장, 9:정상저장)
	@RESERVE_YN				:전화약속구분
	@RESERVE_DATE			:전화약속일자
	@RESERVE_TIME			:전화약속시간
	@RESERVE_TEAM_CODE		:전화약속팀코드
	@RESERVE_EMP_CODE		:전화약속 직원코드
	@RESADMIN_YN			:관리자처리구분
■ OUTPUT PARAMETER			: 
■ EXEC						: 

	EXECUTE SP_CTI_CONSULT_UPDATE @CONSULT_SEQ,@CONSULT_CALL_TYPE,@CONSULT_TYPE,@CONSULT_DATE,@DURATION_TIME,@CUS_TYPE,@CUS_NO,@CUS_NAME,@CUS_TEL,@RES_CODE,@CONSULT_CONTENT,@POINT_YN,@CONSULT_RESULT,@SMS_SEND_YN,@FAX_SEND_YN,@CONSULT_FILE_NAME,@INNER_NUMBER,@TEAM_CODE,@TEAM_NAME,@EMP_CODE,@EMP_NAME,@SAVE_TYPE,@RESERVE_YN,@RESERVE_DATE,@RESERVE_TIME,@RESERVE_TEAM_CODE,@RESERVE_EMP_CODE

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2014-10-18		곽병삼			최초생성
   2014-10-30		곽병삼			상담등록 상담 후, 최종 저장인 경우(CallType=E) 이면 예약 관리자 비고 업데이트.
   2014-11-02		곽병삼			상담이력보기, 고객검색 메뉴로 들어 온 경우, 내용 수정 시 고객약속 테이블은 처리하 않음.
   2014-11-05		곽병삼			고객약속에 동일상담원 동일고객 미처리 내역이 있으면 업데이트.
   2014-11-07		곽병삼			녹취파일명 업데이트
   2014-11-27		곽병삼			고객약속 처리 기능 최종 통화 종료 후, 저장시에 반영.
   2014-12-17		곽병삼			상담이력, 고객검색에서 수정한 경우, 내용만 저장됨.
   2015-01-03		곽병삼			고객명(CUS_NAME), 고객전화번호(CUS_TEL)이 NULL로 넘어온 경우, 고객정보에서 내용 조회반영.
   2015-01-21		박노민			고객예약 시간이 NULL인 경우 저장 실패 예외처리
   2015-02-05		박노민			설명추가
   2015-02-05		박노민			고객약속을 하지 않은 상태로 저장했을때 고객약속이 있으면 기존 고객약속을 삭제한다
   2016-03-07		김성호			TEAM_NAME VARCHAR(20) -> VARCHAR(50) 으로 수정
   2018-03-28		정지용			STT_FILE_NAME 추가
   2019-01-26	    김남훈			고객약속 수정기능 추가
================================================================================================================*/ 
CREATE PROCEDURE [cti].[SP_CTI_CONSULT_UPDATE]
--DECLARE
	@CONSULT_SEQ		VARCHAR(14),
	@CONSULT_CALL_TYPE	VARCHAR(1),
	@CONSULT_EVENT_TYPE	VARCHAR(1),
	@CONSULT_TYPE	VARCHAR(1),
	@CONSULT_DATE	VARCHAR(20),
	@DURATION_TIME	SMALLINT,
	@CUS_TYPE		VARCHAR(1),
	@CUS_NO			INT,
	@CUS_NAME		VARCHAR(20),
	@CUS_TEL		VARCHAR(20),
	@RES_CODE		VARCHAR(12),
	@CONSULT_CONTENT	NVARCHAR(4000),
	@POINT_YN		VARCHAR(1),
	@CONSULT_RESULT	VARCHAR(1),
	@SMS_SEND_YN	VARCHAR(1),
	@FAX_SEND_YN	VARCHAR(1),
	@CONSULT_FILE_NAME	VARCHAR(30),
	@STT_FILE_NAME  VARCHAR(30),
	@INNER_NUMBER	VARCHAR(4),
	@TEAM_CODE		VARCHAR(3),
	@TEAM_NAME		VARCHAR(50),
	@EMP_CODE		VARCHAR(7),
	@EMP_NAME		VARCHAR(20),
	@SAVE_TYPE		VARCHAR(1),

	@RESERVE_YN		VARCHAR(1),
	@RESERVE_DATE	VARCHAR(10),
	@RESERVE_TIME	VARCHAR(5),
	@RESERVE_TEAM_CODE	VARCHAR(3),
	@RESERVE_EMP_CODE		VARCHAR(7),
	@RESADMIN_YN	VARCHAR(1)

/*
	SET @CONSULT_SEQ = '20141028000001'
	SET @CONSULT_CALL_TYPE = 'R'
	SET @CONSULT_TYPE = 'C'		--C:고객, R:예약, P:상품
	SET @CONSULT_DATE = '2014-10-28 13:05:10'
	SET @CONSULT_DATE = CONVERT(VARCHAR(19),GETDATE(),120)
	SET @DURATION_TIME = 100
	SET @CUS_TYPE = '1'
	SET @CUS_NO = 4284582
	SET @CUS_NAME = '홍길동'
	SET @CUS_TEL = '010-9185-2481'
	SET @RES_CODE = NULL
	SET @CONSULT_CONTENT = '상담등록 입력 테스트'
	SET @POINT_YN = 'N'
	SET @CONSULT_RESULT = '0'
	SET @SMS_SEND_YN = 'N'
	SET @FAX_SEND_YN = 'N'
	SET @CONSULT_FILE_NAME = NULL
	SET @INNER_NUMBER = '2596'
	SET @TEAM_CODE = '538'
	SET @TEAM_NAME = 'WEB'
	SET @EMP_CODE = '2012010'
	SET @EMP_NAME = '정택조'

	SET @RESERVE_YN = '1'
	SET @RESERVE_DATE = '2014-10-30'
	SET @RESERVE_TIME = '10:00'
	SET @RESERVE_TEAM_CODE = '538'
	SET @RESERVE_EMP_CODE = '2012019'
	SET @SAVE_TYPE = '9'
*/

AS

DECLARE
	@CONSULT_RES_SEQ	INT,
	@RES_SAVE_YN	VARCHAR(1)

BEGIN


	SET @RES_SAVE_YN = 'Y'
	--SET @SAVE_TYPE = '9'

	IF @RESERVE_DATE IS NULL OR @RESERVE_DATE = ''
	BEGIN
		SET @RESERVE_DATE = CONVERT(VARCHAR(10), GETDATE(),120)
	END

	IF @RESERVE_TIME IS NULL OR @RESERVE_TIME = ''
	BEGIN
		IF CONVERT(VARCHAR(2),CONVERT (time, GETDATE())) > '16'
		BEGIN
			SET @RESERVE_DATE = CONVERT(VARCHAR(10), DATEADD(D,1,GETDATE()),120)
			SET @RESERVE_TIME = '08:30'
		END
		ELSE
		BEGIN

			SET @RESERVE_TIME = CONVERT(VARCHAR(2),CONVERT (time, DATEADD(MINUTE,90,GETDATE())))
		END
	END


	-- 고객명/고객전화번호가 NULL인경우
	IF ISNULL(@CUS_NAME,'') = '' AND ISNULL(@CUS_TEL,'') = ''
	BEGIN
		SELECT
			@CUS_NAME = CUS_NAME,
			@CUS_TEL = CASE WHEN ISNULl(NOR_TEL1,'') + ISNULL(NOR_TEL2,'') + ISNULL(NOR_TEL3,'') <> '' THEN ISNULl(NOR_TEL1,'') + ISNULL(NOR_TEL2,'') + ISNULL(NOR_TEL3,'')
			WHEN ISNULl(HOM_TEL1,'') + ISNULL(HOM_TEL2,'') + ISNULL(HOM_TEL3,'') <> '' THEN ISNULl(HOM_TEL1,'') + ISNULL(HOM_TEL2,'') + ISNULL(HOM_TEL3,'')
			ELSE ISNULl(COM_TEL1,'') + ISNULL(COM_TEL2,'') + ISNULL(COM_TEL3,'') END
		FROM Diablo.dbo.CUS_CUSTOMER_damo WITH (NOLOCK)
		WHERE CUS_NO = @CUS_NO
	END
	ELSE IF ISNULL(@CUS_NAME,'') = ''
	BEGIN
		SELECT
			@CUS_NAME = CUS_NAME
		FROM Diablo.dbo.CUS_CUSTOMER_damo WITH (NOLOCK)
		WHERE CUS_NO = @CUS_NO
	END
	ELSE IF ISNULL(@CUS_TEL,'') = ''
	BEGIN
		SELECT
			@CUS_TEL = CASE WHEN ISNULl(NOR_TEL1,'') + ISNULL(NOR_TEL2,'') + ISNULL(NOR_TEL3,'') <> '' THEN ISNULl(NOR_TEL1,'') + ISNULL(NOR_TEL2,'') + ISNULL(NOR_TEL3,'')
			WHEN ISNULl(HOM_TEL1,'') + ISNULL(HOM_TEL2,'') + ISNULL(HOM_TEL3,'') <> '' THEN ISNULl(HOM_TEL1,'') + ISNULL(HOM_TEL2,'') + ISNULL(HOM_TEL3,'')
			ELSE ISNULl(COM_TEL1,'') + ISNULL(COM_TEL2,'') + ISNULL(COM_TEL3,'') END
		FROM Diablo.dbo.CUS_CUSTOMER_damo WITH (NOLOCK)
		WHERE CUS_NO = @CUS_NO
	END

	IF @CONSULT_CALL_TYPE = 'V' OR @CONSULT_CALL_TYPE = 'C'
	BEGIN
		-- 상담이력, 고객검색에서 수정한 경우, 내용만 저장됨.
		UPDATE	sirens.cti.CTI_CONSULT
		SET	CONSULT_CONTENT = @CONSULT_CONTENT,
			EDT_DATE = GETDATE(),
			EDT_CODE = @EMP_CODE
		WHERE CONSULT_SEQ = @CONSULT_SEQ
	END
	ELSE
	BEGIN
		UPDATE	sirens.cti.CTI_CONSULT
		SET	DURATION_TIME = @DURATION_TIME,
			EMP_CODE = @EMP_CODE,
			EMP_NAME = @EMP_NAME,
			TEAM_CODE = @TEAM_CODE,
			TEAM_NAME = @TEAM_NAME,
			CUS_TYPE = @CUS_TYPE,
			CUS_NO = @CUS_NO,
			CUS_NAME = @CUS_NAME,
			--CUS_TEL = @CUS_TEL,
			RES_CODE = @RES_CODE,
			CONSULT_TYPE = @CONSULT_TYPE,
			CONSULT_CONTENT = @CONSULT_CONTENT,
			POINT_YN = @POINT_YN,
			CONSULT_RESULT = @CONSULT_RESULT,
			SMS_SEND_YN = @SMS_SEND_YN,
			FAX_SEND_YN = @FAX_SEND_YN,
			SAVE_TYPE = @SAVE_TYPE,
			CONSULT_FILE_NAME = @CONSULT_FILE_NAME,
			STT_FILE_NAME = @STT_FILE_NAME,
			EDT_DATE = GETDATE(),
			EDT_CODE = @EMP_CODE
		WHERE CONSULT_SEQ = @CONSULT_SEQ
	END

	-- 고객약속 추가/수정/삭제
	SELECT
		@CONSULT_RES_SEQ = CONSULT_RES_SEQ
	FROM sirens.cti.CTI_CONSULT_RESERVATION WITH(NOLOCK)
	WHERE CONSULT_SEQ = @CONSULT_SEQ

	-- 고객약속 저장 데이터가 없는 경우, 동일담당자, 동일고객기준 검색.
	--IF @CONSULT_RES_SEQ IS NULL
	--BEGIN
	--	SELECT
	--		@CONSULT_RES_SEQ = CONSULT_RES_SEQ
	--	FROM (
	--	SELECT
	--		ROW_NUMBER() OVER(ORDER BY CONSULT_RES_DATE DESC) AS RNO,
	--		CONSULT_RES_SEQ
	--	FROM CTI_CONSULT_RESERVATION
	--	WHERE EMP_CODE = @EMP_CODE
	--	AND CUS_NO = @CUS_NO
	--	AND CONSULT_RESULT = '1'
	--	AND CONSULT_RES_DATE > GETDATE()) A
	--	WHERE RNO = 1
	--END

	SELECT
		@CONSULT_RES_SEQ

	--상담저장시 임시저장으로 고객약속이 체크된 상태로 저장되는 현상이 있어서
	-- 고객약속을 하지 않은 상태로 저장했을때 고객약속이 있으면 기존 고객약속을 삭제한다
	IF @CONSULT_RES_SEQ IS NOT NULL AND @RESERVE_YN = '0' AND @CONSULT_CALL_TYPE <> 'V' AND @CONSULT_CALL_TYPE <> 'C'
	BEGIN
		DELETE FROM	sirens.cti.CTI_CONSULT_RESERVATION
				WHERE CONSULT_SEQ = @CONSULT_SEQ AND CONSULT_RES_SEQ = @CONSULT_RES_SEQ
	END

	--예약정보 관리자 비고 업데이트
	IF @CONSULT_EVENT_TYPE = 'E' OR @CONSULT_EVENT_TYPE = 'C'  OR @CONSULT_EVENT_TYPE = 'V'  
	BEGIN

		IF @CONSULT_RES_SEQ IS NULL AND @RES_SAVE_YN = 'Y' 
		BEGIN
			IF @RESERVE_YN = '1'
			BEGIN
				INSERT INTO sirens.cti.CTI_CONSULT_RESERVATION (
					CONSULT_RES_SEQ,
					CONSULT_RES_DATE,
					CONSULT_SEQ,
					CONSULT_TYPE,
					EMP_CODE,
					EMP_NAME,
					TEAM_CODE,
					TEAM_NAME,
					INNER_NUMBER,
					CUS_NO,
					CUS_NAME,
					CUS_TEL,
					CONSULT_RESULT,
					CONSULT_RES_CONTENT,
					NEW_DATE,
					NEW_CODE,
					EDT_DATE,
					EDT_CODE,
					RES_CODE
				)
				VALUES (
					--SELECT
					NEXT VALUE FOR CTI_CONSULT_RES_SEQ,
					CAST((@RESERVE_DATE + ' ' + @RESERVE_TIME) AS DATETIME),
					@CONSULT_SEQ,
					@CONSULT_TYPE,
					@RESERVE_EMP_CODE,
					(SELECT KOR_NAME FROM Diablo.dbo.EMP_MASTER WHERE EMP_CODE = @RESERVE_EMP_CODE),
					@RESERVE_TEAM_CODE,
					(SELECT TEAM_NAME FROM Diablo.dbo.EMP_TEAM WHERE TEAM_CODE = @RESERVE_TEAM_CODE),
					@INNER_NUMBER,
					@CUS_NO,
					@CUS_NAME,
					@CUS_TEL,
					'1',
					NULL,
					GETDATE(),
					@EMP_CODE,
					NULL,
					NULL,
					@RES_CODE
				)
			END
		END
		ELSE
		BEGIN
			IF @RESERVE_YN = '1'
			BEGIN
				UPDATE	sirens.cti.CTI_CONSULT_RESERVATION
				SET CONSULT_RES_DATE = CAST((@RESERVE_DATE + ' ' + @RESERVE_TIME) AS DATETIME),
					CONSULT_SEQ = @CONSULT_SEQ,
					EMP_CODE = @RESERVE_EMP_CODE,
					EMP_NAME = (SELECT KOR_NAME FROM Diablo.dbo.EMP_MASTER WHERE EMP_CODE = @RESERVE_EMP_CODE),
					TEAM_CODE = @RESERVE_TEAM_CODE,
					TEAM_NAME = (SELECT TEAM_NAME FROM Diablo.dbo.EMP_TEAM WHERE TEAM_CODE = @RESERVE_TEAM_CODE),
					INNER_NUMBER = @INNER_NUMBER,
					CUS_NO = @CUS_NO,
					CUS_NAME = @CUS_NAME,
					CUS_TEL = @CUS_TEL,
					RES_CODE = @RES_CODE,
					EDT_DATE = GETDATE(),
					EDT_CODE = @EMP_CODE
				WHERE CONSULT_SEQ = @CONSULT_SEQ
			END
			--ELSE
			--BEGIN
			--	DELETE FROM CTI_CONSULT_RESERVATION
			--	WHERE CONSULT_SEQ = @CONSULT_SEQ
			--END
		END

		IF @RESADMIN_YN = '1'
		BEGIN
			UPDATE Diablo.dbo.RES_MASTER_DAMO
			SET	ETC = ISNULL(ETC,'') + CHAR(13) + CHAR(10) + CONVERT(VARCHAR(10),GETDATE(),120) + CHAR(9) + @CONSULT_CONTENT
			WHERE RES_CODE = @RES_CODE
		END
	END
END

GO
