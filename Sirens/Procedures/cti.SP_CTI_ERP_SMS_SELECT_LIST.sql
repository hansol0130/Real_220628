USE [Sirens]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*================================================================================================================
■ USP_NAME					: SP_CTI_ERP_SMS_SELECT_LIST
■ DESCRIPTION				: ERP SMS내역 조회
■ INPUT PARAMETER			: 
	@CUS_NO					: 고객ID
■ OUTPUT PARAMETER			: 
■ EXEC						: 

	DECLARE @TOTAL_COUNT INT, @KEY VARCHAR(100)
	SELECT @KEY = N'CusNo=4228549'
	exec CTI.SP_CTI_ERP_SMS_SELECT_LIST 1, 5, @TOTAL_COUNT OUTPUT, @KEY
	SELECT @TOTAL_COUNT

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2014-10-18		곽병삼			최초생성
   2014-10-24		김성호			페이징쿼리 추가
   2014-10-25		정지용			담당자 이름 추가
================================================================================================================*/ 

CREATE PROCEDURE [cti].[SP_CTI_ERP_SMS_SELECT_LIST]
--DECLARE
	@PAGE_INDEX		INT,
	@PAGE_SIZE		INT,
	@TOTAL_COUNT	INT OUTPUT,
	@KEY			VARCHAR(100)
AS

SET NOCOUNT ON

	DECLARE @CUS_NO INT;

	SELECT
		@CUS_NO = Diablo.DBO.FN_PARAM(@KEY, 'CusNo');

	SELECT @TOTAL_COUNT = COUNT(*)
	FROM (
	SELECT SMS.SND_NO
	FROM Diablo.dbo.RES_CUSTOMER RES WITH(NOLOCK)
	INNER JOIN Diablo.dbo.RES_SND_SMS SMS WITH(NOLOCK) ON RES.RES_CODE = SMS.RES_CODE
	WHERE RES.CUS_NO = @CUS_NO
	AND SMS.SND_NO NOT IN (
	SELECT
		SMS.SND_NO
	FROM Diablo.dbo.RES_SND_SMS SMS WITH(NOLOCK)
	WHERE SMS.CUS_NO = @CUS_NO)
	UNION ALL
	SELECT
	SMS.SND_NO
	FROM Diablo.dbo.RES_SND_SMS SMS WITH(NOLOCK)
	WHERE SMS.CUS_NO = @CUS_NO) A;

	SELECT
		SMS.SND_NO,
		SMS.SND_TYPE,
		SMS.RCV_NUMBER,
		SMS.RCV_NAME,
		SMS.SND_NUMBER,
		SMS.NEW_CODE,
		SMS.EMP_NAME,
		SMS.BODY,
		SMS.NEW_DATE,
		SMS.SND_RESULT
	FROM (
		SELECT
			SMS.SND_NO,
			SMS.SND_TYPE,
			SMS.RCV_NUMBER1 + '-' + SMS.RCV_NUMBER2 + '-' + SMS.RCV_NUMBER3 AS RCV_NUMBER,
			SMS.RCV_NAME,
			SMS.SND_NUMBER,
			SMS.NEW_CODE,
			EM.KOR_NAME AS [EMP_NAME],
			SMS.BODY,
			CONVERT(VARCHAR(19),SMS.NEW_DATE,120) AS NEW_DATE,
			SMS.SND_RESULT
		FROM Diablo.dbo.RES_CUSTOMER RES WITH(NOLOCK)
		INNER JOIN Diablo.dbo.RES_SND_SMS SMS WITH(NOLOCK) ON RES.RES_CODE = SMS.RES_CODE
		LEFT OUTER JOIN DIABLO.DBO.EMP_MASTER EM ON SMS.NEW_CODE = EM.EMP_CODE
		WHERE RES.CUS_NO = @CUS_NO
		AND SMS.SND_NO NOT IN (
		SELECT
			SMS.SND_NO
		FROM Diablo.dbo.RES_SND_SMS SMS WITH(NOLOCK)
		WHERE SMS.CUS_NO = @CUS_NO)
		UNION ALL
		SELECT
			SMS.SND_NO,
			SMS.SND_TYPE,
			SMS.RCV_NUMBER1 + '-' + SMS.RCV_NUMBER2 + '-' + SMS.RCV_NUMBER3 AS RCV_NUMBER,
			SMS.RCV_NAME,
			SMS.SND_NUMBER,
			SMS.NEW_CODE,
			EM.KOR_NAME AS [EMP_NAME],
			SMS.BODY,
			CONVERT(VARCHAR(19),SMS.NEW_DATE,120) AS NEW_DATE,
			SMS.SND_RESULT
		FROM Diablo.dbo.RES_SND_SMS SMS WITH(NOLOCK)
		LEFT OUTER JOIN DIABLO.DBO.EMP_MASTER EM ON SMS.NEW_CODE = EM.EMP_CODE
		WHERE SMS.CUS_NO = @CUS_NO
	) SMS
	ORDER BY SMS.NEW_DATE DESC
	OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
	ROWS ONLY;

	--SELECT @TOTAL_COUNT = COUNT(*)
	--FROM Diablo.dbo.RES_CUSTOMER RES WITH(NOLOCK)
	--INNER JOIN Diablo.dbo.RES_SND_SMS SMS WITH(NOLOCK) ON RES.RES_CODE = SMS.RES_CODE
	--WHERE RES.CUS_NO = @CUS_NO;

	--SELECT
	--	SMS.SND_NO,
	--	SMS.SND_TYPE,
	--	SMS.RCV_NUMBER1 + '-' + SMS.RCV_NUMBER2 + '-' + SMS.RCV_NUMBER3 AS RCV_NUMBER,
	--	SMS.RCV_NAME,
	--	SMS.SND_NUMBER,
	--	SMS.NEW_CODE,
	--	EM.KOR_NAME AS [EMP_NAME],
	--	SMS.BODY,
	--	CONVERT(VARCHAR(19),SMS.NEW_DATE,120) AS NEW_DATE,
	--	SMS.SND_RESULT
	--FROM Diablo.dbo.RES_CUSTOMER RES WITH(NOLOCK)
	--INNER JOIN Diablo.dbo.RES_SND_SMS SMS WITH(NOLOCK) ON RES.RES_CODE = SMS.RES_CODE
	--LEFT OUTER JOIN DIABLO.DBO.EMP_MASTER EM ON SMS.NEW_CODE = EM.EMP_CODE
	--WHERE RES.CUS_NO = @CUS_NO
	--ORDER BY SMS.NEW_DATE DESC
	--OFFSET ((@PAGE_INDEX - 1) * @PAGE_SIZE) ROWS FETCH NEXT @PAGE_SIZE
	--ROWS ONLY;

SET NOCOUNT OFF
GO
