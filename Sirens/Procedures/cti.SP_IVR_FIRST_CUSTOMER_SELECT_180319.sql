USE [Sirens]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*================================================================================================================
■ USP_NAME					: SP_IVR_FIRST_CUSTOMER_SELECT
■ DESCRIPTION				: 고객 최초 전화 시 고객코드와 해당 상담원정보를 검색
							: IVR 사용 SP는 최종 검색 결과에 대한 순서 수정 불가
■ INPUT PARAMETER			: 
	@TEL1					: 전화번호1
	@TEL2					: 전화번호2
	@TEL3					: 전화번호3
■ OUTPUT PARAMETER			: 
■ EXEC						: 

exec cti.SP_IVR_FIRST_CUSTOMER_SELECT  '010','3792','1432', '4000'

■ MEMO						: 
------------------------------------------------------------------------------------------------------------------
■ CHANGE HISTORY                   
------------------------------------------------------------------------------------------------------------------
   DATE				AUTHOR			DESCRIPTION           
------------------------------------------------------------------------------------------------------------------
   2014-10-16		김성호			최초생성
   2014-10-17		김성호			수신번호에 따라 담당자 정책 변경 (직통번호는 번호 담당자로 연결)
   2014-10-24		김성호			상황별 부서 코드 추가
   2014-10-28		김성호			고객과의 약속 정렬 조건 보강
   2014-10-31		김성호			검색 출처 (1: 고객약속, 2: 상담이력, 3: 예약내역, 기타)
   2014-11-12		김성호			CTI 사용자 중에서만 최적의 상담원을 검색하도록 변경
   2014-11-25		김성호			@변수 혼용으로 인한 오류 수정
   2014-12-02		김성호			내선번호 팀 검색 시 ISNULL 일때 545(서비스혁신) DEFAULT 설정
   2015-01-15		김성호			팀 대표번호 수신에 대한 예외 처리
   2015-01-19		김성호			전화번호 구분값 NUMBER_TYPE 추가 (1: 팀, 2: 개인, 3: 대표)
   2015-01-22		김성호			고객약속 우선순위 변경 (고객약속 등록일이 늦을수록 약속일이 빠를수록)
   2015-06-11		김성호			수신번호제한 고객 예외 처리
   2015-09-04		정지용			휴면계정작업으로 인해 회원조회 변경
   2016-05-04		김성호			특별 고객 우선 연결 작업 추가
   2017-02-22		김성호			오류 테스트를 위해 지정번호 무조건 첫 전화로 인식하는 구문 추가
   2018-03-22		김성호			백업중
================================================================================================================*/
CREATE PROCEDURE [cti].[SP_IVR_FIRST_CUSTOMER_SELECT_180319]
(
	@TEL1			VARCHAR(4),
	@TEL2			VARCHAR(4),
	@TEL3			VARCHAR(4),
	@INNER_NUMBER	VARCHAR(4)
)

AS  
BEGIN

	DECLARE
		@CUS_NO INT, @CUS_NAME VARCHAR(20), @CUS_COUNT INT, @SOURCE INT, @NUMBER_TYPE VARCHAR(1),
		@EMP_CODE VARCHAR(10), @TEAM_INNER_NUMBER VARCHAR(4), @TEAM_CODE VARCHAR(3),
		@MAIN_NUMBER VARCHAR(4), @MAIN_TEAM VARCHAR(3), @NOW DATETIME;

	-- 팀 대표번호 세팅 (변경시 해당 번호 수정)
	-- NUMBER_TYPE (1: 팀, 2: 개인, 3: 대표)
	SELECT @MAIN_NUMBER = '4000', @MAIN_TEAM = '545', @NUMBER_TYPE = '3', @NOW = GETDATE();

	IF EXISTS(SELECT 1 FROM Diablo.dbo.CUS_SPECIAL A WITH(NOLOCK) WHERE A.NO1 = @TEL1 AND A.NO2 = @TEL2 AND A.NO3 = @TEL3 AND A.USE_YN = 'Y')
	BEGIN
		-- 특별 고객 우선 연결
		SELECT
			@CUS_NO = A.CUS_NO,
			@CUS_NAME = B.CUS_NAME,
			@CUS_COUNT = 1,
			@EMP_CODE = A.CONNECT_CODE,
			@TEAM_INNER_NUMBER = C.INNER_NUMBER3,
			@TEAM_CODE = C.TEAM_CODE,
			@SOURCE = '0',
			@NUMBER_TYPE = '2'	-- 개인
		FROM Diablo.dbo.CUS_SPECIAL A WITH(NOLOCK)
		INNER JOIN Diablo.dbo.CUS_CUSTOMER_damo B WITH(NOLOCK) ON A.CUS_NO = B.CUS_NO
		LEFT JOIN Diablo.dbo.EMP_MASTER_damo C WITH(NOLOCK) ON A.CONNECT_CODE = C.EMP_CODE
		WHERE A.NO1 = @TEL1 AND A.NO2 = @TEL2 AND A.NO3 = @TEL3
	END
	ELSE
	BEGIN

		-- 최적의 고객, 상담원 찾기
		WITH LIST AS
		(
			SELECT A.CUS_NO, A.CUS_NAME, A.MEMBER_TYPE, MAX(A.DATE) AS [DATE]
			FROM (
				SELECT A.CUS_NO, A.CUS_NAME, A.CUS_GRADE, (CASE WHEN EDT_DATE IS NULL THEN NEW_DATE ELSE EDT_DATE END) AS [DATE], '2' AS [MEMBER_TYPE]
				FROM Diablo.DBO.CUS_CUSTOMER_damo A WITH(NOLOCK)
				WHERE @TEL1 <> '' AND @TEL2 <> '' AND @TEL3 <> '' AND (
					(A.NOR_TEL1 = @TEL1 AND A.NOR_TEL2 = @TEL2 AND A.NOR_TEL3 = @TEL3) OR 
					(A.COM_TEL1 = @TEL1 AND A.COM_TEL2 = @TEL2 AND A.COM_TEL3 = @TEL3) OR 
					(A.HOM_TEL1 = @TEL1 AND A.HOM_TEL2 = @TEL2 AND A.HOM_TEL3 = @TEL3))
				UNION ALL
				SELECT A.CUS_NO, A.CUS_NAME, A.CUS_GRADE, (CASE WHEN EDT_DATE IS NULL THEN NEW_DATE ELSE EDT_DATE END) AS [DATE], '1' AS [MEMBER_TYPE]
				--FROM Diablo.DBO.CUS_MEMBER A WITH(NOLOCK)      
				FROM (
					SELECT
						A.CUS_NO, A.CUS_ID, A.CUS_PASS, A.CUS_STATE, A.CUS_NAME, A.LAST_NAME, A.FIRST_NAME, A.NICKNAME, A.EMAIL, A.GENDER, A.SOC_NUM1, A.NOR_TEL1, A.NOR_TEL2, A.NOR_TEL3, 
						A.COM_TEL1, A.COM_TEL2, A.COM_TEL3, A.HOM_TEL1, A.HOM_TEL2, A.HOM_TEL3, A.FAX_TEL1, A.FAX_TEL2, A.FAX_TEL3, A.VISA_YN, A.PASS_YN, A.PASS_NUM, A.PASS_EXPIRE, A.PASS_ISSUE, 
						A.[NATIONAL], A.FOREIGNER_YN, A.CUS_GRADE, A.ETC, A.ETC2, A.BIRTHDAY, A.LUNAR_YN, A.RCV_EMAIL_YN, A.RCV_SMS_YN, A.ADDRESS1, A.ADDRESS2, A.ZIP_CODE, A.NEW_CODE,
						A.EDT_MESSAGE, A.OLD_YN, A.CU_YY, A.CU_SEQ, A.RCV_DM_YN, A.POINT_CONSENT, A.POINT_CONSENT_DATE, A.VSOC_NUM, 
						A.IPIN_DUP_INFO, A.IPIN_CONN_INFO, A.IPIN_ACC_DATE, A.TERMS2_YN, A.TERMS3_YN, A.SAFE_ID, A.BIRTH_DATE, A.OCB_AGREE_YN, A.OCB_AGREE_DATE, A.OCB_AGREE_EMP_CODE, A.OCB_CARD_NUM, 
						A.JOIN_TYPE, A.CERT_YN, A.LAST_LOGIN_DATE, A.NEW_DATE, A.EDT_DATE
					FROM Diablo.dbo.CUS_MEMBER A WITH(NOLOCK)
					WHERE CUS_ID IS NOT NULL 
					UNION 
					SELECT
						A.CUS_NO, A.CUS_ID, A.CUS_PASS, A.CUS_STATE, A.CUS_NAME, A.LAST_NAME, A.FIRST_NAME, A.NICKNAME, A.EMAIL, A.GENDER, A.SOC_NUM1, A.NOR_TEL1, A.NOR_TEL2, A.NOR_TEL3, 
						A.COM_TEL1, A.COM_TEL2, A.COM_TEL3, A.HOM_TEL1, A.HOM_TEL2, A.HOM_TEL3, A.FAX_TEL1, A.FAX_TEL2, A.FAX_TEL3, A.VISA_YN, A.PASS_YN, A.PASS_NUM, A.PASS_EXPIRE, A.PASS_ISSUE, 
						A.[NATIONAL], A.FOREIGNER_YN, A.CUS_GRADE, A.ETC, A.ETC2, A.BIRTHDAY, A.LUNAR_YN, A.RCV_EMAIL_YN, A.RCV_SMS_YN, A.ADDRESS1, A.ADDRESS2, A.ZIP_CODE, A.NEW_CODE,
						A.EDT_MESSAGE, A.OLD_YN, A.CU_YY, A.CU_SEQ, A.RCV_DM_YN, A.POINT_CONSENT, A.POINT_CONSENT_DATE, A.VSOC_NUM, 
						A.IPIN_DUP_INFO, A.IPIN_CONN_INFO, A.IPIN_ACC_DATE, A.TERMS2_YN, A.TERMS3_YN, A.SAFE_ID, A.BIRTH_DATE, A.OCB_AGREE_YN, A.OCB_AGREE_DATE, A.OCB_AGREE_EMP_CODE, A.OCB_CARD_NUM, 
						A.JOIN_TYPE, A.CERT_YN, A.LAST_LOGIN_DATE, A.NEW_DATE, A.EDT_DATE
					FROM Diablo.dbo.CUS_MEMBER_SLEEP A WITH(NOLOCK)
				) A
				WHERE @TEL1 <> '' AND @TEL2 <> '' AND @TEL3 <> '' AND (
					(A.NOR_TEL1 = @TEL1 AND A.NOR_TEL2 = @TEL2 AND A.NOR_TEL3 = @TEL3) OR 
					(A.COM_TEL1 = @TEL1 AND A.COM_TEL2 = @TEL2 AND A.COM_TEL3 = @TEL3) OR 
					(A.HOM_TEL1 = @TEL1 AND A.HOM_TEL2 = @TEL2 AND A.HOM_TEL3 = @TEL3))
			) A
			GROUP BY A.CUS_NO, A.CUS_NAME, A.MEMBER_TYPE
		)
		SELECT
			@CUS_NO = A.CUS_NO,
			@CUS_NAME = A.CUS_NAME,
			@CUS_COUNT = (SELECT COUNT(*) FROM Diablo.DBO.CUS_CUSTOMER_damo WITH(NOLOCK) WHERE CUS_NO IN (SELECT CUS_NO FROM LIST)),
			@EMP_CODE = (CASE WHEN C.CODE_TYPE = 'E' THEN C.EMP_CODE ELSE A.EMP_CODE END),
			@TEAM_INNER_NUMBER = (
				CASE
					WHEN C.CODE_TYPE = 'E' THEN @INNER_NUMBER
					WHEN B.INNER_NUMBER3 IS NOT NULL THEN B.INNER_NUMBER3
					WHEN C.CODE_TYPE = 'T' THEN @INNER_NUMBER
					ELSE @MAIN_NUMBER
				END),
			@TEAM_CODE = (
				CASE
					WHEN C.CODE_TYPE = 'E' THEN C.TEAM_CODE
					WHEN A.EMP_CODE IS NOT NULL THEN B.TEAM_CODE
					WHEN C.CODE_TYPE = 'T' THEN C.TEAM_CODE
					WHEN @INNER_NUMBER = @MAIN_NUMBER THEN @MAIN_TEAM	-- 4000 대표번호는 서비스혁신팀 픽스
					WHEN @INNER_NUMBER = '4160' THEN '512'				-- 4160 자유여행번호는 유럽자유여행팀 픽스
					ELSE @MAIN_TEAM
				END),
			@SOURCE = A.FLAG,
			@NUMBER_TYPE = (
				CASE
					WHEN C.CODE_TYPE = 'E' THEN '2'
					WHEN A.EMP_CODE IS NOT NULL THEN '2'
					WHEN C.CODE_TYPE = 'T' AND @INNER_NUMBER = @MAIN_NUMBER THEN '3'
					WHEN C.CODE_TYPE = 'T' THEN '1'
					ELSE '1'
				END)
		FROM (
			SELECT TOP 1 *
			FROM (
				-- 오류테스트를 위한 임시처리
				SELECT '0' AS [FLAG], NULL AS [CUS_NO], NULL AS [CUS_NAME], NULL AS [DATE], NULL AS [EMP_CODE], NULL AS [SEQ]
				WHERE (@TEL1 + @TEL2 + @TEL3) IN ('01037921432', '01099395582', '0221884638')
				UNION ALL
				-- 고객과의 약속 FLAG:1
				SELECT '1' AS [FLAG], AA.CUS_NO AS [CUS_NO], BB.CUS_NAME, AA.CONSULT_RES_DATE AS [DATE], AA.EMP_CODE AS [EMP_CODE]
					, ROW_NUMBER() OVER(ORDER BY AA.NEW_DATE DESC, AA.CONSULT_RES_DATE) AS [SEQ]
				FROM CTI.CTI_CONSULT_RESERVATION AA WITH(NOLOCK)
				INNER JOIN CTI.CTI_CONSULT BB WITH(NOLOCK) ON AA.CONSULT_SEQ = BB.CONSULT_SEQ
				INNER JOIN Diablo.dbo.EMP_MASTER CC WITH(NOLOCK) ON AA.EMP_CODE = CC.EMP_CODE
				WHERE AA.CONSULT_RES_DATE >= DATEADD(M, -1, @NOW) AND AA.CUS_NO IN (SELECT CUS_NO FROM LIST) AND AA.CONSULT_RESULT = '1' AND CC.CTI_USE_YN = 'Y'
				UNION ALL
				-- 상담 내역 FLAG:2
				SELECT '2', AA.CUS_NO, AA.CUS_NAME, AA.CONSULT_DATE, AA.EMP_CODE
					, ROW_NUMBER() OVER(ORDER BY AA.CONSULT_DATE DESC)
				FROM CTI.CTI_CONSULT AA WITH(NOLOCK)
				INNER JOIN Diablo.dbo.EMP_MASTER BB WITH(NOLOCK) ON AA.EMP_CODE = BB.EMP_CODE
				WHERE AA.CONSULT_DATE >= DATEADD(M, -1, @NOW) AND AA.CUS_NO IN (SELECT CUS_NO FROM LIST) AND BB.CTI_USE_YN = 'Y'
				UNION ALL
				-- 예약 정보 출발전고객 FLAG:3, 도착후고객 FLAG:4
				SELECT AA.*, ROW_NUMBER() OVER(ORDER BY AA.DEP_DATE)
				FROM (
					SELECT (CASE WHEN AA.DEP_DATE > @NOW THEN '3' ELSE '4' END) AS [FLAG], AA.CUS_NO, AA.RES_NAME, AA.DEP_DATE, AA.NEW_CODE
					FROM Diablo.DBO.RES_MASTER_damo AA WITH(NOLOCK)
					WHERE AA.ARR_DATE > DATEADD(D, -15, @NOW) AND AA.RES_STATE <> 9 AND AA.CUS_NO IN (SELECT CUS_NO FROM LIST)
					UNION ALL
					SELECT (CASE WHEN AA.DEP_DATE > @NOW THEN '3' ELSE '4' END), BB.CUS_NO, BB.CUS_NAME, AA.DEP_DATE, AA.NEW_CODE
					FROM Diablo.DBO.RES_MASTER_damo AA WITH(NOLOCK)
					INNER JOIN Diablo.DBO.RES_CUSTOMER_damo BB WITH(NOLOCK) ON AA.RES_CODE = BB.RES_CODE
					WHERE AA.ARR_DATE > DATEADD(D, -15, @NOW) AND AA.RES_STATE <> 9 AND BB.RES_STATE <> 1 AND BB.CUS_NO IN (SELECT CUS_NO FROM LIST)
				) AA
				INNER JOIN Diablo.dbo.EMP_MASTER BB WITH(NOLOCK) ON AA.NEW_CODE = BB.EMP_CODE
				WHERE BB.CTI_USE_YN = 'Y'
				UNION ALL
				-- 정회원 FLAG:5
				SELECT '5', AA.CUS_NO, AA.CUS_NAME, AA.DATE, NULL
					, ROW_NUMBER() OVER(ORDER BY AA.MEMBER_TYPE, AA.DATE DESC)	-- 정회원, 가입일 우선
				FROM LIST AA
				UNION ALL
				-- 기록없음 FLAG:6
				SELECT '6', NULL, NULL, NULL, NULL, NULL 
			) A
			ORDER BY A.FLAG, A.SEQ
		) A
		LEFT JOIN Diablo.DBO.EMP_MASTER B WITH(NOLOCK) ON A.EMP_CODE = B.EMP_CODE
		CROSS JOIN (
			SELECT TOP 1 * 
			FROM (
				SELECT TOP 1 'E' AS [CODE_TYPE], A.EMP_CODE, A.TEAM_CODE
				FROM Diablo.dbo.EMP_MASTER A WITH(NOLOCK)
				WHERE A.WORK_TYPE = 1 AND A.INNER_NUMBER3 = @INNER_NUMBER
				ORDER BY A.GROUP_TYPE, A.JOIN_DATE DESC
				UNION ALL
				SELECT TOP 1 'T', NULL, (CASE WHEN @INNER_NUMBER = @MAIN_NUMBER THEN @MAIN_TEAM ELSE A.TEAM_CODE END) 
				FROM Diablo.dbo.EMP_TEAM A WITH(NOLOCK)
				WHERE CHARINDEX(@INNER_NUMBER, A.KEY_NUMBER) > 0 AND A.USE_YN = 'Y' AND A.VIEW_YN = 'Y' AND A.TEAM_TYPE > 0
				UNION ALL
				-- 무조건 행 출력을 위한 디폴트값
				SELECT 'Z', NULL, NULL
			) A
			ORDER BY CODE_TYPE

			--SELECT (SELECT TOP 1 A.EMP_CODE FROM Diablo.DBO.EMP_MASTER A WITH(NOLOCK) WHERE A.WORK_TYPE = 1 AND A.INNER_NUMBER3 = @INNER_NUMBER ORDER BY A.GROUP_TYPE, A.JOIN_DATE DESC) AS [EMP_CODE]
		) C

	END

	-- 고객의 최신예약 정보
	SELECT *
	FROM (
		SELECT
			@EMP_CODE AS [EMP_CODE], @TEAM_INNER_NUMBER AS [INNER_NUMBER], @TEAM_CODE AS [TEAM_CODE], 
			@CUS_NO AS [CUS_NO], @CUS_NAME AS [CUS_NAME], @CUS_COUNT AS [CUS_COUNT], @SOURCE AS [SOURCE], @NUMBER_TYPE AS [NUMBER_TYPE]
	) A
	CROSS JOIN (
		SELECT TOP 1 A.PRO_CODE, A.PRICE_SEQ, A.RES_CODE
		FROM (
			SELECT A.RES_CODE, A.PRICE_SEQ, A.PRO_CODE, A.DEP_DATE
			FROM Diablo.DBO.RES_MASTER_damo A WITH(NOLOCK)
			WHERE A.DEP_DATE > @NOW AND A.RES_STATE <= 7 AND A.CUS_NO = @CUS_NO
			UNION ALL
			SELECT A.RES_CODE, A.PRICE_SEQ, A.PRO_CODE, A.DEP_DATE
			FROM Diablo.DBO.RES_MASTER_damo A WITH(NOLOCK)
			INNER JOIN Diablo.DBO.RES_CUSTOMER_damo B WITH(NOLOCK) ON A.RES_CODE = B.RES_CODE
			WHERE A.DEP_DATE > @NOW AND A.RES_STATE <= 7 AND B.RES_STATE = 0 AND B.CUS_NO = @CUS_NO
			UNION ALL
			-- 무조건 행 출력을 위한 디폴트값
			SELECT NULL, NULL, NULL, '2999-12-31'
		) A
		ORDER BY A.DEP_DATE
	) B

END

GO
